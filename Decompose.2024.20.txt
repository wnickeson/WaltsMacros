'MacroName:Decompose.2024.20
'MacroDescription:Decomposes precomposed Latin script characters.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
' https://orcid.org/0000-0003-0484-6938
'
' This macro is in part based on Joel Hahn's macro "CvtDiacritics," available at
' http://www.hahnlibrary.net/libraries/oml/macros/CvtDiacritics.txt, last modified 1 May
' 2017, but all responsibility for the functionality and appearance of this macro are
' mine alone.
'
' Last updated: 20 July 2024.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Place the cursor in a field in a record and run it to convert any
' precomposed Latin characters to their component character sequences. A "precomposed"
' character is also called a "decomposable" character, and is defined in the Unicode
' standard as "a character that is equivalent to a sequence of one or more other
' characters." The Connexion client doesn't seem to care much if precomposed characters
' are used in a record while it's being edited, because it converts characters upon
' export, if necessary, but this macro may help other macros execute properly. If a macro
' is designed to work on decomposed characters, it may fail if it comes across
' precomposed characters. Run this macro to make the change.
'
' This macro performs only canonical decompositions--that is, the sequence of characters
' produced by the macro when it decomposes a character is exactly equivalent to that
' character. Compatible decomposition, on the other hand, does not produce equivalent
' sequences. For example, the Latin capital ligature "IJ" (unable to be produced in this
' macro documentation) may appear to be composed of the two letters "I" and "J", but it
' is not actually decomposable. The substitution of the two letters "I" and "J" for the
' single ligature character "IJ" is a compatible equivalence, not canonical. Joel Hahn's
' macro "CvtDiacritics," on which this macro is in part modeled, produces some compatible
' decompositions.
'
' If non-MARC characters are found during decomposition, the macro can identify them, if
' desired, by converting them either to fill characters or to their code points within
' braces (for example, "{01EE}").
'
' The precomposed characters this macro can work with are those found in Unicode blocks
' Latin Extended-A (U+0100-U+017F), Latin Extended-B (U+0180-U+024F), and Latin Extended
' Additional (U+1E00-U+1EFF). They include the characters found in Windows-1252, the
' common accented letters of Western alphabets (å, ç, ê, í, ñ, ò, ü, etc.). All Unicode
' information is from version 15.1. Joel Hahn's "CvtDiacritics" macro must have been
' based on Unicode version 9, released on 21 June 2016, and in effect on the date of the
' last modification of his macro, although the macro lacks documentation on its sources.
'
' My macro "PasteUnformattedPlus" also decomposes some precomposed characters when it
' pastes copied text into a Connexion record.
'****************************************************************************************

Option Compare Text
Option Explicit

Declare Sub FillCharactersExtendedA_B
Declare Sub FillCharactersExtendedAdditional
Declare Sub FillMARC_Latin

Global Const DECOMP     As Integer = 1
Global Const PRECOMP    As Integer = 0

Global ACUTE            As String*8
Global ae_LIGATURE_LC   As String*8
Global AE_LIGATURE_UC   As String*8
Global BREVE            As String*8
Global BREVE_BELOW      As String*8
Global CARON            As String*8
Global CEDILLA          As String*8
Global CIRCUMFLEX       As String*8
Global CIRCUMFLEX_BELOW As String*8 'Not a MARC-8 character
Global COMMA_BELOW      As String*8
Global DELIMITER        As String*8
Global DIAERESIS        As String*8
Global DIAERESIS_BELOW  As String*8
Global DOT_ABOVE        As String*8
Global DOT_BELOW        As String*8
Global DOUBLE_ACUTE     As String*8
Global DOUBLE_GRAVE     As String*8 'Not a MARC-8 character
Global ezh_LC           As String*8 'yogh, tailed z; not a MARC-8 character
Global EZH_UC           As String*8 'Yogh, Tailed Z; not a MARC-8 character
Global GRAVE            As String*8
Global HOOK_ABOVE       As String*8
Global HORN             As String*8 'Not a MARC-8 character
Global INVERTED_BREVE   As String*8 'Not a MARC-8 character
Global LONG_S           As String*8 'Not a MARC-8 character
Global MACRON           As String*8
Global MACRON_BELOW     As String*8 'Not a MARC-8 character
Global OGONEK           As String*8
Global o_SLASH_LC       As String*8
Global O_SLASH_UC       As String*8
Global RING_ABOVE       As String*8
Global RING_BELOW       As String*8
Global TILDE            As String*8
Global TILDE_BELOW      As String*8 'Not a MARC-8 character

Global WaltsMacros$

Global Characters() As String
Global MARC_Latin( 66 ) As String

'****************************************************************************************

Sub Main

Const CRITICAL_MESSAGE     As Integer = 16
Const DLG_STATEMENT_CANCEL As Integer = 102
Const INFORMATION_MESSAGE  As Integer = 64

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Dim CandidateNCR$
Dim ChangeCount$
Dim CharA%
Dim CharT$
Dim CharToAdd$
Dim Compare%
Dim CurrentColumn%
Dim DecomposedCharCount%
Dim EditStatus$
Dim FieldData$
Dim High%
Dim Low%
Dim Middle%
Dim NewCodePointField$
Dim NewField$
Dim NewFillCharField$
Dim OriginalField$
Dim PrecomposedNCR$
Dim Result%
Dim Row%
Dim Start%
Dim TestNCR$
Dim TypeOfWindow%

Dim MARC_Char

Dim i as Integer, p As Integer

' In order by code point.

AE_LIGATURE_UC   = "&#x00C6;"
O_SLASH_UC       = "&#x00D8;"
ae_LIGATURE_LC   = "&#x00E6;"
o_SLASH_LC       = "&#x00F8;"
LONG_S           = "&#x017F;" 'Not a MARC-8 character
EZH_UC           = "&#x01B7;" 'Not a MARC-8 character
DELIMITER        = "&#x01C2;"
ezh_LC           = "&#x0292;" 'Not a MARC-8 character
GRAVE            = "&#x0300;"
ACUTE            = "&#x0301;"
CIRCUMFLEX       = "&#x0302;"
TILDE            = "&#x0303;"
MACRON           = "&#x0304;"
BREVE            = "&#x0306;"
DOT_ABOVE        = "&#x0307;" 'Superior dot
DIAERESIS        = "&#x0308;" 'Umlaut
HOOK_ABOVE       = "&#x0309;" 'Pseudo question mark
RING_ABOVE       = "&#x030A;" 'Circle above, angstrom
DOUBLE_ACUTE     = "&#x030B;"
CARON            = "&#x030C;" 'Hacek
DOUBLE_GRAVE     = "&#x030F;" 'Not a MARC-8 character
INVERTED_BREVE   = "&#x0311;" 'Not a MARC-8 character
HORN             = "&#x031B;" 'Not a MARC-8 character
DOT_BELOW        = "&#x0323;"
DIAERESIS_BELOW  = "&#x0324;" 'Double dot below
RING_BELOW       = "&#x0325;" 'Circle below
COMMA_BELOW      = "&#x0326;" 'Left hook
CEDILLA          = "&#x0327;"
OGONEK           = "&#x0328;" 'Right hook
CIRCUMFLEX_BELOW = "&#x032D;" 'Not a MARC-8 character
BREVE_BELOW      = "&#x032E;" 'Upadhmaniya
TILDE_BELOW      = "&#x0330;" 'Not a MARC-8 character
MACRON_BELOW     = "&#x0331;" 'Not a MARC-8 character

WaltsMacros$     = "[Walt's macros] Extras3:Decompose"

' First, make sure a record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 5 To 11, 13, 15 To 16, 21 To 25
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

Row% = CS.CursorRow

' Then check that the field contains only Latin script characters.

If CS.GetField( "...", Row%, FieldData$ ) Then
    If FieldData$ = "Data contains non-latin script" Then
        MsgBox "Sorry, this macro works only on fields containing Latin script!", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If
End If

' If the field is good to go, examine it for precomposed characters. The key insight from
' Joel Hahn's macro "CvtDiacritics" is that adding a Unicode character to a field affects
' the result of the "GetFieldUnicode" command. That addition forces the command to show
' all characters in the field whose Unicode code points lie above hex FE as Numeric
' Character References, rather than as ASCII. Those characters include the delimiter,
' combining diacritical marks, and subscript and superscript characters (with the
' exception of superscript 1, 2, and 3; these three characters are shown encoded as
' decimal 128-130). Because those marks and characters are (apparently) encoded as NCRs
' rather than as ASCII, all remaining characters in the field that are encoded as
' extended ASCII (decimal values 128-254), which for decimal values 192-254 are for the
' most part precomposed characters, can be treated as such and safely decomposed into
' ANSEL (American National Standard for Extended Latin Alphabet Coded Character Set for
' Bibliographic Use) characters.
'
' My own experimentation suggests that the hex value of the inserted Unicode character
' that causes this change in behavior must be above 036F. Therefore, this macro inserts
' the character "GREEK ANO TELEIA" (hex 0387), which appears as a middle dot, as the
' first character in the field. Its presence forces conversion or re-encoding of the
' MARC-8 characters. The modified string is retrieved with the "GetFieldUnicode" command,
' and then the "GREEK ANO TELEIA" is immediately deleted. Unfortunately, the backspace
' that causes that deletion doesn't always happen. If the field contains characters that
' will be decomposed, the character will be removed anyway; but if nothing needs to be
' decomposed, one option to remove the "GREEK ANO TELEIA" is to simply undo the change.
' That's only appropriate, though, if the record is otherwise unedited, so get the
' record's edit status before anything is done. (Note that the "QueryRecordStatus"
' command moves the cursor to the first row. That means moving the cursor back to the row
' under consideration.) If the status shows that the record has already been edited, the
' other option to get rid of the character is to replace the field with the original
' version.

If CS.QueryRecordStatus( "EDIT", EditStatus$ ) = FALSE Then
    EditStatus$ = "Y"
End If
CS.CursorRow = Row%

CS.CursorColumn = 6
CS.InsertText( "&#x0387;" )
If CS.GetFieldUnicode( "...", Row%, FieldData$ ) = FALSE Then
    MsgBox "Sorry, this macro couldn't get the data in the field to analyze.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
  Else
    If Mid$( FieldData$, 6, 8 ) = "&#x0387;" Then
        OriginalField$ = Left$( FieldData$, 5 ) & Mid$( FieldData$, 14 )
    End If

' On the chance that the backspace command fails because of the speed of execution of the
' macro, this useless Do...Loop may slow things down enough.

    i = 0
    Do
      i = i + 1
    Loop Until i = 10000
    CS.Backspace
End If

' Fill the arrays. The large array that matches the precomposed and decomposed characters
' must be filled in two steps, because of a limit on the size of procedures in OML.

FillCharactersExtendedA_B
FillCharactersExtendedAdditional
FillMARC_Latin

NewField$ = Left$( FieldData$, 5 )

' Go through the field, character by character, copying unchanged characters to the new
' field, and adding converted ones. Basic ASCII characters are simply copied.

i = 14
Do
  CharT$ = Mid$( FieldData$, i, 1 )
  CharA% = Asc( CharT$ )
  Select Case CharA%
    Case 32 To 37, 39 To 126
      CharToAdd$ = CharT$

' The ampersand could be the beginning of a Numeric Character Reference. If it is,
' extract the Unicode code point from it and see if it can be decomposed. A character
' that can't be decomposed has its NCR copied to the new field. If it can be decomposed,
' add the equivalent sequence to the new field. The delimiter character is added in its
' MARC encoding.

    Case 38
      If Mid$( FieldData$, i, 3 ) = "&#x" Then
          p = InStr( i, FieldData$, ";" )
          If p > 0 Then
              CandidateNCR$ = Mid$( FieldData$, i + 3, ( p - i ) - 3 )
              If CandidateNCR$ = "01C2" Then
                  CharToAdd$ = DELIMITER
                  CharT$     = CharToAdd$
                Else

' Execute a binary search to determine if the NCR of the character in the field is
' precomposed.

                  High%      = 443
                  Low%       = 0
                  Do While Low% <= High%
                    Middle%  = Int( ( High% + Low% ) / 2 )
                    PrecomposedNCR$ = Characters( PRECOMP, Middle% )
                    Compare% = StrComp( PrecomposedNCR$, CandidateNCR$ )
                    Select Case Compare%
                      Case -1
                        Low%    = Middle% + 1
                      Case 0
                        Result% = Middle%
                        Exit Do
                      Case 1
                        High%   = Middle% - 1
                    End Select
                  Loop
                  If PrecomposedNCR$ = CandidateNCR$ Then
                      CharToAdd$ = Characters( DECOMP, Result% )
                    Else
                      CharToAdd$ = "&#x" & CandidateNCR$ & ";"
                      CharT$     = CharToAdd$
                  End If
              End If
          End If
          i = p
        Else
          CharToAdd$ = CharT$
      End If

' Precomposed characters encoded in extended ASCII are decomposed, but all other
' characters in that range are left alone.

    Case 138
      CharToAdd$ = "S" & CARON
    Case 142
      CharToAdd$ = "Z" & CARON
    Case 154
      CharToAdd$ = "s" & CARON
    Case 158
      CharToAdd$ = "z" & CARON
    Case 159
      CharToAdd$ = "Y" & DIAERESIS
    Case 192
      CharToAdd$ = "A" & GRAVE
    Case 193
      CharToAdd$ = "A" & ACUTE
    Case 194
      CharToAdd$ = "A" & CIRCUMFLEX
    Case 195
      CharToAdd$ = "A" & TILDE
    Case 196
      CharToAdd$ = "A" & DIAERESIS
    Case 197
      CharToAdd$ = "A" & RING_ABOVE
    Case 199
      CharToAdd$ = "C" & CEDILLA
    Case 200
      CharToAdd$ = "E" & GRAVE
    Case 201
      CharToAdd$ = "E" & ACUTE
    Case 202
      CharToAdd$ = "E" & CIRCUMFLEX
    Case 203
      CharToAdd$ = "E" & DIAERESIS
    Case 204
      CharToAdd$ = "I" & GRAVE
    Case 205
      CharToAdd$ = "I" & ACUTE
    Case 206
      CharToAdd$ = "I" & CIRCUMFLEX
    Case 207
      CharToAdd$ = "I" & DIAERESIS
    Case 209
      CharToAdd$ = "N" & TILDE
    Case 210
      CharToAdd$ = "O" & GRAVE
    Case 211
      CharToAdd$ = "O" & ACUTE
    Case 212
      CharToAdd$ = "O" & CIRCUMFLEX
    Case 213
      CharToAdd$ = "O" & TILDE
    Case 214
      CharToAdd$ = "O" & DIAERESIS
    Case 217
      CharToAdd$ = "U" & GRAVE
    Case 218
      CharToAdd$ = "U" & ACUTE
    Case 219
      CharToAdd$ = "U" & CIRCUMFLEX
    Case 220
      CharToAdd$ = "U" & DIAERESIS
    Case 221
      CharToAdd$ = "Y" & ACUTE
    Case 224
      CharToAdd$ = "a" & GRAVE
    Case 225
      CharToAdd$ = "a" & ACUTE
    Case 226
      CharToAdd$ = "a" & CIRCUMFLEX
    Case 227
      CharToAdd$ = "a" & TILDE
    Case 228
      CharToAdd$ = "a" & DIAERESIS
    Case 229
      CharToAdd$ = "a" & RING_ABOVE
    Case 231
      CharToAdd$ = "c" & CEDILLA
    Case 232
      CharToAdd$ = "e" & GRAVE
    Case 233
      CharToAdd$ = "e" & ACUTE
    Case 234
      CharToAdd$ = "e" & CIRCUMFLEX
    Case 235
      CharToAdd$ = "e" & DIAERESIS
    Case 236
      CharToAdd$ = "i" & GRAVE
    Case 237
      CharToAdd$ = "i" & ACUTE
    Case 238
      CharToAdd$ = "i" & CIRCUMFLEX
    Case 239
      CharToAdd$ = "i" & DIAERESIS
    Case 241
      CharToAdd$ = "n" & TILDE
    Case 242
      CharToAdd$ = "o" & GRAVE
    Case 243
      CharToAdd$ = "o" & ACUTE
    Case 244
      CharToAdd$ = "o" & CIRCUMFLEX
    Case 245
      CharToAdd$ = "o" & TILDE
    Case 246
      CharToAdd$ = "o" & DIAERESIS
    Case 249
      CharToAdd$ = "u" & GRAVE
    Case 250
      CharToAdd$ = "u" & ACUTE
    Case 251
      CharToAdd$ = "u" & CIRCUMFLEX
    Case 252
      CharToAdd$ = "u" & DIAERESIS
    Case 253
      CharToAdd$ = "y" & ACUTE
    Case 255
      CharToAdd$ = "y" & DIAERESIS
    Case Else
      CharToAdd$ = CharT$

  End Select
  If CharToAdd$ <> CharT$ Then
      DecomposedCharCount% = DecomposedCharCount% + 1
  End If
  i = i + 1
  NewField$ = NewField$ & CharToAdd$
Loop Until i > Len( FieldData$ )

Start% = 1
Do
  p = InStr( Start%, NewField$, "&#x", 1 )
  If p = 0 Then
      Exit Do
    Else
      TestNCR$  = Mid$( NewField$, p + 3, 4 )
      If TestNCR$ <> "01C2" Then
          MARC_Char = FALSE
          For i = 0 To 66
            If TestNCR$ = MARC_Latin( i ) Then
                MARC_Char = TRUE
                Exit For
            End If
          Next i
          If MARC_Char = FALSE Then
              NewFillCharField$  = Left$( NewField$, p - 1 ) & Chr$( 252 ) & Mid$( NewField$, p + 8 )
              NewCodePointField$ = Left$( NewField$, p - 1 ) & "{" & TestNCR$ & "}" & Mid$( NewField$, p + 8 )
          End If
      End If
      Start% = p + 1
  End If
Loop Until p = 0

If DecomposedCharCount% = 0 Then

    MsgBox "There were no characters in this field that could be decomposed.", INFORMATION_MESSAGE, WaltsMacros$

' Sometimes the backspace command that is supposed to remove the "GREEK ANO TELEIA" does
' not execute, and the character remains in place. When that happens, the simplest
' solution is to cancel all changes to the record with the "CancelChanges" command, which
' restores it to its original state. That solution isn't appropriate, however, if the
' record's edit status is "Y". In that case, the solution is to replace the field with
' the original version.

    If CS.GetFieldUnicode( "...", Row%, FieldData$ ) Then
        If EditStatus$ = "Y" Then
            If Mid$( FieldData$, 6, 8 ) = "&#x0387;" Then
                If CS.SetFieldLine( Row%, OriginalField$ ) = FALSE Then
                MsgBox "Sorry, an unexplained error occurred.", CRITICAL_MESSAGE, WaltsMacros$
                End If
            End If
          Else
            CS.CancelChanges
        End If
    End If
    CS.CursorRow = Row%

  Else

    If NewFillCharField$ <> "" Then
        Begin Dialog Dialog1Definition  192, 98, WaltsMacros$
          OkButton        70,  74,  52,  14
          CancelButton   130,  74,  52,  14
          Text            10,   6, 172,  16, "Non-MARC characters were found in the process of decomposition. Identify them?"
          OptionGroup                                                                                                             .OptionGroup1
           OptionButton   16,  26, 128,  12, "&Ignore them",                                                                      .OptionButton1
           OptionButton   16,  40, 128,  12, "Show them as &fill characters",                                                     .OptionButton2
           OptionButton   16,  54, 128,  12, "Show them as &code points",                                                         .OptionButton3
        End Dialog

        Dim Dialog1 As Dialog1Definition
        On Error Resume Next
        Dialog Dialog1
        If Err = DLG_STATEMENT_CANCEL Then Exit Sub

        If Dialog1.OptionGroup1 = 1 Then
            NewField$ = NewFillCharField$
          ElseIf Dialog1.OptionGroup1 = 2 Then
            NewField$ = NewCodePointField$
        End If
    End If

    Select Case DecomposedCharCount%
      Case 1
        ChangeCount$ = "1 character in this field was"
      Case Else
        ChangeCount$ = Trim$( Str$( DecomposedCharCount% ) ) & " characters in this field were"
    End Select
    If CS.SetFieldLine( CS.CursorRow, NewField$ ) Then
        MsgBox ChangeCount$ & " decomposed.", INFORMATION_MESSAGE, WaltsMacros$
      Else
        MsgBox "Sorry, the macro could not replace the field.", CRITICAL_MESSAGE, WaltsMacros$
    End If
End If
CS.CursorColumn = CurrentColumn%

End Sub

'****************************************************************************************

Sub FillCharactersExtendedA_B

' In this array, the first dimension is the Unicode code point of a precomposed
' character, and the second dimension is the sequence of non-decomposable characters that
' comprise it. This list contains all the precomposed characters in Unicode blocks Latin
' Extended-A (U+0100-U+017F), Latin Extended-B (U+0180-U+024F), and Latin Extended
' Additional (U+1E00-U+1EFF), Unicode version 15.1. It does not include "Compatibility
' Decomposable Characters," characters that merely resemble other characters. For
' example, the character Latin capital ligature "IJ" looks like it is made up of the two
' letters "I" and "J", but it is actually not, and so being non-decomposable does not
' appear here.
'
' Filling the array is split into two subroutines because of an OML limit on procedure
' size. The first sub starts the array with characters from the Unicode blocks Latin
' Extended-A and -B; the second completes the array with characters from the Latin
' Extended Additional block.

ReDim Characters( 1, 443 )

Characters( PRECOMP, 0   ) = "0100" : Characters( DECOMP, 0   ) = "A" & MACRON
Characters( PRECOMP, 1   ) = "0101" : Characters( DECOMP, 1   ) = "a" & MACRON
Characters( PRECOMP, 2   ) = "0102" : Characters( DECOMP, 2   ) = "A" & BREVE
Characters( PRECOMP, 3   ) = "0103" : Characters( DECOMP, 3   ) = "a" & BREVE
Characters( PRECOMP, 4   ) = "0104" : Characters( DECOMP, 4   ) = "A" & OGONEK
Characters( PRECOMP, 5   ) = "0105" : Characters( DECOMP, 5   ) = "a" & OGONEK
Characters( PRECOMP, 6   ) = "0106" : Characters( DECOMP, 6   ) = "C" & ACUTE
Characters( PRECOMP, 7   ) = "0107" : Characters( DECOMP, 7   ) = "c" & ACUTE
Characters( PRECOMP, 8   ) = "0108" : Characters( DECOMP, 8   ) = "C" & CIRCUMFLEX
Characters( PRECOMP, 9   ) = "0109" : Characters( DECOMP, 9   ) = "c" & CIRCUMFLEX
Characters( PRECOMP, 10  ) = "010A" : Characters( DECOMP, 10  ) = "C" & DOT_ABOVE
Characters( PRECOMP, 11  ) = "010B" : Characters( DECOMP, 11  ) = "c" & DOT_ABOVE
Characters( PRECOMP, 12  ) = "010C" : Characters( DECOMP, 12  ) = "C" & CARON
Characters( PRECOMP, 13  ) = "010D" : Characters( DECOMP, 13  ) = "c" & CARON
Characters( PRECOMP, 14  ) = "010E" : Characters( DECOMP, 14  ) = "D" & CARON
Characters( PRECOMP, 15  ) = "010F" : Characters( DECOMP, 15  ) = "d" & CARON
Characters( PRECOMP, 16  ) = "0112" : Characters( DECOMP, 16  ) = "E" & MACRON
Characters( PRECOMP, 17  ) = "0113" : Characters( DECOMP, 17  ) = "e" & MACRON
Characters( PRECOMP, 18  ) = "0114" : Characters( DECOMP, 18  ) = "E" & BREVE
Characters( PRECOMP, 19  ) = "0115" : Characters( DECOMP, 19  ) = "e" & BREVE
Characters( PRECOMP, 20  ) = "0116" : Characters( DECOMP, 20  ) = "E" & DOT_ABOVE
Characters( PRECOMP, 21  ) = "0117" : Characters( DECOMP, 21  ) = "e" & DOT_ABOVE
Characters( PRECOMP, 22  ) = "0118" : Characters( DECOMP, 22  ) = "E" & OGONEK
Characters( PRECOMP, 23  ) = "0119" : Characters( DECOMP, 23  ) = "e" & OGONEK
Characters( PRECOMP, 24  ) = "011A" : Characters( DECOMP, 24  ) = "E" & CARON
Characters( PRECOMP, 25  ) = "011B" : Characters( DECOMP, 25  ) = "e" & CARON
Characters( PRECOMP, 26  ) = "011C" : Characters( DECOMP, 26  ) = "G" & CIRCUMFLEX
Characters( PRECOMP, 27  ) = "011D" : Characters( DECOMP, 27  ) = "g" & CIRCUMFLEX
Characters( PRECOMP, 28  ) = "011E" : Characters( DECOMP, 28  ) = "G" & BREVE
Characters( PRECOMP, 29  ) = "011F" : Characters( DECOMP, 29  ) = "g" & BREVE
Characters( PRECOMP, 30  ) = "0120" : Characters( DECOMP, 30  ) = "G" & DOT_ABOVE
Characters( PRECOMP, 31  ) = "0121" : Characters( DECOMP, 31  ) = "g" & DOT_ABOVE
Characters( PRECOMP, 32  ) = "0122" : Characters( DECOMP, 32  ) = "G" & CEDILLA
Characters( PRECOMP, 33  ) = "0123" : Characters( DECOMP, 33  ) = "g" & CEDILLA
Characters( PRECOMP, 34  ) = "0124" : Characters( DECOMP, 34  ) = "H" & CIRCUMFLEX
Characters( PRECOMP, 35  ) = "0125" : Characters( DECOMP, 35  ) = "h" & CIRCUMFLEX
Characters( PRECOMP, 36  ) = "0128" : Characters( DECOMP, 36  ) = "I" & TILDE
Characters( PRECOMP, 37  ) = "0129" : Characters( DECOMP, 37  ) = "i" & TILDE
Characters( PRECOMP, 38  ) = "012A" : Characters( DECOMP, 38  ) = "I" & MACRON
Characters( PRECOMP, 39  ) = "012B" : Characters( DECOMP, 39  ) = "i" & MACRON
Characters( PRECOMP, 40  ) = "012C" : Characters( DECOMP, 40  ) = "I" & BREVE
Characters( PRECOMP, 41  ) = "012D" : Characters( DECOMP, 41  ) = "i" & BREVE
Characters( PRECOMP, 42  ) = "012E" : Characters( DECOMP, 42  ) = "I" & OGONEK
Characters( PRECOMP, 43  ) = "012F" : Characters( DECOMP, 43  ) = "i" & OGONEK
Characters( PRECOMP, 44  ) = "0130" : Characters( DECOMP, 44  ) = "I" & DOT_ABOVE
Characters( PRECOMP, 45  ) = "0134" : Characters( DECOMP, 45  ) = "J" & CIRCUMFLEX
Characters( PRECOMP, 46  ) = "0135" : Characters( DECOMP, 46  ) = "j" & CIRCUMFLEX
Characters( PRECOMP, 47  ) = "0136" : Characters( DECOMP, 47  ) = "K" & CEDILLA
Characters( PRECOMP, 48  ) = "0137" : Characters( DECOMP, 48  ) = "k" & CEDILLA
Characters( PRECOMP, 49  ) = "0139" : Characters( DECOMP, 49  ) = "L" & ACUTE
Characters( PRECOMP, 50  ) = "013A" : Characters( DECOMP, 50  ) = "l" & ACUTE
Characters( PRECOMP, 51  ) = "013B" : Characters( DECOMP, 51  ) = "L" & CEDILLA
Characters( PRECOMP, 52  ) = "013C" : Characters( DECOMP, 52  ) = "l" & CEDILLA
Characters( PRECOMP, 53  ) = "013D" : Characters( DECOMP, 53  ) = "L" & CARON
Characters( PRECOMP, 54  ) = "013E" : Characters( DECOMP, 54  ) = "l" & CARON
Characters( PRECOMP, 55  ) = "0143" : Characters( DECOMP, 55  ) = "N" & ACUTE
Characters( PRECOMP, 56  ) = "0144" : Characters( DECOMP, 56  ) = "n" & ACUTE
Characters( PRECOMP, 57  ) = "0145" : Characters( DECOMP, 57  ) = "N" & CEDILLA
Characters( PRECOMP, 58  ) = "0146" : Characters( DECOMP, 58  ) = "n" & CEDILLA
Characters( PRECOMP, 59  ) = "0147" : Characters( DECOMP, 59  ) = "N" & CARON
Characters( PRECOMP, 60  ) = "0148" : Characters( DECOMP, 60  ) = "n" & CARON
Characters( PRECOMP, 61  ) = "014C" : Characters( DECOMP, 61  ) = "O" & MACRON
Characters( PRECOMP, 62  ) = "014D" : Characters( DECOMP, 62  ) = "o" & MACRON
Characters( PRECOMP, 63  ) = "014E" : Characters( DECOMP, 63  ) = "O" & BREVE
Characters( PRECOMP, 64  ) = "014F" : Characters( DECOMP, 64  ) = "o" & BREVE
Characters( PRECOMP, 65  ) = "0150" : Characters( DECOMP, 65  ) = "O" & DOUBLE_ACUTE
Characters( PRECOMP, 66  ) = "0151" : Characters( DECOMP, 66  ) = "o" & DOUBLE_ACUTE
Characters( PRECOMP, 67  ) = "0154" : Characters( DECOMP, 67  ) = "R" & ACUTE
Characters( PRECOMP, 68  ) = "0155" : Characters( DECOMP, 68  ) = "r" & ACUTE
Characters( PRECOMP, 69  ) = "0156" : Characters( DECOMP, 69  ) = "R" & CEDILLA
Characters( PRECOMP, 70  ) = "0157" : Characters( DECOMP, 70  ) = "r" & CEDILLA
Characters( PRECOMP, 71  ) = "0158" : Characters( DECOMP, 71  ) = "R" & CARON
Characters( PRECOMP, 72  ) = "0159" : Characters( DECOMP, 72  ) = "r" & CARON
Characters( PRECOMP, 73  ) = "015A" : Characters( DECOMP, 73  ) = "S" & ACUTE
Characters( PRECOMP, 74  ) = "015B" : Characters( DECOMP, 74  ) = "s" & ACUTE
Characters( PRECOMP, 75  ) = "015C" : Characters( DECOMP, 75  ) = "S" & CIRCUMFLEX
Characters( PRECOMP, 76  ) = "015D" : Characters( DECOMP, 76  ) = "s" & CIRCUMFLEX
Characters( PRECOMP, 77  ) = "015E" : Characters( DECOMP, 77  ) = "S" & CEDILLA
Characters( PRECOMP, 78  ) = "015F" : Characters( DECOMP, 78  ) = "s" & CEDILLA
Characters( PRECOMP, 79  ) = "0160" : Characters( DECOMP, 79  ) = "S" & CARON
Characters( PRECOMP, 80  ) = "0161" : Characters( DECOMP, 80  ) = "s" & CARON
Characters( PRECOMP, 81  ) = "0162" : Characters( DECOMP, 81  ) = "T" & CEDILLA
Characters( PRECOMP, 82  ) = "0163" : Characters( DECOMP, 82  ) = "t" & CEDILLA
Characters( PRECOMP, 83  ) = "0164" : Characters( DECOMP, 83  ) = "T" & CARON
Characters( PRECOMP, 84  ) = "0165" : Characters( DECOMP, 84  ) = "t" & CARON
Characters( PRECOMP, 85  ) = "0168" : Characters( DECOMP, 85  ) = "U" & TILDE
Characters( PRECOMP, 86  ) = "0169" : Characters( DECOMP, 86  ) = "u" & TILDE
Characters( PRECOMP, 87  ) = "016A" : Characters( DECOMP, 87  ) = "U" & MACRON
Characters( PRECOMP, 88  ) = "016B" : Characters( DECOMP, 88  ) = "u" & MACRON
Characters( PRECOMP, 89  ) = "016C" : Characters( DECOMP, 89  ) = "U" & BREVE
Characters( PRECOMP, 90  ) = "016D" : Characters( DECOMP, 90  ) = "u" & BREVE
Characters( PRECOMP, 91  ) = "016E" : Characters( DECOMP, 91  ) = "U" & RING_ABOVE
Characters( PRECOMP, 92  ) = "016F" : Characters( DECOMP, 92  ) = "u" & RING_ABOVE
Characters( PRECOMP, 93  ) = "0170" : Characters( DECOMP, 93  ) = "U" & DOUBLE_ACUTE
Characters( PRECOMP, 94  ) = "0171" : Characters( DECOMP, 94  ) = "u" & DOUBLE_ACUTE
Characters( PRECOMP, 95  ) = "0172" : Characters( DECOMP, 95  ) = "U" & OGONEK
Characters( PRECOMP, 96  ) = "0173" : Characters( DECOMP, 96  ) = "u" & OGONEK
Characters( PRECOMP, 97  ) = "0174" : Characters( DECOMP, 97  ) = "W" & CIRCUMFLEX
Characters( PRECOMP, 98  ) = "0175" : Characters( DECOMP, 98  ) = "w" & CIRCUMFLEX
Characters( PRECOMP, 99  ) = "0176" : Characters( DECOMP, 99  ) = "Y" & CIRCUMFLEX
Characters( PRECOMP, 100 ) = "0177" : Characters( DECOMP, 100 ) = "y" & CIRCUMFLEX
Characters( PRECOMP, 101 ) = "0178" : Characters( DECOMP, 101 ) = "Y" & DIAERESIS
Characters( PRECOMP, 102 ) = "0179" : Characters( DECOMP, 102 ) = "Z" & ACUTE
Characters( PRECOMP, 103 ) = "017A" : Characters( DECOMP, 103 ) = "z" & ACUTE
Characters( PRECOMP, 104 ) = "017B" : Characters( DECOMP, 104 ) = "Z" & DOT_ABOVE
Characters( PRECOMP, 105 ) = "017C" : Characters( DECOMP, 105 ) = "z" & DOT_ABOVE
Characters( PRECOMP, 106 ) = "017D" : Characters( DECOMP, 106 ) = "Z" & CARON
Characters( PRECOMP, 107 ) = "017E" : Characters( DECOMP, 107 ) = "z" & CARON
Characters( PRECOMP, 108 ) = "01A0" : Characters( DECOMP, 108 ) = "O" & HORN
Characters( PRECOMP, 109 ) = "01A1" : Characters( DECOMP, 109 ) = "o" & HORN
Characters( PRECOMP, 110 ) = "01AF" : Characters( DECOMP, 110 ) = "U" & HORN
Characters( PRECOMP, 111 ) = "01B0" : Characters( DECOMP, 111 ) = "u" & HORN
Characters( PRECOMP, 112 ) = "01CD" : Characters( DECOMP, 112 ) = "A" & CARON
Characters( PRECOMP, 113 ) = "01CE" : Characters( DECOMP, 113 ) = "a" & CARON
Characters( PRECOMP, 114 ) = "01CF" : Characters( DECOMP, 114 ) = "I" & CARON
Characters( PRECOMP, 115 ) = "01D0" : Characters( DECOMP, 115 ) = "i" & CARON
Characters( PRECOMP, 116 ) = "01D1" : Characters( DECOMP, 116 ) = "O" & CARON
Characters( PRECOMP, 117 ) = "01D2" : Characters( DECOMP, 117 ) = "o" & CARON
Characters( PRECOMP, 118 ) = "01D3" : Characters( DECOMP, 118 ) = "U" & CARON
Characters( PRECOMP, 119 ) = "01D4" : Characters( DECOMP, 119 ) = "u" & CARON
Characters( PRECOMP, 120 ) = "01D5" : Characters( DECOMP, 120 ) = "U" & DIAERESIS & MACRON
Characters( PRECOMP, 121 ) = "01D6" : Characters( DECOMP, 121 ) = "u" & DIAERESIS & MACRON
Characters( PRECOMP, 122 ) = "01D7" : Characters( DECOMP, 122 ) = "U" & DIAERESIS & ACUTE
Characters( PRECOMP, 123 ) = "01D8" : Characters( DECOMP, 123 ) = "u" & DIAERESIS & ACUTE
Characters( PRECOMP, 124 ) = "01D9" : Characters( DECOMP, 124 ) = "U" & DIAERESIS & CARON
Characters( PRECOMP, 125 ) = "01DA" : Characters( DECOMP, 125 ) = "u" & DIAERESIS & CARON
Characters( PRECOMP, 126 ) = "01DB" : Characters( DECOMP, 126 ) = "U" & DIAERESIS & GRAVE
Characters( PRECOMP, 127 ) = "01DC" : Characters( DECOMP, 127 ) = "u" & DIAERESIS & GRAVE
Characters( PRECOMP, 128 ) = "01DE" : Characters( DECOMP, 128 ) = "A" & DIAERESIS & MACRON
Characters( PRECOMP, 129 ) = "01DF" : Characters( DECOMP, 129 ) = "a" & DIAERESIS & MACRON
Characters( PRECOMP, 130 ) = "01E0" : Characters( DECOMP, 130 ) = "A" & DOT_ABOVE & MACRON
Characters( PRECOMP, 131 ) = "01E1" : Characters( DECOMP, 131 ) = "a" & DOT_ABOVE & MACRON
Characters( PRECOMP, 132 ) = "01E2" : Characters( DECOMP, 132 ) = AE_LIGATURE_UC & MACRON
Characters( PRECOMP, 133 ) = "01E3" : Characters( DECOMP, 133 ) = ae_LIGATURE_LC & MACRON
Characters( PRECOMP, 134 ) = "01E6" : Characters( DECOMP, 134 ) = "G" & CARON
Characters( PRECOMP, 135 ) = "01E7" : Characters( DECOMP, 135 ) = "g" & CARON
Characters( PRECOMP, 136 ) = "01E8" : Characters( DECOMP, 136 ) = "K" & CARON
Characters( PRECOMP, 137 ) = "01E9" : Characters( DECOMP, 137 ) = "k" & CARON
Characters( PRECOMP, 138 ) = "01EA" : Characters( DECOMP, 138 ) = "O" & OGONEK
Characters( PRECOMP, 139 ) = "01EB" : Characters( DECOMP, 139 ) = "o" & OGONEK
Characters( PRECOMP, 140 ) = "01EC" : Characters( DECOMP, 140 ) = "O" & OGONEK & MACRON
Characters( PRECOMP, 141 ) = "01ED" : Characters( DECOMP, 141 ) = "o" & OGONEK & MACRON
Characters( PRECOMP, 142 ) = "01EE" : Characters( DECOMP, 142 ) = EZH_UC & CARON
Characters( PRECOMP, 143 ) = "01EE" : Characters( DECOMP, 143 ) = ezh_LC & CARON
Characters( PRECOMP, 144 ) = "01F0" : Characters( DECOMP, 144 ) = "j" & CARON
Characters( PRECOMP, 145 ) = "01F4" : Characters( DECOMP, 145 ) = "G" & ACUTE
Characters( PRECOMP, 146 ) = "01F5" : Characters( DECOMP, 146 ) = "g" & ACUTE
Characters( PRECOMP, 147 ) = "01F8" : Characters( DECOMP, 147 ) = "N" & GRAVE
Characters( PRECOMP, 148 ) = "01F9" : Characters( DECOMP, 148 ) = "n" & GRAVE
Characters( PRECOMP, 149 ) = "01FA" : Characters( DECOMP, 149 ) = "A" & RING_ABOVE & ACUTE
Characters( PRECOMP, 150 ) = "01FB" : Characters( DECOMP, 150 ) = "a" & RING_ABOVE & ACUTE
Characters( PRECOMP, 151 ) = "01FC" : Characters( DECOMP, 151 ) = AE_LIGATURE_UC & ACUTE
Characters( PRECOMP, 152 ) = "01FD" : Characters( DECOMP, 152 ) = ae_LIGATURE_LC & ACUTE
Characters( PRECOMP, 153 ) = "01FE" : Characters( DECOMP, 153 ) = O_SLASH_UC & ACUTE
Characters( PRECOMP, 154 ) = "01FF" : Characters( DECOMP, 154 ) = o_SLASH_LC & ACUTE
Characters( PRECOMP, 155 ) = "0200" : Characters( DECOMP, 155 ) = "A" & DOUBLE_GRAVE
Characters( PRECOMP, 156 ) = "0201" : Characters( DECOMP, 156 ) = "a" & DOUBLE_GRAVE
Characters( PRECOMP, 157 ) = "0202" : Characters( DECOMP, 157 ) = "A" & INVERTED_BREVE
Characters( PRECOMP, 158 ) = "0203" : Characters( DECOMP, 158 ) = "a" & INVERTED_BREVE
Characters( PRECOMP, 159 ) = "0204" : Characters( DECOMP, 159 ) = "E" & DOUBLE_GRAVE
Characters( PRECOMP, 160 ) = "0205" : Characters( DECOMP, 160 ) = "e" & DOUBLE_GRAVE
Characters( PRECOMP, 161 ) = "0206" : Characters( DECOMP, 161 ) = "E" & INVERTED_BREVE
Characters( PRECOMP, 162 ) = "0207" : Characters( DECOMP, 162 ) = "e" & INVERTED_BREVE
Characters( PRECOMP, 163 ) = "0208" : Characters( DECOMP, 163 ) = "I" & DOUBLE_GRAVE
Characters( PRECOMP, 164 ) = "0209" : Characters( DECOMP, 164 ) = "i" & DOUBLE_GRAVE
Characters( PRECOMP, 165 ) = "020A" : Characters( DECOMP, 165 ) = "I" & INVERTED_BREVE
Characters( PRECOMP, 166 ) = "020B" : Characters( DECOMP, 166 ) = "i" & INVERTED_BREVE
Characters( PRECOMP, 167 ) = "020C" : Characters( DECOMP, 167 ) = "O" & DOUBLE_GRAVE
Characters( PRECOMP, 168 ) = "020D" : Characters( DECOMP, 168 ) = "o" & DOUBLE_GRAVE
Characters( PRECOMP, 169 ) = "020E" : Characters( DECOMP, 169 ) = "O" & INVERTED_BREVE
Characters( PRECOMP, 170 ) = "020F" : Characters( DECOMP, 170 ) = "o" & INVERTED_BREVE
Characters( PRECOMP, 171 ) = "0210" : Characters( DECOMP, 171 ) = "R" & DOUBLE_GRAVE
Characters( PRECOMP, 172 ) = "0211" : Characters( DECOMP, 172 ) = "r" & DOUBLE_GRAVE
Characters( PRECOMP, 173 ) = "0212" : Characters( DECOMP, 173 ) = "R" & INVERTED_BREVE
Characters( PRECOMP, 174 ) = "0213" : Characters( DECOMP, 174 ) = "r" & INVERTED_BREVE
Characters( PRECOMP, 175 ) = "0214" : Characters( DECOMP, 175 ) = "U" & DOUBLE_GRAVE
Characters( PRECOMP, 176 ) = "0215" : Characters( DECOMP, 176 ) = "u" & DOUBLE_GRAVE
Characters( PRECOMP, 177 ) = "0216" : Characters( DECOMP, 177 ) = "U" & INVERTED_BREVE
Characters( PRECOMP, 178 ) = "0217" : Characters( DECOMP, 178 ) = "u" & INVERTED_BREVE
Characters( PRECOMP, 179 ) = "0218" : Characters( DECOMP, 179 ) = "S" & COMMA_BELOW
Characters( PRECOMP, 180 ) = "0219" : Characters( DECOMP, 180 ) = "s" & COMMA_BELOW
Characters( PRECOMP, 181 ) = "021A" : Characters( DECOMP, 181 ) = "T" & COMMA_BELOW
Characters( PRECOMP, 182 ) = "021B" : Characters( DECOMP, 182 ) = "t" & COMMA_BELOW
Characters( PRECOMP, 183 ) = "021E" : Characters( DECOMP, 183 ) = "H" & CARON
Characters( PRECOMP, 184 ) = "021F" : Characters( DECOMP, 184 ) = "h" & CARON
Characters( PRECOMP, 185 ) = "0226" : Characters( DECOMP, 185 ) = "A" & DOT_ABOVE
Characters( PRECOMP, 186 ) = "0227" : Characters( DECOMP, 186 ) = "a" & DOT_ABOVE
Characters( PRECOMP, 187 ) = "0228" : Characters( DECOMP, 187 ) = "E" & CEDILLA
Characters( PRECOMP, 188 ) = "0229" : Characters( DECOMP, 188 ) = "e" & CEDILLA
Characters( PRECOMP, 189 ) = "022A" : Characters( DECOMP, 189 ) = "O" & DIAERESIS & MACRON
Characters( PRECOMP, 190 ) = "022B" : Characters( DECOMP, 190 ) = "o" & DIAERESIS & MACRON
Characters( PRECOMP, 191 ) = "022C" : Characters( DECOMP, 191 ) = "O" & TILDE & MACRON
Characters( PRECOMP, 192 ) = "022D" : Characters( DECOMP, 192 ) = "o" & TILDE & MACRON
Characters( PRECOMP, 193 ) = "022E" : Characters( DECOMP, 193 ) = "O" & DOT_ABOVE
Characters( PRECOMP, 194 ) = "022F" : Characters( DECOMP, 194 ) = "o" & DOT_ABOVE
Characters( PRECOMP, 195 ) = "0230" : Characters( DECOMP, 195 ) = "O" & DOT_ABOVE & MACRON
Characters( PRECOMP, 196 ) = "0231" : Characters( DECOMP, 196 ) = "o" & DOT_ABOVE & MACRON
Characters( PRECOMP, 197 ) = "0232" : Characters( DECOMP, 197 ) = "Y" & MACRON
Characters( PRECOMP, 198 ) = "0233" : Characters( DECOMP, 198 ) = "y" & MACRON

End Sub

'****************************************************************************************

Sub FillCharactersExtendedAdditional

Characters( PRECOMP, 199 ) = "1E00" : Characters( DECOMP, 199 ) = "A" & RING_BELOW
Characters( PRECOMP, 200 ) = "1E01" : Characters( DECOMP, 200 ) = "a" & RING_BELOW
Characters( PRECOMP, 201 ) = "1E02" : Characters( DECOMP, 201 ) = "B" & DOT_ABOVE
Characters( PRECOMP, 202 ) = "1E03" : Characters( DECOMP, 202 ) = "b" & DOT_ABOVE
Characters( PRECOMP, 203 ) = "1E04" : Characters( DECOMP, 203 ) = "B" & DOT_BELOW
Characters( PRECOMP, 204 ) = "1E05" : Characters( DECOMP, 204 ) = "b" & DOT_BELOW
Characters( PRECOMP, 205 ) = "1E06" : Characters( DECOMP, 205 ) = "B" & MACRON_BELOW
Characters( PRECOMP, 206 ) = "1E07" : Characters( DECOMP, 206 ) = "b" & MACRON_BELOW
Characters( PRECOMP, 207 ) = "1E08" : Characters( DECOMP, 207 ) = "C" & CEDILLA & ACUTE
Characters( PRECOMP, 208 ) = "1E09" : Characters( DECOMP, 208 ) = "c" & CEDILLA & ACUTE
Characters( PRECOMP, 209 ) = "1E0A" : Characters( DECOMP, 209 ) = "D" & DOT_ABOVE
Characters( PRECOMP, 210 ) = "1E0B" : Characters( DECOMP, 210 ) = "d" & DOT_ABOVE
Characters( PRECOMP, 211 ) = "1E0C" : Characters( DECOMP, 211 ) = "D" & DOT_BELOW
Characters( PRECOMP, 212 ) = "1E0D" : Characters( DECOMP, 212 ) = "d" & DOT_BELOW
Characters( PRECOMP, 213 ) = "1E0E" : Characters( DECOMP, 213 ) = "D" & MACRON_BELOW
Characters( PRECOMP, 214 ) = "1E0F" : Characters( DECOMP, 214 ) = "d" & MACRON_BELOW
Characters( PRECOMP, 215 ) = "1E10" : Characters( DECOMP, 215 ) = "D" & CEDILLA
Characters( PRECOMP, 216 ) = "1E11" : Characters( DECOMP, 216 ) = "d" & CEDILLA
Characters( PRECOMP, 217 ) = "1E12" : Characters( DECOMP, 217 ) = "D" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 218 ) = "1E13" : Characters( DECOMP, 218 ) = "d" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 219 ) = "1E14" : Characters( DECOMP, 219 ) = "E" & MACRON & GRAVE
Characters( PRECOMP, 220 ) = "1E15" : Characters( DECOMP, 220 ) = "e" & MACRON & GRAVE
Characters( PRECOMP, 221 ) = "1E16" : Characters( DECOMP, 221 ) = "E" & MACRON & ACUTE
Characters( PRECOMP, 222 ) = "1E17" : Characters( DECOMP, 222 ) = "e" & MACRON & ACUTE
Characters( PRECOMP, 223 ) = "1E18" : Characters( DECOMP, 223 ) = "E" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 224 ) = "1E19" : Characters( DECOMP, 224 ) = "e" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 225 ) = "1E1A" : Characters( DECOMP, 225 ) = "E" & TILDE_BELOW
Characters( PRECOMP, 226 ) = "1E1B" : Characters( DECOMP, 226 ) = "e" & TILDE_BELOW
Characters( PRECOMP, 227 ) = "1E1C" : Characters( DECOMP, 227 ) = "E" & CEDILLA & BREVE
Characters( PRECOMP, 228 ) = "1E1D" : Characters( DECOMP, 228 ) = "e" & CEDILLA & BREVE
Characters( PRECOMP, 229 ) = "1E1E" : Characters( DECOMP, 229 ) = "F" & DOT_ABOVE
Characters( PRECOMP, 230 ) = "1E1F" : Characters( DECOMP, 230 ) = "f" & DOT_ABOVE
Characters( PRECOMP, 231 ) = "1E20" : Characters( DECOMP, 231 ) = "G" & MACRON
Characters( PRECOMP, 232 ) = "1E21" : Characters( DECOMP, 232 ) = "g" & MACRON
Characters( PRECOMP, 233 ) = "1E22" : Characters( DECOMP, 233 ) = "H" & DOT_ABOVE
Characters( PRECOMP, 234 ) = "1E23" : Characters( DECOMP, 234 ) = "h" & DOT_ABOVE
Characters( PRECOMP, 235 ) = "1E24" : Characters( DECOMP, 235 ) = "H" & DOT_BELOW
Characters( PRECOMP, 236 ) = "1E25" : Characters( DECOMP, 236 ) = "h" & DOT_BELOW
Characters( PRECOMP, 237 ) = "1E26" : Characters( DECOMP, 237 ) = "H" & DIAERESIS
Characters( PRECOMP, 238 ) = "1E27" : Characters( DECOMP, 238 ) = "h" & DIAERESIS
Characters( PRECOMP, 239 ) = "1E28" : Characters( DECOMP, 239 ) = "H" & CEDILLA
Characters( PRECOMP, 240 ) = "1E29" : Characters( DECOMP, 240 ) = "h" & CEDILLA
Characters( PRECOMP, 241 ) = "1E2A" : Characters( DECOMP, 241 ) = "H" & BREVE_BELOW
Characters( PRECOMP, 242 ) = "1E2B" : Characters( DECOMP, 242 ) = "h" & BREVE_BELOW
Characters( PRECOMP, 243 ) = "1E2C" : Characters( DECOMP, 243 ) = "I" & TILDE_BELOW
Characters( PRECOMP, 244 ) = "1E2D" : Characters( DECOMP, 244 ) = "i" & TILDE_BELOW
Characters( PRECOMP, 245 ) = "1E2E" : Characters( DECOMP, 245 ) = "I" & DIAERESIS & ACUTE
Characters( PRECOMP, 246 ) = "1E2F" : Characters( DECOMP, 246 ) = "i" & DIAERESIS & ACUTE
Characters( PRECOMP, 247 ) = "1E30" : Characters( DECOMP, 247 ) = "K" & ACUTE
Characters( PRECOMP, 248 ) = "1E31" : Characters( DECOMP, 248 ) = "k" & ACUTE
Characters( PRECOMP, 249 ) = "1E32" : Characters( DECOMP, 249 ) = "K" & DOT_BELOW
Characters( PRECOMP, 250 ) = "1E33" : Characters( DECOMP, 250 ) = "k" & DOT_BELOW
Characters( PRECOMP, 251 ) = "1E34" : Characters( DECOMP, 251 ) = "K" & MACRON_BELOW
Characters( PRECOMP, 252 ) = "1E35" : Characters( DECOMP, 252 ) = "k" & MACRON_BELOW
Characters( PRECOMP, 253 ) = "1E36" : Characters( DECOMP, 253 ) = "L" & DOT_BELOW
Characters( PRECOMP, 254 ) = "1E37" : Characters( DECOMP, 254 ) = "l" & DOT_BELOW
Characters( PRECOMP, 255 ) = "1E38" : Characters( DECOMP, 255 ) = "L" & DOT_BELOW & MACRON
Characters( PRECOMP, 256 ) = "1E39" : Characters( DECOMP, 256 ) = "L" & DOT_BELOW & MACRON
Characters( PRECOMP, 257 ) = "1E3A" : Characters( DECOMP, 257 ) = "L" & MACRON_BELOW
Characters( PRECOMP, 258 ) = "1E3B" : Characters( DECOMP, 258 ) = "l" & MACRON_BELOW
Characters( PRECOMP, 259 ) = "1E3C" : Characters( DECOMP, 259 ) = "L" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 260 ) = "1E3D" : Characters( DECOMP, 260 ) = "l" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 261 ) = "1E3E" : Characters( DECOMP, 261 ) = "M" & ACUTE
Characters( PRECOMP, 262 ) = "1E3F" : Characters( DECOMP, 262 ) = "m" & ACUTE
Characters( PRECOMP, 263 ) = "1E40" : Characters( DECOMP, 263 ) = "M" & DOT_ABOVE
Characters( PRECOMP, 264 ) = "1E41" : Characters( DECOMP, 264 ) = "m" & DOT_ABOVE
Characters( PRECOMP, 265 ) = "1E42" : Characters( DECOMP, 265 ) = "M" & DOT_BELOW
Characters( PRECOMP, 266 ) = "1E43" : Characters( DECOMP, 266 ) = "m" & DOT_BELOW
Characters( PRECOMP, 267 ) = "1E44" : Characters( DECOMP, 267 ) = "N" & DOT_ABOVE
Characters( PRECOMP, 268 ) = "1E45" : Characters( DECOMP, 268 ) = "n" & DOT_ABOVE
Characters( PRECOMP, 269 ) = "1E46" : Characters( DECOMP, 269 ) = "N" & DOT_BELOW
Characters( PRECOMP, 270 ) = "1E47" : Characters( DECOMP, 270 ) = "n" & DOT_BELOW
Characters( PRECOMP, 271 ) = "1E48" : Characters( DECOMP, 271 ) = "N" & MACRON_BELOW
Characters( PRECOMP, 272 ) = "1E49" : Characters( DECOMP, 272 ) = "n" & MACRON_BELOW
Characters( PRECOMP, 273 ) = "1E4A" : Characters( DECOMP, 273 ) = "N" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 274 ) = "1E4B" : Characters( DECOMP, 274 ) = "n" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 275 ) = "1E4C" : Characters( DECOMP, 275 ) = "O" & TILDE & ACUTE
Characters( PRECOMP, 276 ) = "1E4D" : Characters( DECOMP, 276 ) = "o" & TILDE & ACUTE
Characters( PRECOMP, 277 ) = "1E4E" : Characters( DECOMP, 277 ) = "O" & TILDE & DIAERESIS
Characters( PRECOMP, 278 ) = "1E4F" : Characters( DECOMP, 278 ) = "o" & TILDE & DIAERESIS
Characters( PRECOMP, 279 ) = "1E50" : Characters( DECOMP, 279 ) = "O" & MACRON & GRAVE
Characters( PRECOMP, 280 ) = "1E51" : Characters( DECOMP, 280 ) = "o" & MACRON & GRAVE
Characters( PRECOMP, 281 ) = "1E52" : Characters( DECOMP, 281 ) = "O" & MACRON & ACUTE
Characters( PRECOMP, 282 ) = "1E53" : Characters( DECOMP, 282 ) = "o" & MACRON & ACUTE
Characters( PRECOMP, 283 ) = "1E54" : Characters( DECOMP, 283 ) = "P" & ACUTE
Characters( PRECOMP, 284 ) = "1E55" : Characters( DECOMP, 284 ) = "p" & ACUTE
Characters( PRECOMP, 285 ) = "1E56" : Characters( DECOMP, 285 ) = "P" & DOT_ABOVE
Characters( PRECOMP, 286 ) = "1E57" : Characters( DECOMP, 286 ) = "p" & DOT_ABOVE
Characters( PRECOMP, 287 ) = "1E58" : Characters( DECOMP, 287 ) = "R" & DOT_ABOVE
Characters( PRECOMP, 288 ) = "1E59" : Characters( DECOMP, 288 ) = "r" & DOT_ABOVE
Characters( PRECOMP, 289 ) = "1E5A" : Characters( DECOMP, 289 ) = "R" & DOT_BELOW
Characters( PRECOMP, 290 ) = "1E5B" : Characters( DECOMP, 290 ) = "r" & DOT_BELOW
Characters( PRECOMP, 291 ) = "1E5C" : Characters( DECOMP, 291 ) = "R" & DOT_BELOW & MACRON
Characters( PRECOMP, 292 ) = "1E5D" : Characters( DECOMP, 292 ) = "r" & DOT_BELOW & MACRON
Characters( PRECOMP, 293 ) = "1E5E" : Characters( DECOMP, 293 ) = "R" & MACRON_BELOW
Characters( PRECOMP, 294 ) = "1E5F" : Characters( DECOMP, 294 ) = "r" & MACRON_BELOW
Characters( PRECOMP, 295 ) = "1E60" : Characters( DECOMP, 295 ) = "S" & DOT_ABOVE
Characters( PRECOMP, 296 ) = "1E61" : Characters( DECOMP, 296 ) = "s" & DOT_ABOVE
Characters( PRECOMP, 297 ) = "1E62" : Characters( DECOMP, 297 ) = "S" & DOT_BELOW
Characters( PRECOMP, 298 ) = "1E63" : Characters( DECOMP, 298 ) = "s" & DOT_BELOW
Characters( PRECOMP, 299 ) = "1E64" : Characters( DECOMP, 299 ) = "S" & ACUTE & DOT_ABOVE
Characters( PRECOMP, 300 ) = "1E65" : Characters( DECOMP, 300 ) = "s" & ACUTE & DOT_ABOVE
Characters( PRECOMP, 301 ) = "1E66" : Characters( DECOMP, 301 ) = "S" & CARON & DOT_ABOVE
Characters( PRECOMP, 302 ) = "1E67" : Characters( DECOMP, 302 ) = "s" & CARON & DOT_ABOVE
Characters( PRECOMP, 303 ) = "1E68" : Characters( DECOMP, 303 ) = "S" & DOT_BELOW & DOT_ABOVE
Characters( PRECOMP, 304 ) = "1E69" : Characters( DECOMP, 304 ) = "s" & DOT_BELOW & DOT_ABOVE
Characters( PRECOMP, 305 ) = "1E6A" : Characters( DECOMP, 305 ) = "T" & DOT_ABOVE
Characters( PRECOMP, 306 ) = "1E6B" : Characters( DECOMP, 306 ) = "t" & DOT_ABOVE
Characters( PRECOMP, 307 ) = "1E6C" : Characters( DECOMP, 307 ) = "T" & DOT_BELOW
Characters( PRECOMP, 308 ) = "1E6D" : Characters( DECOMP, 308 ) = "t" & DOT_BELOW
Characters( PRECOMP, 309 ) = "1E6E" : Characters( DECOMP, 309 ) = "T" & MACRON_BELOW
Characters( PRECOMP, 310 ) = "1E6F" : Characters( DECOMP, 310 ) = "t" & MACRON_BELOW
Characters( PRECOMP, 311 ) = "1E70" : Characters( DECOMP, 311 ) = "T" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 312 ) = "1E71" : Characters( DECOMP, 312 ) = "t" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 313 ) = "1E72" : Characters( DECOMP, 313 ) = "U" & DIAERESIS_BELOW
Characters( PRECOMP, 314 ) = "1E73" : Characters( DECOMP, 314 ) = "u" & DIAERESIS_BELOW
Characters( PRECOMP, 315 ) = "1E74" : Characters( DECOMP, 315 ) = "U" & TILDE_BELOW
Characters( PRECOMP, 316 ) = "1E75" : Characters( DECOMP, 316 ) = "u" & TILDE_BELOW
Characters( PRECOMP, 317 ) = "1E76" : Characters( DECOMP, 317 ) = "U" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 318 ) = "1E77" : Characters( DECOMP, 318 ) = "u" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 319 ) = "1E78" : Characters( DECOMP, 319 ) = "U" & TILDE & ACUTE
Characters( PRECOMP, 320 ) = "1E79" : Characters( DECOMP, 320 ) = "u" & TILDE & ACUTE
Characters( PRECOMP, 321 ) = "1E7A" : Characters( DECOMP, 321 ) = "U" & MACRON & DIAERESIS
Characters( PRECOMP, 322 ) = "1E7B" : Characters( DECOMP, 322 ) = "u" & MACRON & DIAERESIS
Characters( PRECOMP, 323 ) = "1E7C" : Characters( DECOMP, 323 ) = "V" & TILDE
Characters( PRECOMP, 324 ) = "1E7D" : Characters( DECOMP, 324 ) = "v" & TILDE
Characters( PRECOMP, 325 ) = "1E7E" : Characters( DECOMP, 325 ) = "V" & DOT_BELOW
Characters( PRECOMP, 326 ) = "1E7F" : Characters( DECOMP, 326 ) = "v" & DOT_BELOW
Characters( PRECOMP, 327 ) = "1E80" : Characters( DECOMP, 327 ) = "W" & GRAVE
Characters( PRECOMP, 328 ) = "1E81" : Characters( DECOMP, 328 ) = "w" & GRAVE
Characters( PRECOMP, 329 ) = "1E82" : Characters( DECOMP, 329 ) = "W" & ACUTE
Characters( PRECOMP, 330 ) = "1E83" : Characters( DECOMP, 330 ) = "w" & ACUTE
Characters( PRECOMP, 331 ) = "1E84" : Characters( DECOMP, 331 ) = "W" & DIAERESIS
Characters( PRECOMP, 332 ) = "1E85" : Characters( DECOMP, 332 ) = "w" & DIAERESIS
Characters( PRECOMP, 333 ) = "1E86" : Characters( DECOMP, 333 ) = "W" & DOT_ABOVE
Characters( PRECOMP, 334 ) = "1E87" : Characters( DECOMP, 334 ) = "w" & DOT_ABOVE
Characters( PRECOMP, 335 ) = "1E88" : Characters( DECOMP, 335 ) = "W" & DOT_BELOW
Characters( PRECOMP, 336 ) = "1E89" : Characters( DECOMP, 336 ) = "w" & DOT_BELOW
Characters( PRECOMP, 337 ) = "1E8A" : Characters( DECOMP, 337 ) = "X" & DOT_ABOVE
Characters( PRECOMP, 338 ) = "1E8B" : Characters( DECOMP, 338 ) = "x" & DOT_ABOVE
Characters( PRECOMP, 339 ) = "1E8C" : Characters( DECOMP, 339 ) = "X" & DIAERESIS
Characters( PRECOMP, 340 ) = "1E8D" : Characters( DECOMP, 340 ) = "x" & DIAERESIS
Characters( PRECOMP, 341 ) = "1E8E" : Characters( DECOMP, 341 ) = "Y" & DOT_ABOVE
Characters( PRECOMP, 342 ) = "1E8F" : Characters( DECOMP, 342 ) = "y" & DOT_ABOVE
Characters( PRECOMP, 343 ) = "1E90" : Characters( DECOMP, 343 ) = "Z" & CIRCUMFLEX
Characters( PRECOMP, 344 ) = "1E91" : Characters( DECOMP, 344 ) = "z" & CIRCUMFLEX
Characters( PRECOMP, 345 ) = "1E92" : Characters( DECOMP, 345 ) = "Z" & DOT_BELOW
Characters( PRECOMP, 346 ) = "1E93" : Characters( DECOMP, 346 ) = "z" & DOT_BELOW
Characters( PRECOMP, 347 ) = "1E94" : Characters( DECOMP, 347 ) = "Z" & MACRON_BELOW
Characters( PRECOMP, 348 ) = "1E95" : Characters( DECOMP, 348 ) = "z" & MACRON_BELOW
Characters( PRECOMP, 349 ) = "1E96" : Characters( DECOMP, 349 ) = "h" & MACRON_BELOW
Characters( PRECOMP, 350 ) = "1E97" : Characters( DECOMP, 350 ) = "t" & DIAERESIS
Characters( PRECOMP, 351 ) = "1E98" : Characters( DECOMP, 351 ) = "w" & RING_ABOVE
Characters( PRECOMP, 352 ) = "1E99" : Characters( DECOMP, 352 ) = "y" & RING_ABOVE
Characters( PRECOMP, 353 ) = "1E9B" : Characters( DECOMP, 353 ) = LONG_S & DOT_ABOVE
Characters( PRECOMP, 354 ) = "1EA0" : Characters( DECOMP, 354 ) = "A" & DOT_BELOW
Characters( PRECOMP, 355 ) = "1EA1" : Characters( DECOMP, 355 ) = "a" & DOT_BELOW
Characters( PRECOMP, 356 ) = "1EA2" : Characters( DECOMP, 356 ) = "A" & HOOK_ABOVE
Characters( PRECOMP, 357 ) = "1EA3" : Characters( DECOMP, 357 ) = "a" & HOOK_ABOVE
Characters( PRECOMP, 358 ) = "1EA4" : Characters( DECOMP, 358 ) = "A" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 359 ) = "1EA5" : Characters( DECOMP, 359 ) = "a" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 360 ) = "1EA6" : Characters( DECOMP, 360 ) = "A" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 361 ) = "1EA7" : Characters( DECOMP, 361 ) = "a" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 362 ) = "1EA8" : Characters( DECOMP, 362 ) = "A" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 363 ) = "1EA9" : Characters( DECOMP, 363 ) = "a" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 364 ) = "1EAA" : Characters( DECOMP, 364 ) = "A" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 365 ) = "1EAB" : Characters( DECOMP, 365 ) = "a" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 366 ) = "1EAC" : Characters( DECOMP, 366 ) = "A" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 367 ) = "1EAD" : Characters( DECOMP, 367 ) = "a" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 368 ) = "1EAE" : Characters( DECOMP, 368 ) = "A" & BREVE & ACUTE
Characters( PRECOMP, 369 ) = "1EAF" : Characters( DECOMP, 369 ) = "a" & BREVE & ACUTE
Characters( PRECOMP, 370 ) = "1EB0" : Characters( DECOMP, 370 ) = "A" & BREVE & GRAVE
Characters( PRECOMP, 371 ) = "1EB1" : Characters( DECOMP, 371 ) = "a" & BREVE & GRAVE
Characters( PRECOMP, 372 ) = "1EB2" : Characters( DECOMP, 372 ) = "A" & BREVE & HOOK_ABOVE
Characters( PRECOMP, 373 ) = "1EB3" : Characters( DECOMP, 373 ) = "a" & BREVE & HOOK_ABOVE
Characters( PRECOMP, 374 ) = "1EB4" : Characters( DECOMP, 374 ) = "A" & BREVE & TILDE
Characters( PRECOMP, 375 ) = "1EB5" : Characters( DECOMP, 375 ) = "a" & BREVE & TILDE
Characters( PRECOMP, 376 ) = "1EB6" : Characters( DECOMP, 376 ) = "A" & DOT_BELOW & BREVE
Characters( PRECOMP, 377 ) = "1EB7" : Characters( DECOMP, 377 ) = "a" & DOT_BELOW & BREVE
Characters( PRECOMP, 378 ) = "1EB8" : Characters( DECOMP, 378 ) = "E" & DOT_BELOW
Characters( PRECOMP, 379 ) = "1EB9" : Characters( DECOMP, 379 ) = "e" & DOT_BELOW
Characters( PRECOMP, 380 ) = "1EBA" : Characters( DECOMP, 380 ) = "E" & HOOK_ABOVE
Characters( PRECOMP, 381 ) = "1EBB" : Characters( DECOMP, 381 ) = "e" & HOOK_ABOVE
Characters( PRECOMP, 382 ) = "1EBC" : Characters( DECOMP, 382 ) = "E" & TILDE
Characters( PRECOMP, 383 ) = "1EBD" : Characters( DECOMP, 383 ) = "e" & TILDE
Characters( PRECOMP, 384 ) = "1EBE" : Characters( DECOMP, 384 ) = "E" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 385 ) = "1EBF" : Characters( DECOMP, 385 ) = "e" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 386 ) = "1EC0" : Characters( DECOMP, 386 ) = "E" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 387 ) = "1EC1" : Characters( DECOMP, 387 ) = "e" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 388 ) = "1EC2" : Characters( DECOMP, 388 ) = "E" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 389 ) = "1EC3" : Characters( DECOMP, 389 ) = "e" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 390 ) = "1EC4" : Characters( DECOMP, 390 ) = "E" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 391 ) = "1EC5" : Characters( DECOMP, 391 ) = "e" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 392 ) = "1EC6" : Characters( DECOMP, 392 ) = "E" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 393 ) = "1EC7" : Characters( DECOMP, 393 ) = "e" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 394 ) = "1EC8" : Characters( DECOMP, 394 ) = "I" & HOOK_ABOVE
Characters( PRECOMP, 395 ) = "1EC9" : Characters( DECOMP, 395 ) = "i" & HOOK_ABOVE
Characters( PRECOMP, 396 ) = "1ECA" : Characters( DECOMP, 396 ) = "I" & DOT_BELOW
Characters( PRECOMP, 397 ) = "1ECB" : Characters( DECOMP, 397 ) = "i" & DOT_BELOW
Characters( PRECOMP, 398 ) = "1ECC" : Characters( DECOMP, 398 ) = "O" & DOT_BELOW
Characters( PRECOMP, 399 ) = "1ECD" : Characters( DECOMP, 399 ) = "o" & DOT_BELOW
Characters( PRECOMP, 400 ) = "1ECE" : Characters( DECOMP, 400 ) = "O" & HOOK_ABOVE
Characters( PRECOMP, 401 ) = "1ECF" : Characters( DECOMP, 401 ) = "o" & HOOK_ABOVE
Characters( PRECOMP, 402 ) = "1ED0" : Characters( DECOMP, 402 ) = "O" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 403 ) = "1ED1" : Characters( DECOMP, 403 ) = "o" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 404 ) = "1ED2" : Characters( DECOMP, 404 ) = "O" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 405 ) = "1ED3" : Characters( DECOMP, 405 ) = "o" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 406 ) = "1ED4" : Characters( DECOMP, 406 ) = "O" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 407 ) = "1ED5" : Characters( DECOMP, 407 ) = "o" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 408 ) = "1ED6" : Characters( DECOMP, 408 ) = "O" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 409 ) = "1ED7" : Characters( DECOMP, 409 ) = "o" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 410 ) = "1ED8" : Characters( DECOMP, 410 ) = "O" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 411 ) = "1ED9" : Characters( DECOMP, 411 ) = "o" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 412 ) = "1EDA" : Characters( DECOMP, 412 ) = "O" & HORN & ACUTE
Characters( PRECOMP, 413 ) = "1EDB" : Characters( DECOMP, 413 ) = "o" & HORN & ACUTE
Characters( PRECOMP, 414 ) = "1EDC" : Characters( DECOMP, 414 ) = "O" & HORN & GRAVE
Characters( PRECOMP, 415 ) = "1EDD" : Characters( DECOMP, 415 ) = "o" & HORN & GRAVE
Characters( PRECOMP, 416 ) = "1EDE" : Characters( DECOMP, 416 ) = "O" & HORN & HOOK_ABOVE
Characters( PRECOMP, 417 ) = "1EDF" : Characters( DECOMP, 417 ) = "o" & HORN & HOOK_ABOVE
Characters( PRECOMP, 418 ) = "1EE0" : Characters( DECOMP, 418 ) = "O" & HORN & TILDE
Characters( PRECOMP, 419 ) = "1EE1" : Characters( DECOMP, 419 ) = "o" & HORN & TILDE
Characters( PRECOMP, 420 ) = "1EE2" : Characters( DECOMP, 420 ) = "O" & HORN & DOT_BELOW
Characters( PRECOMP, 421 ) = "1EE3" : Characters( DECOMP, 421 ) = "o" & HORN & DOT_BELOW
Characters( PRECOMP, 422 ) = "1EE4" : Characters( DECOMP, 422 ) = "U" & DOT_BELOW
Characters( PRECOMP, 423 ) = "1EE5" : Characters( DECOMP, 423 ) = "u" & DOT_BELOW
Characters( PRECOMP, 424 ) = "1EE6" : Characters( DECOMP, 424 ) = "U" & HOOK_ABOVE
Characters( PRECOMP, 425 ) = "1EE7" : Characters( DECOMP, 425 ) = "u" & HOOK_ABOVE
Characters( PRECOMP, 426 ) = "1EE8" : Characters( DECOMP, 426 ) = "U" & HORN & ACUTE
Characters( PRECOMP, 427 ) = "1EE9" : Characters( DECOMP, 427 ) = "u" & HORN & ACUTE
Characters( PRECOMP, 428 ) = "1EEA" : Characters( DECOMP, 428 ) = "U" & HORN & GRAVE
Characters( PRECOMP, 429 ) = "1EEB" : Characters( DECOMP, 429 ) = "u" & HORN & GRAVE
Characters( PRECOMP, 430 ) = "1EEC" : Characters( DECOMP, 430 ) = "U" & HORN & HOOK_ABOVE
Characters( PRECOMP, 431 ) = "1EED" : Characters( DECOMP, 431 ) = "u" & HORN & HOOK_ABOVE
Characters( PRECOMP, 432 ) = "1EEE" : Characters( DECOMP, 432 ) = "U" & HORN & TILDE
Characters( PRECOMP, 433 ) = "1EEF" : Characters( DECOMP, 433 ) = "u" & HORN & TILDE
Characters( PRECOMP, 434 ) = "1EF0" : Characters( DECOMP, 434 ) = "U" & HORN & DOT_BELOW
Characters( PRECOMP, 435 ) = "1EF1" : Characters( DECOMP, 435 ) = "u" & HORN & DOT_BELOW
Characters( PRECOMP, 436 ) = "1EF2" : Characters( DECOMP, 436 ) = "Y" & GRAVE
Characters( PRECOMP, 437 ) = "1EF3" : Characters( DECOMP, 437 ) = "y" & GRAVE
Characters( PRECOMP, 438 ) = "1EF4" : Characters( DECOMP, 438 ) = "Y" & DOT_BELOW
Characters( PRECOMP, 439 ) = "1EF5" : Characters( DECOMP, 439 ) = "y" & DOT_BELOW
Characters( PRECOMP, 440 ) = "1EF6" : Characters( DECOMP, 440 ) = "Y" & HOOK_ABOVE
Characters( PRECOMP, 441 ) = "1EF7" : Characters( DECOMP, 441 ) = "y" & HOOK_ABOVE
Characters( PRECOMP, 442 ) = "1EF8" : Characters( DECOMP, 442 ) = "Y" & TILDE
Characters( PRECOMP, 443 ) = "1EF9" : Characters( DECOMP, 443 ) = "y" & TILDE

End Sub

'****************************************************************************************

Sub FillMARC_Latin

MARC_Latin( 0  ) = "0098"
MARC_Latin( 1  ) = "009C"
MARC_Latin( 2  ) = "00A1"
MARC_Latin( 3  ) = "00A3"
MARC_Latin( 4  ) = "00A9"
MARC_Latin( 5  ) = "00AE"
MARC_Latin( 6  ) = "00B0"
MARC_Latin( 7  ) = "00B1"
MARC_Latin( 8  ) = "00B7"
MARC_Latin( 9  ) = "00BF"
MARC_Latin( 10 ) = "00C6"
MARC_Latin( 11 ) = "00D8"
MARC_Latin( 12 ) = "00DE"
MARC_Latin( 13 ) = "00DF"
MARC_Latin( 14 ) = "00E6"
MARC_Latin( 15 ) = "00F0"
MARC_Latin( 16 ) = "00F8"
MARC_Latin( 17 ) = "00FE"
MARC_Latin( 18 ) = "0110"
MARC_Latin( 19 ) = "0111"
MARC_Latin( 20 ) = "0131"
MARC_Latin( 21 ) = "0141"
MARC_Latin( 22 ) = "0142"
MARC_Latin( 23 ) = "0152"
MARC_Latin( 24 ) = "0153"
MARC_Latin( 25 ) = "01A0"
MARC_Latin( 26 ) = "01A1"
MARC_Latin( 27 ) = "01AF"
MARC_Latin( 28 ) = "01B0"
MARC_Latin( 29 ) = "02B9"
MARC_Latin( 30 ) = "02BA"
MARC_Latin( 31 ) = "02BB"
MARC_Latin( 32 ) = "02BC"
MARC_Latin( 33 ) = "0300"
MARC_Latin( 34 ) = "0301"
MARC_Latin( 35 ) = "0302"
MARC_Latin( 36 ) = "0303"
MARC_Latin( 37 ) = "0304"
MARC_Latin( 38 ) = "0306"
MARC_Latin( 39 ) = "0307"
MARC_Latin( 40 ) = "0308"
MARC_Latin( 41 ) = "0309"
MARC_Latin( 42 ) = "030A"
MARC_Latin( 43 ) = "030B"
MARC_Latin( 44 ) = "030C"
MARC_Latin( 45 ) = "0310"
MARC_Latin( 46 ) = "0313"
MARC_Latin( 47 ) = "0315"
MARC_Latin( 48 ) = "031C"
MARC_Latin( 49 ) = "0323"
MARC_Latin( 50 ) = "0324"
MARC_Latin( 51 ) = "0325"
MARC_Latin( 52 ) = "0326"
MARC_Latin( 53 ) = "0327"
MARC_Latin( 54 ) = "0328"
MARC_Latin( 55 ) = "032E"
MARC_Latin( 56 ) = "0332"
MARC_Latin( 57 ) = "0333"
MARC_Latin( 58 ) = "0360"
MARC_Latin( 59 ) = "0361"
MARC_Latin( 60 ) = "200C"
MARC_Latin( 61 ) = "200D"
MARC_Latin( 62 ) = "20AC"
MARC_Latin( 63 ) = "2113"
MARC_Latin( 64 ) = "2117"
MARC_Latin( 65 ) = "266D"
MARC_Latin( 66 ) = "266F"

End Sub
'109961567
