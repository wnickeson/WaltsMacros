'MacroName:ContinuingResourcesFFHelper.2022.06
'MacroDescription:Helps with confirming or editing fixed field values in a bibliographic
' record for continuing resources.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
'
' Last updated: 19 September 2022.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and 64-bit Windows 10 Enterprise &
' 64-bit Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Run the macro in a bibliographic record for a serial resource. It
' displays the fixed field with drop-down lists of the values available for each element.
' Verify the existing values or select new values, and the macro will update the fixed
' field.
'
' The fixed field elements displayed are the ones unique to continuing resources,
' character positions 18-34 in the 008 field: Frequency, Regularity, Type of continuing
' resource, Form of original item, Form of item, Nature of entire work, Nature of
' contents, Government publication, Conference publication, Original alphabet or script
' of title, and Entry convention. They are labeled in the dialog box with the standard
' OCLC mnemonics.
'
' Codes in the "Nature of contents" element ("Cont", positions 25-27) should be entered
' in alphabetical order, but the macro will re-order them if they aren't. A code of "u"
' for either "Frequency" or "Regularity" requires the same code in the other element, and
' the macro will show a warning if this rule is violated.
'
' The macro does not verify information in the fixed field against fields 260/264 and
' 362.
'****************************************************************************************

Option Explicit

Declare Sub FillArrays

Declare Function CheckDateFormat( InString$ ) As Integer

Declare Function Dialog1ControlFunction( Id$, Action%, SValue& )

Global Const ELEMENT_NAME   As Integer = 0
Global Const FROM_DLG_BOX   As Integer = 2
Global Const FROM_RECORD    As Integer = 1
Global Const NOT_PRESENT    As Integer = 1
Global Const TOO_LONG       As Integer = 3
Global Const TOO_SHORT      As Integer = 2
Global Const WRONG_FORMAT   As Integer = 4

Global Dates1$
Global Dates2$
Global WaltsMacros$

Global Changed

Global FFValues( 2, 13 )    As String

Global Alphabet( 15 )       As String
Global ConfPub( 2 )         As String
Global Contents( 27 )       As String
Global DateStatus( 3 )      As String
Global EntireWork( 27 )     As String
Global EntryConv( 3 )       As String
Global FormOfItem( 10 )     As String
Global FormOfOriginal( 10 ) As String
Global Frequency( 19 )      As String
Global GovtPub( 11 )        As String
Global Regularity( 4 )      As String
Global TypeOfResource( 13 ) As String

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE     As Integer = 16
Const DLG_STATEMENT_CANCEL As Integer = 102
Const DISPLAY_FF_AT_TOP    As Integer = 1
Const INFORMATION_MESSAGE  As Integer = 64

Dim FILL_CHAR As String*1    : FILL_CHAR = Chr$( 252 )

Dim BLvl$
Dim FFVal$
Dim PosFF%
Dim RType$
Dim TempString$
Dim TypeOfWindow%

Dim ChangedFFView
Dim GetFF
Dim SetFF

Dim i As Integer, n As Integer

WaltsMacros$ = "[Walt's macros] Extras2:ContinuingResourcesFFHelper"
Changed      = FALSE

' First, make sure that a bibliographic record for a serial resource is open.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MsgBox "Sorry, this macro works only in a bibliographic record.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

PosFF% = CS.FixedFieldPosition
If PosFF% <> DISPLAY_FF_AT_TOP Then
    CS.FixedFieldPosition = DISPLAY_FF_AT_TOP
    ChangedFFView         = TRUE
End If

GetFF = CS.GetFixedField( "Type", RType$ )
GetFF = CS.GetFixedField( "BLvl", BLvl$ )
GetFF = CS.GetFixedField( "Dates", Dates1$ )
GetFF = CS.GetFixedField( ",", Dates2$ )

If RType$ <> "a" Or Blvl$ Like "[!is]" Then
    MsgBox "Sorry, this macro works only in a bibliographic records for a serial.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' If the record is appropriate, fill the array with the current values. Change the OCLC
' fill character to the pipe or vertical bar for display purposes.

FFValues( ELEMENT_NAME, 0  ) = "Alph"
FFValues( ELEMENT_NAME, 1  ) = "Conf"
FFValues( ELEMENT_NAME, 2  ) = "Cont"
FFValues( ELEMENT_NAME, 3  ) = "EntW"
FFValues( ELEMENT_NAME, 4  ) = "Form"
FFValues( ELEMENT_NAME, 5  ) = "Freq"
FFValues( ELEMENT_NAME, 6  ) = "GPub"
FFValues( ELEMENT_NAME, 7  ) = "Orig"
FFValues( ELEMENT_NAME, 8  ) = "Regl"
FFValues( ELEMENT_NAME, 9  ) = "S/L"
FFValues( ELEMENT_NAME, 10 ) = "SrTp"
FFValues( ELEMENT_NAME, 11 ) = "DtSt"
FFValues( ELEMENT_NAME, 12 ) = "Dates"
FFValues( ELEMENT_NAME, 13 ) = ","

For i = 0 To 13
  If CS.GetFixedField( FFValues( ELEMENT_NAME, i), FFVal$ ) Then
      If i = 2 Then
          n = Len( FFVal$ )
          If n < 3 Then
              FFVal$ = FFVal$ & Space$( 3 - n )
          End If
        Else
          If FFVal$ = FILL_CHAR Then
              FFVal$ = "|"
            ElseIf FFVal$ = "" Then
              FFVal$ = " "
          End If
      End If
      FFValues( FROM_RECORD, i ) = FFVal$
  End If
Next i

If ChangedFFView Then CS.FixedFieldPosition = PosFF%

FillArrays

Begin Dialog Dialog1Definition  422, 264, WaltsMacros$, .Dialog1ControlFunction
  OkButton      300, 240,  52,  14                                                            '0
  CancelButton  360, 240,  52,  14                                                            '1
  Text           10,   6, 112,   8, "Original alphabet or script of title"                    '2
  Text           16,  18,  32,   8, "Alph"                                                    '3
  DropListBox    38,  16, 168, 144, Alphabet(),                             .DropListBoxAlph  '4
  Text           10,  36, 112,   8, "Conference publication"                                  '5
  Text           16,  48,  32,   8, "Conf"                                                    '6
  DropListBox    38,  46, 168,  40, ConfPub(),                              .DropListBoxConf  '7
  Text           10,  66, 112,   8, "Nature of contents 1"                                    '8
  Text           16,  78,  32,   8, "Cont"                                                    '9
  DropListBox    38,  76, 168, 160, Contents(),                             .DropListBoxCont1 '10
  Text           10,  96, 112,   8, "Nature of contents 2"                                    '11
  Text           16, 108,  32,   8, "Cont"                                                    '12
  DropListBox    38, 106, 168, 160, Contents(),                             .DropListBoxCont2 '13
  Text           10, 126, 112,   8, "Nature of contents 3"                                    '14
  Text           16, 138,  32,   8, "Cont"                                                    '15
  DropListBox    38, 136, 168, 160, Contents(),                             .DropListBoxCont3 '16
  Text           10, 156, 112,   8, "Nature of entire work"                                   '17
  Text           16, 168,  32,   8, "EntW"                                                    '18
  DropListBox    38, 166, 168, 160, EntireWork(),                           .DropListBoxEntW  '19
  Text           10, 186, 112,   8, "Form of item"                                            '20
  Text           16, 198,  32,   8, "Form"                                                    '21
  DropListBox    38, 196, 168, 104, FormOfItem(),                           .DropListBoxForm  '22
  Text          216,   6, 112,   8, "Frequency"                                               '23
  Text          222,  18,  32,   8, "Freq"                                                    '24
  DropListBox   244,  16, 168, 160, Frequency(),                            .DropListBoxFreq  '25
  Text          216,  36, 112,   8, "Government publication"                                  '26
  Text          222,  48,  32,   8, "GPub"                                                    '27
  DropListBox   244,  46, 168, 160, GovtPub(),                              .DropListBoxGPub  '28
  Text          216,  66, 112,   8, "Form of original item"                                   '29
  Text          222,  78,  32,   8, "Orig"                                                    '30
  DropListBox   244,  76, 168, 104, FormOfOriginal(),                       .DropListBoxOrig  '31
  Text          216,  96, 112,   8, "Regularity"                                              '32
  Text          222, 108,  32,   8, "Regl"                                                    '33
  DropListBox   244, 106, 168,  56, Regularity(),                           .DropListBoxRegl  '34
  Text          216, 126, 112,   8, "Entry convention"                                        '35
  Text          222, 138,  32,   8, "S/L"                                                     '36
  DropListBox   244, 136, 168,  48, EntryConv(),                            .DropListBoxS_L   '37
  Text          216, 156, 112,   8, "Type of continuing resource"                             '38
  Text          222, 168,  32,   8, "SrTp"                                                    '39
  DropListBox   244, 166, 168, 128, TypeOfResource(),                       .DropListBoxSrTp  '40
  Text          216, 186, 112,   8, "Type of date/Publication status"                         '41
  Text          222, 198,  32,   8, "DtSt"                                                    '42
  DropListBox   244, 196, 168,  48, DateStatus(),                           .DropListBoxDtSt  '43
  Text          248, 216,  24,   8, "Dates1"                                                  '44
  Text          324, 216,  24,   8, "Dates2"                                                  '45
  TextBox       276, 214,  28,  12,                                         .TextBoxDates1    '46
  TextBox       352, 214,  28,  12,                                         .TextBoxDates2    '47
End Dialog

Dim Dialog1 As Dialog1Definition
On Error Resume Next
Dialog Dialog1
If Err = DLG_STATEMENT_CANCEL Then Exit Sub

If Changed Then

    PosFF% = CS.FixedFieldPosition
    If PosFF% <> DISPLAY_FF_AT_TOP Then
        CS.FixedFieldPosition = DISPLAY_FF_AT_TOP
        ChangedFFView         = TRUE
    End If

    For i = 0 To 13
      TempString$ = FFValues( FROM_DLG_BOX, i )
      If FFValues( FROM_RECORD, i ) <> TempString$ Then
          SetFF = CS.SetFixedField( FFValues( ELEMENT_NAME, i ), TempString$ )
      End If
    Next i

End If

If ChangedFFView Then CS.FixedFieldPosition = PosFF%

If Changed = FALSE Then
    MsgBox "The fixed field was not changed.", INFORMATION_MESSAGE, WaltsMacros$
End If

End Sub

'****************************************************************************************

Sub FillArrays

Alphabet( 0  )       = "[blank] - No alphabet or script given/No key title"
Alphabet( 1  )       = "a - Basic Roman"
Alphabet( 2  )       = "b - Extended Roman"
Alphabet( 3  )       = "c - Cyrillic"
Alphabet( 4  )       = "d - Japanese"
Alphabet( 5  )       = "e - Chinese"
Alphabet( 6  )       = "f - Arabic"
Alphabet( 7  )       = "g - Greek"
Alphabet( 8  )       = "h - Hebrew"
Alphabet( 9  )       = "i - Thai"
Alphabet( 10 )       = "j - Devanagari"
Alphabet( 11 )       = "k - Korean"
Alphabet( 12 )       = "l - Tamil"
Alphabet( 13 )       = "u - Unknown"
Alphabet( 14 )       = "z - Other"
Alphabet( 15 )       = "| - No attempt to code"

ConfPub( 0 )         = "0 - Not a conference publication"
ConfPub( 1 )         = "1 - Conference publication"
ConfPub( 2 )         = "| - No attempt to code"

Contents( 0  )       = "[blank] - Not specified"
Contents( 1  )       = "a - Abstracts/summaries"
Contents( 2  )       = "b - Bibliographies"
Contents( 3  )       = "c - Catalogs"
Contents( 4  )       = "d - Dictionaries"
Contents( 5  )       = "e - Encyclopedias"
Contents( 6  )       = "f - Handbooks"
Contents( 7  )       = "g - Legal articles"
Contents( 8  )       = "h - Biography"
Contents( 9  )       = "i - Indexes"
Contents( 10 )       = "k - Discographies"
Contents( 11 )       = "l - Legislation"
Contents( 12 )       = "m - Theses"
Contents( 13 )       = "n - Surveys of literature in a subject area"
Contents( 14 )       = "o - Reviews"
Contents( 15 )       = "p - Programmed texts"
Contents( 16 )       = "q - Filmographies"
Contents( 17 )       = "r - Directories"
Contents( 18 )       = "s - Statistics"
Contents( 19 )       = "t - Technical reports"
Contents( 20 )       = "u - Standards/specifications"
Contents( 21 )       = "v - Legal cases and case notes"
Contents( 22 )       = "w - Law reports and digests"
Contents( 23 )       = "y - Yearbooks"
Contents( 24 )       = "z - Treaties"
Contents( 25 )       = "5 - Calendars"
Contents( 26 )       = "6 - Comics/graphic novels"
Contents( 27 )       = "||| - No attempt to code"

DateStatus( 0 )      = "c - Continuing resource currently published"
DateStatus( 1 )      = "d - Continuing resource ceased publication"
DateStatus( 2 )      = "u - Continuing resource status unknown"
DateStatus( 3 )      = "| - No attempt to code"

EntireWork( 0  )     = "[blank] - Not specified"
EntireWork( 1  )     = "a - Abstracts/summaries"
EntireWork( 2  )     = "b - Bibliographies"
EntireWork( 3  )     = "c - Catalogs"
EntireWork( 4  )     = "d - Dictionaries"
EntireWork( 5  )     = "e - Encyclopedias"
EntireWork( 6  )     = "f - Handbooks"
EntireWork( 7  )     = "g - Legal articles"
EntireWork( 8  )     = "h - Biography"
EntireWork( 9  )     = "i - Indexes"
EntireWork( 10 )     = "k - Discographies"
EntireWork( 11 )     = "l - Legislation"
EntireWork( 12 )     = "m - Theses"
EntireWork( 13 )     = "n - Surveys of literature in a subject area"
EntireWork( 14 )     = "o - Reviews"
EntireWork( 15 )     = "p - Programmed texts"
EntireWork( 16 )     = "q - Filmographies"
EntireWork( 17 )     = "r - Directories"
EntireWork( 18 )     = "s - Statistics"
EntireWork( 19 )     = "t - Technical reports"
EntireWork( 20 )     = "u - Standards/specifications"
EntireWork( 21 )     = "v - Legal cases and case notes"
EntireWork( 22 )     = "w - Law reports and digests"
EntireWork( 23 )     = "y - Yearbooks"
EntireWork( 24 )     = "z - Treaties"
EntireWork( 25 )     = "5 - Calendars"
EntireWork( 26 )     = "6 - Comics/graphic novels"
EntireWork( 27 )     = "| - No attempt to code"

EntryConv( 0 )       = "0 - Successive entry"
EntryConv( 1 )       = "1 - Latest entry"
EntryConv( 2 )       = "2 - Integrated entry"
EntryConv( 3 )       = "| - No attempt to code"

FormOfItem( 0  )     = "[blank] - None of the following"
FormOfItem( 1  )     = "a - Microfilm"
FormOfItem( 2  )     = "b - Microfiche"
FormOfItem( 3  )     = "c - Microopaque"
FormOfItem( 4  )     = "d - Large print"
FormOfItem( 5  )     = "f - Braille"
FormOfItem( 6  )     = "o - Online"
FormOfItem( 7  )     = "q - Direct electronic"
FormOfItem( 8  )     = "r - Regular print reproduction"
FormOfItem( 9  )     = "s - Electronic"
FormOfItem( 10 )     = "| - No attempt to code"

FormOfOriginal( 0  ) = "[blank] - None of the following"
FormOfOriginal( 1  ) = "a - Microfilm"
FormOfOriginal( 2  ) = "b - Microfiche"
FormOfOriginal( 3  ) = "c - Microopaque"
FormOfOriginal( 4  ) = "d - Large print"
FormOfOriginal( 5  ) = "e - Newspaper format"
FormOfOriginal( 6  ) = "f - Braille"
FormOfOriginal( 7  ) = "o - Online"
FormOfOriginal( 8  ) = "q - Direct electronic"
FormOfOriginal( 9  ) = "s - Electronic"
FormOfOriginal( 10 ) = "| - No attempt to code"

Frequency( 0  )      = "[blank] - No determinable frequency"
Frequency( 1  )      = "a - Annual"
Frequency( 2  )      = "b - Bimonthly"
Frequency( 3  )      = "c - Semiweekly"
Frequency( 4  )      = "d - Daily"
Frequency( 5  )      = "e - Biweekly"
Frequency( 6  )      = "f - Semiannual"
Frequency( 7  )      = "g - Biennial"
Frequency( 8  )      = "h - Triennial"
Frequency( 9  )      = "i - Three times a week"
Frequency( 10 )      = "j - Three times a month"
Frequency( 11 )      = "k - Continuously updated"
Frequency( 12 )      = "m - Monthly"
Frequency( 13 )      = "q - Quarterly"
Frequency( 14 )      = "s - Semimonthly"
Frequency( 15 )      = "t - Three times a year"
Frequency( 16 )      = "u - Unknown"
Frequency( 17 )      = "w - Weekly"
Frequency( 18 )      = "z - Other"
Frequency( 19 )      = "| - No attempt to code"

GovtPub( 0  )        = "[blank] - Not a government publication"
GovtPub( 1  )        = "a - Autonomous or semi-autonomous component"
GovtPub( 2  )        = "c - Multilocal"
GovtPub( 3  )        = "f - Federal/national"
GovtPub( 4  )        = "i - International intergovernmental"
GovtPub( 5  )        = "l - Local"
GovtPub( 6  )        = "m - Multistate"
GovtPub( 7  )        = "o - Government publication-level undetermined"
GovtPub( 8  )        = "s - State, provincial, territorial, dependent, etc. "
GovtPub( 9  )        = "u - Unknown if item is government publication"
GovtPub( 10 )        = "z - Other"
GovtPub( 11 )        = "| - No attempt to code"

Regularity( 0 )      = "n - Normalized irregular"
Regularity( 1 )      = "r - Regular"
Regularity( 2 )      = "u - Unknown"
Regularity( 3 )      = "x - Completely irregular"
Regularity( 4 )      = "| - No attempt to code"

TypeOfResource( 0  ) = "[blank] - None of the following"
TypeOfResource( 1  ) = "d - Updating database"
TypeOfResource( 2  ) = "g - Magazine"
TypeOfResource( 3  ) = "h - Blog"
TypeOfResource( 4  ) = "j - Journal"
TypeOfResource( 5  ) = "l - Updating loose-leaf"
TypeOfResource( 6  ) = "m - Monographic series"
TypeOfResource( 7  ) = "n - Newspaper"
TypeOfResource( 8  ) = "p - Periodical"
TypeOfResource( 9  ) = "r - Repository"
TypeOfResource( 10 ) = "s - Newsletter"
TypeOfResource( 11 ) = "t - Directory"
TypeOfResource( 12 ) = "w - Updating Web site"
TypeOfResource( 13 ) = "| - No attempt to code"

End Sub

'****************************************************************************************

Function CheckDateFormat( InString$ ) As Integer

' This function checks the input of dates, making sure that there is something entered
' (Conser requires four characters in each Dates position), that the entered string is of
' the correct length, and that it contains only digits and the letter "u".

Dim CharT$

Dim i As Integer, x As Integer

CheckDateFormat = 0

If InString$ = "" Then
    CheckDateFormat = NOT_PRESENT
  Else
    x = Len( InString$ )
    If x < 4 Then
        CheckDateFormat = TOO_SHORT
      ElseIf x > 4 Then
        CheckDateFormat = TOO_LONG
      Else
        For i = 1 To x
          CharT$ = Mid$( InString$, i, 1 )
          If CharT$ Like "[!0-9u]" Then
              CheckDateFormat = WRONG_FORMAT
              Exit For
          End If
        Next i
    End If
End If

End Function

'****************************************************************************************

Function Dialog1ControlFunction( Id$, Action%, SValue& )

' This function sets the controls of the dialog box when it opens, and reads their values
' when it closes, using the numeric IDs of the dialog box controls so that the process
' can be handled with a For loop. The most complex part of this is the "Nature of
' contents" element, which consists of three characters. Each position has its own dialog
' box control, but the three of them are treated as a single string.
'
' On initialization, the list boxes are set directly with the DlgText command, rather
' than by searching the array of values in order to match the record's text and get the
' index of the proper row of the array. The DlgText statement works by selecting a row in
' the array that is equal to or begins with the text provided in the statement. However,
' if the square bracket (in "[blank]") is not directly matched, it may be ignored--which
' is a problem if the fixed field value is "b", because OML will match that to "[blank]"
' and thus the wrong value will be selected. To get around this, the value in the DlgText
' statement may need to be followed by a space, to force a match on a single (non-space)
' character.

Const CONTROL_CHANGE      As Integer = 2
Const INITIALIZE          As Integer = 1
Const KEEP_DLG_OPEN       As Integer = -1
Const WARNING_MESSAGE     As Integer = 48

Const CONT_1_ID           As Integer = 10
Const CONT_2_ID           As Integer = 13
Const CONT_3_ID           As Integer = 16
Const CURRENTLY_PUBLISHED As Integer = 0
Const DATES_1             As Integer = 12
Const DATES_2             As Integer = 13
Const FF_CONT_1           As Integer = 2
Const FREQ_UNKNOWN        As Integer = 16
Const REGL_UNKNOWN        As Integer = 2
Const STATUS_UNKNOWN      As Integer = 2

Dim CharT$
Dim CheckDate%
Dim ContentsString$
Dim Contents_1_Val$
Dim Contents_2_Val$
Dim Contents_3_Val$
Dim ControlID%
Dim DateToCheck$
Dim DtSt%
Dim ErrorMsg$
Dim TempString1$
Dim TempString2$
Dim WhichDate$

Dim i As Integer, p As Integer, x As Integer

Select Case Action%

  Case INITIALIZE

    ControlID% = 4
    For i = 0 To 12
      TempString2$ = FFValues( FROM_RECORD, i )
      If TempString2$ = "" Then TempString2$ = "["
      If i = FF_CONT_1 Then
          DlgText  CONT_1_ID,         Left$( TempString2$, 1 ) & " "
          DlgText  CONT_2_ID,         Mid$( TempString2$, 2, 1 ) & " "
          DlgText  CONT_3_ID,         Right$( TempString2$, 1 ) & " "
          ControlID% = CONT_3_ID
      End If
      DlgText  ControlID%,        TempString2$ & " "  'Need to add the blank because OML seems to ignore the bracket and skips to the next character
      ControlID% = ControlID% + 3
    Next i
    DlgText  "TextBoxDates2",   Dates2$


  Case CONTROL_CHANGE

    Select Case Id$

' These first two cases have to do with the relationship between Frequence and
' Regularity.

      Case "DropListBoxFreq"

        If DlgValue( "DropListBoxFreq" ) = FREQ_UNKNOWN Then
            If DlgValue( "DropListBoxRegl" ) <> REGL_UNKNOWN Then
                MsgBox "If Frequency is unknown, Regularity must be coded as unknown also.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "DropListBoxRegl"
                DlgValue "DropListBoxRegl", 2
            End If
          Else
            If DlgValue( "DropListBoxRegl" ) = REGL_UNKNOWN Then
                MsgBox "If Frequency is known, Regularity must not be coded as unknown.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "DropListBoxRegl"
            End If
        End If
        Dialog1ControlFunction = KEEP_DLG_OPEN

      Case "DropListBoxRegl"

        If DlgValue( "DropListBoxRegl" ) = REGL_UNKNOWN Then
            If DlgValue( "DropListBoxFreq" ) <> FREQ_UNKNOWN Then
                MsgBox "If Regularity is unknown, Frequency must be coded as unknown also.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "DropListBoxFreq"
                DlgValue "DropListBoxFreq", 16
            End If
          Else
            If DlgValue( "DropListBoxFreq" ) = FREQ_UNKNOWN Then
                MsgBox "If Regularity is known, Frequency must not be coded as unknown.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "DropListBoxFreq"
            End If
        End If
        Dialog1ControlFunction = KEEP_DLG_OPEN

' Check the value of Publication Status against the values entered in the Dates boxes.

      Case "DropListBoxDtSt"

        DtSt% = DlgValue( "DropListBoxDtSt" )
        If DtSt% = CURRENTLY_PUBLISHED Then
            If DlgText( "TextBoxDates2" ) <> "9999" Then
                MsgBox "If Publication Status is 'Currently published', Dates2 must be '9999'.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "TextBoxDates2"
            End If
          ElseIf DtSt% = STATUS_UNKNOWN Then
            If DlgText( "TextBoxDates2" ) <> "uuuu" Then
                MsgBox "If Publication Status is unknown, Dates2 must be 'uuuu'.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "TextBoxDates2"
            End If
        End If
        Dialog1ControlFunction = KEEP_DLG_OPEN

      Case "OK"

' When the OK button is clicked:

' 1. Check for an appropriate relationship between Frequence and Regularity.

        If DlgValue( "DropListBoxFreq" ) = FREQ_UNKNOWN And DlgValue( "DropListBoxRegl" ) <> REGL_UNKNOWN Then
            MsgBox "If Frequency is unknown, Regularity must be coded as unknown also.", WARNING_MESSAGE, WaltsMacros$
            DlgFocus "DropListBoxRegl"
            Dialog1ControlFunction = KEEP_DLG_OPEN
          ElseIf DlgValue( "DropListBoxRegl" ) = REGL_UNKNOWN And DlgValue( "DropListBoxFreq" ) <> FREQ_UNKNOWN Then
            MsgBox "If Regularity is unknown, Frequency must be coded as uknown also.", WARNING_MESSAGE, WaltsMacros$
            DlgFocus "DropListBoxFreq"
            Dialog1ControlFunction = KEEP_DLG_OPEN
        End If

' 2. Check for the correct relationship between Publication Status and Dates, and also
'    for correct form of dates.

        If DlgValue( "DropListBoxDtSt" ) = CURRENTLY_PUBLISHED Then
            If DlgText( "TextBoxDates2" ) <> "9999" Then
                MsgBox "The value of Dates2 is incorrect for Publication Status 'c'.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "TextBoxDates2"
                Dialog1ControlFunction = KEEP_DLG_OPEN
            End If
          ElseIf DlgValue( "DropListBoxDtSt" ) = STATUS_UNKNOWN Then
            If DlgText( "TextBoxDates2" ) <> "uuuu" Then
                MsgBox "The value of Dates2 is incorrect for Publication Status 'u'.", WARNING_MESSAGE, WaltsMacros$
                DlgFocus "TextBoxDates2"
                Dialog1ControlFunction = KEEP_DLG_OPEN
            End If
        End If

        Dates1$ = Trim$( DlgText( "TextBoxDates1" ) )
        Dates2$ = Trim$( DlgText( "TextBoxDates2" ) )
        For i = 1 To 2
          If i = 1 Then
              DateToCheck$ = Dates1$
              WhichDate$   = "Dates1"
            Else
              DateToCheck$ = Dates2$
              WhichDate$   = "Dates2"
          End If
          CheckDate% = CheckDateFormat( DateToCheck$ )
          Select Case CheckDate%
            Case NOT_PRESENT
              ErrorMsg$ = "There is no date in " & WhichDate$ & "."
            Case TOO_SHORT
              ErrorMsg$ = WhichDate$ & " has too few characters."
            Case TOO_LONG
              ErrorMsg$ = WhichDate$ & " has too many characters."
            Case WRONG_FORMAT
              ErrorMsg$ = WhichDate$ & " must contain only digits and the letter 'u'."
          End Select
          If CheckDate% > 0 Then Exit For
        Next i
        If CheckDate% > 0 Then
            MsgBox ErrorMsg$, WARNING_MESSAGE, WaltsMacros$
            If i = 1 Then
                DlgFocus "TextBoxDates1"
              Else
                DlgFocus "TextBoxDates2"
            End If
            Dialog1ControlFunction = KEEP_DLG_OPEN
        End If

' 3. Assemble values of Contents drop-down lists to make a single string in alphabetical
'    order.

        Contents_1_Val$ = Left$( DlgText( "DropListBoxCont1" ), 1 )
        If Contents_1_Val$ = "[" Then Contents_1_Val$ = "~"
        Contents_2_Val$ = Left$( DlgText( "DropListBoxCont2" ), 1 )
        If Contents_2_Val$ = "[" Then Contents_2_Val$ = "~"
        Contents_3_Val$ = Left$( DlgText( "DropListBoxCont3" ), 1 )
        If Contents_3_Val$ = "[" Then Contents_3_Val$ = "~"

        If Contents_1_Val$ <= Contents_2_Val$ Then
            If Contents_1_Val$ <= Contents_3_Val$ Then
                If Contents_2_Val$ <= Contents_3_Val$ Then
                    ContentsString$ = Contents_1_Val$ & Contents_2_Val$ & Contents_3_Val$
                  Else
                    ContentsString$ = Contents_1_Val$ & Contents_3_Val$ & Contents_2_Val$
                End If
              Else
                If Contents_1_Val$ <= Contents_2_Val$ Then
                    ContentsString$ = Contents_3_Val$ & Contents_1_Val$ & Contents_2_Val$
                  Else
                    ContentsString$ = Contents_3_Val$ & Contents_2_Val$ & Contents_1_Val$
                End If
            End If
          Else
            If Contents_1_Val$ <= Contents_3_Val$ Then
                If Contents_2_Val$ <= Contents_3_Val$ Then
                    ContentsString$ = Contents_2_Val$ & Contents_1_Val$ & Contents_3_Val$
                  Else
                    ContentsString$ = Contents_1_Val$ & Contents_3_Val$ & Contents_2_Val$
                End If
              Else
                If Contents_1_Val$ <= Contents_2_Val$ Then
                    ContentsString$ = Contents_3_Val$ & Contents_1_Val$ & Contents_2_Val$
                  Else
                    ContentsString$ = Contents_3_Val$ & Contents_2_Val$ & Contents_1_Val$
                End If
            End If
        End If

        Do
          p = InStr( ContentsString$, "~" )
          If p > 0 Then
              Mid$( ContentsString$, p, 1 ) = " "
          End If
        Loop Until p = 0

' Then fill the array with the values from the dialog box. Compare those values to those
' in the original record. If none are different, the macro is essentially done. Return
' the conclusion about changed values to the main routine for final disposition.

        ControlID% = 4
        For i = 0 To 13
          If i = FF_CONT_1 Then
              TempString1$ = ContentsString$
              ControlID%   = CONT_3_ID
            Else
              Select Case i
                Case Is < DATES_1
                  TempString1$ = Left( DlgText( ControlID% ), 1 )
                Case DATES_1
                  TempString1$ = Trim$( DlgText( ControlID% ) )
                Case DATES_2
                  TempString1$ = Trim$( DlgText( 47 ) )
              End Select
          End If
          If TempString1$ = "[" Then TempString1$ = " "
          FFValues( FROM_DLG_BOX, i ) = TempString1$
          If FFValues( FROM_RECORD, i ) <> TempString1$ Then
              Changed = TRUE
          End If
          ControlID% = ControlID% + 3
        Next i

    End Select

  End Select

End Function
'73931226
'
'Macro name: ContinuingResourcesFFHelper
'Macro book: C:\Users\wnickeson.UR\AppData\Roaming\OCLC\Connex\Macros\Extras2.mbk
'Saved: 8/22/2023 10:01:12 AM using "MacroBookInspector" macro by Walter F. Nickeson.
