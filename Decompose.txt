' MacroName:Decompose.2025.01
' MacroDescription:Decomposes precomposed Latin script characters.
'
' This macro was written by Walter F. Nickeson and last updated 3 May 2025.
' It was developed in Connexion client 3.1 running in Windows 11 Enterprise and 64-bit
' Windows 10 Pro.
' Walt's macros for the Connexion client: https://github.com/wnickeson/WaltsMacros
' wfnickeson@zohomail.com
'
' Copyright 2025 Walter F. Nickeson.
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this
' software and associated documentation files (the "Software"), to deal in the Software
' without restriction, including without limitation the rights to use, copy, modify,
' merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
' permit persons to whom the Software is furnished to do so, subject to the following
' conditions:
'
' The above copyright notice and this permission notice shall be included in all copies
' or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
' INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
' PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
' HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
' THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'
'****************************************************************************************
' How it works: Place the cursor in a field in a record and run it to convert any
' precomposed Latin characters to their component character sequences. A "precomposed"
' character is also called a "decomposable" character, and is defined in the Unicode
' standard as "a character that is equivalent to a sequence of one or more other
' characters." The Connexion client doesn't seem to care much if precomposed characters
' are used in a record while it's being edited, because it converts characters upon
' export, if necessary, but this macro may help other macros execute properly. If a macro
' is designed to work on decomposed characters, it may fail if it comes across
' precomposed characters. Run this macro to make the change.
'
' This macro performs only canonical decompositions--that is, the sequence of characters
' produced by the macro when it decomposes a character is exactly equivalent to that
' character. Compatible decomposition, on the other hand, does not produce equivalent
' sequences. For example, the Latin capital ligature "IJ" (unable to be produced in this
' macro documentation) may appear to be composed of the two letters "I" and "J", but it
' is not actually decomposable. The substitution of the two letters "I" and "J" for the
' single ligature character "IJ" is a compatible equivalence, not canonical.
'
' The double-width combining diacritical marks "ligature" and "double tilde" were
' originally specified as two half-characters, each following one of the pair of letters
' they modified. That usage is now deprecated in favor of a single combining character
' placed between the two letters affected, although the Client does not allow this in its
' guided entry window. This macro replaces the two half-characters with the single
' diacritic, following current recommendations, and counts the operation as a change--
' even if it was not, strictly speaking, decomposition. This change is one in which the
' result is likely to look different from the original, depending on the font in use.
'
' If non-MARC Latin script characters are found during decomposition, the macro can
' identify them, if desired, by converting them either to fill characters or to their
' code points within braces (for example, "{01EE}").
'
' The precomposed characters this macro can work with are those found in Unicode blocks
' Latin-1 Supplement (U+008A-U+00FF), Latin Extended-A (U+0100-U+017F), Latin Extended-B
' (U+0180-U+024F), and Latin Extended Additional (U+1E00-U+1EFF). They include the
' characters found in Windows-1252, the common accented letters of Western alphabets (å,
' ç, ê, í, ñ, ò, ü, etc.).
'
' My macro "PasteUnformattedPlus" also decomposes some precomposed characters when it
' pastes copied text into a Connexion record.
'
' References to Unicode are to the Unicode standard version 16.0, published 10 September
' 2024.
'****************************************************************************************

Option Compare Text
Option Explicit

Declare Sub FillCharactersANSEL
Declare Sub FillCharactersExtendedA_B
Declare Sub FillCharactersExtendedAdditional
Declare Sub FillMARC_Latin

'----------------------------------------------------------------------------------------
' The following routines declare procedures in the .dll files for retrieving data from
' the Windows Clipboard. Initial guidance on use of this technique is due to Joel Hahn.

Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" ( DestinationPointer As Any, _
                                                              SourcePointer As Any, _
                                                              ByVal SizeOfCopy As Long)

Declare Function CloseClipboard   Lib "user32"   Alias "CloseClipboard" () As Long
Declare Function GetActiveWindow  Lib "user32"   Alias "GetActiveWindow" () As Long
Declare Function GetClipboardData Lib "user32"   Alias "GetClipboardData" ( ByVal ClipboardFormat As Long ) As Long
Declare Function GetStringLength  Lib "kernel32" Alias "lstrlenW" ( ByVal StringLength As Long ) As Long
Declare Function GlobalLock       Lib "kernel32" Alias "GlobalLock" ( ByVal MemoryHandle As Long ) As Long
Declare Function GlobalUnlock     Lib "kernel32" Alias "GlobalUnlock" ( ByVal MemoryHandle As Long ) As Long
Declare Function OpenClipboard    Lib "user32"   Alias "OpenClipboard" ( ByVal WindowHandle As Long ) As Long
'----------------------------------------------------------------------------------------

Global Const DECOMP     As Integer = 1
Global Const PRECOMP    As Integer = 0

Global ACUTE            As String*8
Global ae_LIGATURE_LC   As String*8
Global AE_LIGATURE_UC   As String*8
Global BREVE            As String*8
Global BREVE_BELOW      As String*8
Global CARON            As String*8
Global CEDILLA          As String*8
Global CIRCUMFLEX       As String*8
Global CIRCUMFLEX_BELOW As String*8 'Not a MARC-8 character
Global COMMA_BELOW      As String*8
Global DELIMITER        As String*8
Global DIAERESIS        As String*8
Global DIAERESIS_BELOW  As String*8
Global DOT_ABOVE        As String*8
Global DOT_BELOW        As String*8
Global DOUBLE_ACUTE     As String*8
Global DOUBLE_GRAVE     As String*8 'Not a MARC-8 character
Global ezh_LC           As String*8 'yogh, tailed z; not a MARC-8 character
Global EZH_UC           As String*8 'Yogh, Tailed Z; not a MARC-8 character
Global GRAVE            As String*8
Global HOOK_ABOVE       As String*8
Global HORN             As String*8 'Not a MARC-8 character
Global INVERTED_BREVE   As String*8 'Not a MARC-8 character
Global LONG_S           As String*8 'Not a MARC-8 character
Global MACRON           As String*8
Global MACRON_BELOW     As String*8 'Not a MARC-8 character
Global OGONEK           As String*8
Global o_SLASH_LC       As String*8
Global O_SLASH_UC       As String*8
Global RING_ABOVE       As String*8
Global RING_BELOW       As String*8
Global TILDE            As String*8
Global TILDE_BELOW      As String*8 'Not a MARC-8 character

Global WaltsMacros$

Global Characters() As String
Global MARC_Latin( 66 ) As String

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE     As Integer = 16
Const DLG_STATEMENT_CANCEL As Integer = 102
Const INFORMATION_MESSAGE  As Integer = 64

Const INTEGER_RANGE        As Long    = 65536 '-32,768 to 32,767

Dim DOUBLE_INVERTED_BREVE  As String*8
Dim DOUBLE_TILDE           As String*8

Dim ChangeCount1$
Dim ChangeCount2$
Dim CharToAdd$
Dim Col%
Dim Compare%
Dim DecomposedCharCount%
Dim DoubleWidth$
Dim DoubleWidthCount%
Dim FinalString$
Dim FieldData$
Dim High%
Dim Low%
Dim FinalMessage$
Dim Middle%
Dim NewCodePointField$
Dim NewField$
Dim NewFillCharField$
Dim PrecomposedNCR$
Dim Result%
Dim Row%
Dim Start%
Dim TestNCR$
Dim TypeOfWindow%

Dim ClipboardClose
Dim MARC_Char

Dim i as Integer, p As Integer

'----------------------------------------------------------------------------------------
Const UNICODE_TEXT As Long = 13&

Dim ActiveWindowHandle    As Long
Dim ClipboardCharsDim%
Dim ClipboardDataHandle   As Long
Dim ClipboardDataLocation As Long
Dim CodePoint%
Dim LengthOfField%
Dim UniCodePoint$

Dim ClipboardChars() As Integer
'----------------------------------------------------------------------------------------

' In order by code point.

AE_LIGATURE_UC        = "&#x00C6;"
O_SLASH_UC            = "&#x00D8;"
ae_LIGATURE_LC        = "&#x00E6;"
o_SLASH_LC            = "&#x00F8;"
LONG_S                = "&#x017F;" 'Not a MARC-8 character
EZH_UC                = "&#x01B7;" 'Not a MARC-8 character
DELIMITER             = "&#x01C2;"
ezh_LC                = "&#x0292;" 'Not a MARC-8 character
GRAVE                 = "&#x0300;"
ACUTE                 = "&#x0301;"
CIRCUMFLEX            = "&#x0302;"
TILDE                 = "&#x0303;"
MACRON                = "&#x0304;"
BREVE                 = "&#x0306;"
DOT_ABOVE             = "&#x0307;" 'Superior dot
DIAERESIS             = "&#x0308;" 'Umlaut
HOOK_ABOVE            = "&#x0309;" 'Pseudo question mark
RING_ABOVE            = "&#x030A;" 'Circle above, angstrom
DOUBLE_ACUTE          = "&#x030B;"
CARON                 = "&#x030C;" 'Hacek
DOUBLE_GRAVE          = "&#x030F;" 'Not a MARC-8 character
INVERTED_BREVE        = "&#x0311;" 'Not a MARC-8 character
HORN                  = "&#x031B;" 'Not a MARC-8 character
DOT_BELOW             = "&#x0323;"
DIAERESIS_BELOW       = "&#x0324;" 'Double dot below
RING_BELOW            = "&#x0325;" 'Circle below
COMMA_BELOW           = "&#x0326;" 'Left hook
CEDILLA               = "&#x0327;"
OGONEK                = "&#x0328;" 'Right hook
CIRCUMFLEX_BELOW      = "&#x032D;" 'Not a MARC-8 character
BREVE_BELOW           = "&#x032E;" 'Upadhmaniya
TILDE_BELOW           = "&#x0330;" 'Not a MARC-8 character
MACRON_BELOW          = "&#x0331;" 'Not a MARC-8 character
DOUBLE_TILDE          = "&#x0360;"
DOUBLE_INVERTED_BREVE = "&#x0361;"

WaltsMacros$     = "[Walt's macros] Extras3:Decompose"

' First, make sure a record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 5 To 11, 13, 15 To 16, 21 To 25
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

Row% = CS.CursorRow
Col% = CS.CursorColumn

' Then check that the field contains only Latin script characters.

If CS.GetField( "...", Row%, FieldData$ ) Then
    If FieldData$ = "Data contains non-latin script" Then
        MsgBox "Sorry, this macro works only on fields containing Latin script!", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If
End If

' Get the contents of the field.

CS.CopyField

' Use Windows API to access the Clipboard.

ActiveWindowHandle = GetActiveWindow()
If OpenClipboard( ActiveWindowHandle ) = FALSE Then
    MsgBox "Sorry, the contents of the Clipboard could not be accessed.", CRITICAL_MESSAGE, WaltsMacros$
    ClipboardClose = CloseClipboard()
    Exit Sub
End If

ClipboardDataHandle = GetClipboardData( UNICODE_TEXT )
If ClipboardDataHandle = 0& Then
    MsgBox "Sorry, the macro failed to get Clipboard data.", CRITICAL_MESSAGE, WaltsMacros$
    ClipboardClose = CloseClipboard()
    Exit Sub
End If
ClipboardDataLocation = GlobalLock( ClipboardDataHandle )

' This method of accessing the Clipboard retrieves Unicode characters, but only up to
' U+FFFF. Code points above that have a decimal value greater than the OML limit of data
' type integer, which is 65,536 (-32,768 to 32,767). (Hex values above 7FFF are negative
' decimal numbers.)

' Copy the Clipboard contents to a prepared array.

LengthOfField% = GetStringLength( ClipboardDataLocation )
If LengthOfField% > 0 Then
    ClipboardCharsDim% = ( LengthOfField% - 1 ) * 2
    ReDim ClipboardChars( ClipboardCharsDim% )
    CopyMemory ClipboardChars( 0 ), ByVal ClipboardDataLocation, ClipboardCharsDim% + 2
  Else
    Exit Sub
End If

GlobalUnlock( ClipboardDataHandle )
ClipboardClose = CloseClipboard()

' Fill the arrays.

FillCharactersANSEL
FillCharactersExtendedA_B
FillCharactersExtendedAdditional
FillMARC_Latin

' Build a new string of characters for the field from the numbers in the array,
' decomposing them as they are found. As type "integer", the numbers range from -32,768
' to 32,767. Numbers 0 to 127 encode plain ASCII characters, which are added to the
' string as themselves. All other numbers are converted to hexadecimal by means of the
' BASIC "Hex" function. Decimal numbers from 128 to 32,767 are directly converted to
' hexadecimal 0080 to 7FFF. Negative decimal numbers are made positive by adding them to
' 65,536, so the range -32,768 to -1 becomes the range 32,768 to 65,535. The "Hex"
' function converts those numbers to the hexadecimal range 8000 to FFFF. Those
' hexadecimal numbers can then be evaluated for decomposition.

For i = 0 to ClipboardCharsDim%
  CodePoint% = ClipboardChars( i )

' Characters U+FE20 to U+FE23 are combining two-part diacritics, each half applying to
' its preceding letter. Although there is nothing to decompose, their use has been
' deprecated in favor of using a single double-width diacritic that appears between the
' two letters affected. This macro updates coding of the "ligature" and "double tilde"
' diacritics.

  If CodePoint% = 0 Or CodePoint% = -479 Or CodePoint% = -477 Then
      CharToAdd$ = ""
    ElseIf CodePoint% > 0 And CodePoint% < 128 Then
      If DoubleWidth$ = "" Then
          CharToAdd$   = Chr$( CodePoint% )
        Else
          CharToAdd$   = DoubleWidth$ & Chr$( CodePoint% )
          DoubleWidth$ = ""
          DoubleWidthCount% = DoubleWidthCount% + 1
      End If
    ElseIf CodePoint% = 450 Then
      CharToAdd$ = DELIMITER
    ElseIf CodePoint% = -480 Then
      DoubleWidth$ = DOUBLE_INVERTED_BREVE
    ElseIf CodePoint% = -478 Then
      DoubleWidth$ = DOUBLE_TILDE
    ElseIf CodePoint% <> 0 Then
      If CodePoint% > 127 Then
          UniCodePoint$ = Hex( ClipboardChars( i ) )
          If Len( UniCodePoint$ ) < 4 Then
             UniCodePoint$ = String$( 4 - Len( UniCodePoint$ ), "0" ) & UniCodePoint$
          End If
        Else
          UniCodePoint$ = Hex( INTEGER_RANGE + CodePoint% )
      End If

' For each hexadecimal representation of a character, do a binary search in the array to
' see if it has a precomposed counterpart. If it doesn't, the character is added to the
' new string as is. Otherwise, the characters comprising the composed character are added
' to the new string.

      High% = 443
      Low%  = 0
      Do While Low% <= High%
        Middle%         = Int( ( High% + Low% ) / 2 )
        PrecomposedNCR$ = Characters( PRECOMP, Middle% )
        Compare%        = StrComp( PrecomposedNCR$, UniCodePoint$ )
        Select Case Compare%
          Case -1
            Low%    = Middle% + 1
          Case 0
            Result% = Middle%
            Exit Do
          Case 1
            High%   = Middle% - 1
        End Select
      Loop
      If PrecomposedNCR$ = UniCodePoint$ Then
          CharToAdd$           = Characters( DECOMP, Result% )
          DecomposedCharCount% = DecomposedCharCount% + 1
        Else
          CharToAdd$ = "&#x" & UniCodePoint$ & ";"
      End If
  End If
  NewField$  = NewField$ & CharToAdd$
  CharToAdd$ = ""
Next i

' Go through the string again and check for non-MARC Latin script characters, in case
' special treatment of them is requested.

Start% = 1
Do
  p = InStr( Start%, NewField$, "&#x", 1 )
  If p = 0 Then
      Exit Do
    Else
      TestNCR$  = Mid$( NewField$, p + 3, 4 )
      If TestNCR$ <> "01C2" Then
          MARC_Char = FALSE
          For i = 0 To 66
            If TestNCR$ = MARC_Latin( i ) Then
                MARC_Char = TRUE
                Exit For
            End If
          Next i
          If MARC_Char = FALSE Then
              NewFillCharField$  = Left$( NewField$, p - 1 ) & Chr$( 252 ) & Mid$( NewField$, p + 8 )
              NewCodePointField$ = Left$( NewField$, p - 1 ) & "{" & TestNCR$ & "}" & Mid$( NewField$, p + 8 )
          End If
      End If
      Start% = p + 1
  End If
Loop Until p = 0

If DecomposedCharCount% = 0 Then
    If DoubleWidthCount% = 0 Then
        MsgBox "No characters in this field were decomposed.", INFORMATION_MESSAGE, WaltsMacros$
      Else
        If CS.SetFieldLine( CS.CursorRow, NewField$ ) Then
            FinalMessage$ = Trim$( Str$( DoubleWidthCount% * 2 ) ) & " half-diacritics in this field were converted to "
            FinalMessage$ = FinalMessage$ & Trim$( Str$( DoubleWidthCount% ) ) & " double-width diacritics."
            MsgBox FinalMessage$, INFORMATION_MESSAGE, WaltsMacros$
          Else
            MsgBox "Sorry, the macro could not replace the field.", CRITICAL_MESSAGE, WaltsMacros$
        End If
    End If
    CS.CursorColumn = Col%
    Exit Sub
End If

If DecomposedCharCount% > 0 Then

    If NewFillCharField$ <> "" Then
        Begin Dialog Dialog1Definition  192,  98, WaltsMacros$
          OkButton        70,  74,  52,  14
          CancelButton   130,  74,  52,  14
          Text            10,   6, 172,  16, "Non-MARC characters were found in the process of decomposition. Identify them?"
          OptionGroup                                                                                                          .OptionGroup1
           OptionButton   16,  26, 128,  12, "&Ignore them",                                                                   .OptionButton1
           OptionButton   16,  40, 128,  12, "Show them as &fill characters",                                                  .OptionButton2
           OptionButton   16,  54, 128,  12, "Show them as &code points",                                                      .OptionButton3
        End Dialog

        Dim Dialog1 As Dialog1Definition
        On Error Resume Next
        Dialog Dialog1
        If Err = DLG_STATEMENT_CANCEL Then Exit Sub

        If Dialog1.OptionGroup1 = 1 Then
            NewField$ = NewFillCharField$
          ElseIf Dialog1.OptionGroup1 = 2 Then
            NewField$ = NewCodePointField$
        End If
    End If

    If CS.SetFieldLine( CS.CursorRow, NewField$ ) Then

        If DecomposedCharCount% = 1 Then
            ChangeCount1$ = "One character in this field was"
          Else
            ChangeCount1$ = Trim$( Str$( DecomposedCharCount% ) ) & " characters in this field were"
        End If

        If DoubleWidthCount% = 0 Then
            MsgBox ChangeCount1$ & " decomposed.", INFORMATION_MESSAGE, WaltsMacros$
          Else
            FinalMessage$ = ChangeCount1$ & " decomposed, and " & Trim$( Str$( DoubleWidthCount% * 2 ) ) & " half-diacritics in"
            FinalMessage$ = FinalMessage$ & " this field were converted to " & Trim$( Str$( DoubleWidthCount% ) ) & " double-"
            FinalMessage$ = FinalMessage$ & "width diacritics."
            MsgBox FinalMessage$, INFORMATION_MESSAGE, WaltsMacros$
        End If
    End If

  Else
    MsgBox "Sorry, the macro could not replace the field.", CRITICAL_MESSAGE, WaltsMacros$
End If
CS.CursorColumn = Col%

End Sub

'****************************************************************************************

Sub FillCharactersANSEL

' In this array, the first dimension is the Unicode code point of a precomposed
' character, and the second dimension is the sequence of non-decomposable characters that
' comprise it. This list contains all the precomposed characters in Unicode blocks
' Latin-1 Supplement (U+008A-U+00FF) (also known as ANSEL), Latin Extended-A (U+0100-
' U+017F), Latin Extended-B (U+0180-U+024F), and Latin Extended Additional (U+1E00-
' U+1EFF). It does not include "Compatibility Decomposable Characters," characters that
' merely resemble other characters. For example, the character Latin capital ligature
' "IJ" looks like it is made up of the two letters "I" and "J", but it is actually not,
' and so being non-decomposable does not appear here.
'
' Filling the array is split into three subroutines because of an OML limit on procedure
' size. The first sub starts the array with characters from the Unicode block Latin-1
' Supplement; the second continues with Supplements Latin-1 and Latin Extended-A and -B;
' the third completes the array with characters from the Latin Extended Additional block.

ReDim Characters( 1, 501 )

Characters( PRECOMP, 0   ) = "008A" : Characters( DECOMP, 0   ) = "S" & CARON
Characters( PRECOMP, 1   ) = "008E" : Characters( DECOMP, 1   ) = "Z" & CARON
Characters( PRECOMP, 2   ) = "009A" : Characters( DECOMP, 2   ) = "S" & CARON
Characters( PRECOMP, 3   ) = "009E" : Characters( DECOMP, 3   ) = "z" & CARON
Characters( PRECOMP, 4   ) = "009F" : Characters( DECOMP, 4   ) = "Y" & DIAERESIS
Characters( PRECOMP, 5   ) = "00C0" : Characters( DECOMP, 5   ) = "A" & GRAVE
Characters( PRECOMP, 6   ) = "00C1" : Characters( DECOMP, 6   ) = "A" & ACUTE
Characters( PRECOMP, 7   ) = "00C2" : Characters( DECOMP, 7   ) = "A" & CIRCUMFLEX
Characters( PRECOMP, 8   ) = "00C3" : Characters( DECOMP, 8   ) = "A" & TILDE
Characters( PRECOMP, 9   ) = "00C4" : Characters( DECOMP, 9   ) = "A" & DIAERESIS
Characters( PRECOMP, 10  ) = "00C5" : Characters( DECOMP, 10  ) = "A" & RING_ABOVE
Characters( PRECOMP, 11  ) = "00C7" : Characters( DECOMP, 11  ) = "C" & CEDILLA
Characters( PRECOMP, 12  ) = "00C8" : Characters( DECOMP, 12  ) = "E" & GRAVE
Characters( PRECOMP, 13  ) = "00C9" : Characters( DECOMP, 13  ) = "E" & ACUTE
Characters( PRECOMP, 14  ) = "00CA" : Characters( DECOMP, 14  ) = "E" & CIRCUMFLEX
Characters( PRECOMP, 15  ) = "00CB" : Characters( DECOMP, 15  ) = "E" & DIAERESIS
Characters( PRECOMP, 16  ) = "00CC" : Characters( DECOMP, 16  ) = "I" & GRAVE
Characters( PRECOMP, 17  ) = "00CD" : Characters( DECOMP, 17  ) = "I" & ACUTE
Characters( PRECOMP, 18  ) = "00CE" : Characters( DECOMP, 18  ) = "I" & CIRCUMFLEX
Characters( PRECOMP, 19  ) = "00CF" : Characters( DECOMP, 19  ) = "I" & DIAERESIS
Characters( PRECOMP, 20  ) = "00D1" : Characters( DECOMP, 20  ) = "N" & TILDE
Characters( PRECOMP, 21  ) = "00D2" : Characters( DECOMP, 21  ) = "O" & GRAVE
Characters( PRECOMP, 22  ) = "00D3" : Characters( DECOMP, 22  ) = "O" & ACUTE
Characters( PRECOMP, 23  ) = "00D4" : Characters( DECOMP, 23  ) = "O" & CIRCUMFLEX
Characters( PRECOMP, 24  ) = "00D5" : Characters( DECOMP, 24  ) = "O" & TILDE
Characters( PRECOMP, 25  ) = "00D6" : Characters( DECOMP, 25  ) = "O" & DIAERESIS
Characters( PRECOMP, 26  ) = "00D9" : Characters( DECOMP, 26  ) = "U" & GRAVE
Characters( PRECOMP, 27  ) = "00DA" : Characters( DECOMP, 27  ) = "U" & ACUTE
Characters( PRECOMP, 28  ) = "00DB" : Characters( DECOMP, 28  ) = "U" & CIRCUMFLEX
Characters( PRECOMP, 29  ) = "00DC" : Characters( DECOMP, 29  ) = "U" & DIAERESIS
Characters( PRECOMP, 30  ) = "00DD" : Characters( DECOMP, 30  ) = "Y" & ACUTE
Characters( PRECOMP, 31  ) = "00E0" : Characters( DECOMP, 31  ) = "a" & GRAVE
Characters( PRECOMP, 32  ) = "00E1" : Characters( DECOMP, 32  ) = "a" & ACUTE
Characters( PRECOMP, 33  ) = "00E2" : Characters( DECOMP, 33  ) = "a" & CIRCUMFLEX
Characters( PRECOMP, 34  ) = "00E3" : Characters( DECOMP, 34  ) = "a" & TILDE
Characters( PRECOMP, 35  ) = "00E4" : Characters( DECOMP, 35  ) = "a" & DIAERESIS
Characters( PRECOMP, 36  ) = "00E5" : Characters( DECOMP, 36  ) = "a" & RING_ABOVE
Characters( PRECOMP, 37  ) = "00E7" : Characters( DECOMP, 37  ) = "c" & CEDILLA
Characters( PRECOMP, 38  ) = "00E8" : Characters( DECOMP, 38  ) = "e" & GRAVE
Characters( PRECOMP, 39  ) = "00E9" : Characters( DECOMP, 39  ) = "e" & ACUTE
Characters( PRECOMP, 40  ) = "00EA" : Characters( DECOMP, 40  ) = "e" & CIRCUMFLEX
Characters( PRECOMP, 41  ) = "00EB" : Characters( DECOMP, 41  ) = "e" & DIAERESIS
Characters( PRECOMP, 42  ) = "00EC" : Characters( DECOMP, 42  ) = "i" & GRAVE
Characters( PRECOMP, 43  ) = "00ED" : Characters( DECOMP, 43  ) = "i" & ACUTE
Characters( PRECOMP, 44  ) = "00EE" : Characters( DECOMP, 44  ) = "i" & CIRCUMFLEX
Characters( PRECOMP, 45  ) = "00EF" : Characters( DECOMP, 45  ) = "i" & DIAERESIS
Characters( PRECOMP, 46  ) = "00F1" : Characters( DECOMP, 46  ) = "n" & TILDE
Characters( PRECOMP, 47  ) = "00F2" : Characters( DECOMP, 47  ) = "o" & GRAVE
Characters( PRECOMP, 48  ) = "00F3" : Characters( DECOMP, 48  ) = "o" & ACUTE
Characters( PRECOMP, 49  ) = "00F4" : Characters( DECOMP, 49  ) = "o" & CIRCUMFLEX
Characters( PRECOMP, 50  ) = "00F5" : Characters( DECOMP, 50  ) = "o" & TILDE
Characters( PRECOMP, 51  ) = "00F6" : Characters( DECOMP, 51  ) = "o" & DIAERESIS
Characters( PRECOMP, 52  ) = "00F9" : Characters( DECOMP, 52  ) = "u" & GRAVE
Characters( PRECOMP, 53  ) = "00FA" : Characters( DECOMP, 53  ) = "u" & ACUTE
Characters( PRECOMP, 54  ) = "00FB" : Characters( DECOMP, 54  ) = "u" & CIRCUMFLEX
Characters( PRECOMP, 55  ) = "00FC" : Characters( DECOMP, 55  ) = "u" & DIAERESIS
Characters( PRECOMP, 56  ) = "00FD" : Characters( DECOMP, 56  ) = "y" & ACUTE
Characters( PRECOMP, 57  ) = "00FF" : Characters( DECOMP, 57  ) = "y" & DIAERESIS

End Sub

'****************************************************************************************

Sub FillCharactersExtendedA_B

Characters( PRECOMP, 58  ) = "0100" : Characters( DECOMP, 58  ) = "A" & MACRON
Characters( PRECOMP, 59  ) = "0101" : Characters( DECOMP, 59  ) = "a" & MACRON
Characters( PRECOMP, 60  ) = "0102" : Characters( DECOMP, 60  ) = "A" & BREVE
Characters( PRECOMP, 61  ) = "0103" : Characters( DECOMP, 61  ) = "a" & BREVE
Characters( PRECOMP, 62  ) = "0104" : Characters( DECOMP, 62  ) = "A" & OGONEK
Characters( PRECOMP, 63  ) = "0105" : Characters( DECOMP, 63  ) = "a" & OGONEK
Characters( PRECOMP, 64  ) = "0106" : Characters( DECOMP, 64  ) = "C" & ACUTE
Characters( PRECOMP, 65  ) = "0107" : Characters( DECOMP, 65  ) = "c" & ACUTE
Characters( PRECOMP, 66  ) = "0108" : Characters( DECOMP, 66  ) = "C" & CIRCUMFLEX
Characters( PRECOMP, 67  ) = "0109" : Characters( DECOMP, 67  ) = "c" & CIRCUMFLEX
Characters( PRECOMP, 68  ) = "010A" : Characters( DECOMP, 68  ) = "C" & DOT_ABOVE
Characters( PRECOMP, 69  ) = "010B" : Characters( DECOMP, 69  ) = "c" & DOT_ABOVE
Characters( PRECOMP, 70  ) = "010C" : Characters( DECOMP, 70  ) = "C" & CARON
Characters( PRECOMP, 71  ) = "010D" : Characters( DECOMP, 71  ) = "c" & CARON
Characters( PRECOMP, 72  ) = "010E" : Characters( DECOMP, 72  ) = "D" & CARON
Characters( PRECOMP, 73  ) = "010F" : Characters( DECOMP, 73  ) = "d" & CARON
Characters( PRECOMP, 74  ) = "0112" : Characters( DECOMP, 74  ) = "E" & MACRON
Characters( PRECOMP, 75  ) = "0113" : Characters( DECOMP, 75  ) = "e" & MACRON
Characters( PRECOMP, 76  ) = "0114" : Characters( DECOMP, 76  ) = "E" & BREVE
Characters( PRECOMP, 77  ) = "0115" : Characters( DECOMP, 77  ) = "e" & BREVE
Characters( PRECOMP, 78  ) = "0116" : Characters( DECOMP, 78  ) = "E" & DOT_ABOVE
Characters( PRECOMP, 79  ) = "0117" : Characters( DECOMP, 79  ) = "e" & DOT_ABOVE
Characters( PRECOMP, 80  ) = "0118" : Characters( DECOMP, 80  ) = "E" & OGONEK
Characters( PRECOMP, 81  ) = "0119" : Characters( DECOMP, 81  ) = "e" & OGONEK
Characters( PRECOMP, 82  ) = "011A" : Characters( DECOMP, 82  ) = "E" & CARON
Characters( PRECOMP, 83  ) = "011B" : Characters( DECOMP, 83  ) = "e" & CARON
Characters( PRECOMP, 84  ) = "011C" : Characters( DECOMP, 84  ) = "G" & CIRCUMFLEX
Characters( PRECOMP, 85  ) = "011D" : Characters( DECOMP, 85  ) = "g" & CIRCUMFLEX
Characters( PRECOMP, 86  ) = "011E" : Characters( DECOMP, 86  ) = "G" & BREVE
Characters( PRECOMP, 87  ) = "011F" : Characters( DECOMP, 87  ) = "g" & BREVE
Characters( PRECOMP, 88  ) = "0120" : Characters( DECOMP, 88  ) = "G" & DOT_ABOVE
Characters( PRECOMP, 89  ) = "0121" : Characters( DECOMP, 89  ) = "g" & DOT_ABOVE
Characters( PRECOMP, 90  ) = "0122" : Characters( DECOMP, 90  ) = "G" & CEDILLA
Characters( PRECOMP, 91  ) = "0123" : Characters( DECOMP, 91  ) = "g" & CEDILLA
Characters( PRECOMP, 92  ) = "0124" : Characters( DECOMP, 92  ) = "H" & CIRCUMFLEX
Characters( PRECOMP, 93  ) = "0125" : Characters( DECOMP, 93  ) = "h" & CIRCUMFLEX
Characters( PRECOMP, 94  ) = "0128" : Characters( DECOMP, 94  ) = "I" & TILDE
Characters( PRECOMP, 95  ) = "0129" : Characters( DECOMP, 95  ) = "i" & TILDE
Characters( PRECOMP, 96  ) = "012A" : Characters( DECOMP, 96  ) = "I" & MACRON
Characters( PRECOMP, 97  ) = "012B" : Characters( DECOMP, 97  ) = "i" & MACRON
Characters( PRECOMP, 98  ) = "012C" : Characters( DECOMP, 98  ) = "I" & BREVE
Characters( PRECOMP, 99  ) = "012D" : Characters( DECOMP, 99  ) = "i" & BREVE
Characters( PRECOMP, 100 ) = "012E" : Characters( DECOMP, 100 ) = "I" & OGONEK
Characters( PRECOMP, 101 ) = "012F" : Characters( DECOMP, 101 ) = "i" & OGONEK
Characters( PRECOMP, 102 ) = "0130" : Characters( DECOMP, 102 ) = "I" & DOT_ABOVE
Characters( PRECOMP, 103 ) = "0134" : Characters( DECOMP, 103 ) = "J" & CIRCUMFLEX
Characters( PRECOMP, 104 ) = "0135" : Characters( DECOMP, 104 ) = "j" & CIRCUMFLEX
Characters( PRECOMP, 105 ) = "0136" : Characters( DECOMP, 105 ) = "K" & CEDILLA
Characters( PRECOMP, 106 ) = "0137" : Characters( DECOMP, 106 ) = "k" & CEDILLA
Characters( PRECOMP, 107 ) = "0139" : Characters( DECOMP, 107 ) = "L" & ACUTE
Characters( PRECOMP, 108 ) = "013A" : Characters( DECOMP, 108 ) = "l" & ACUTE
Characters( PRECOMP, 109 ) = "013B" : Characters( DECOMP, 109 ) = "L" & CEDILLA
Characters( PRECOMP, 110 ) = "013C" : Characters( DECOMP, 110 ) = "l" & CEDILLA
Characters( PRECOMP, 111 ) = "013D" : Characters( DECOMP, 111 ) = "L" & CARON
Characters( PRECOMP, 112 ) = "013E" : Characters( DECOMP, 112 ) = "l" & CARON
Characters( PRECOMP, 113 ) = "0143" : Characters( DECOMP, 113 ) = "N" & ACUTE
Characters( PRECOMP, 114 ) = "0144" : Characters( DECOMP, 114 ) = "n" & ACUTE
Characters( PRECOMP, 115 ) = "0145" : Characters( DECOMP, 115 ) = "N" & CEDILLA
Characters( PRECOMP, 116 ) = "0146" : Characters( DECOMP, 116 ) = "n" & CEDILLA
Characters( PRECOMP, 117 ) = "0147" : Characters( DECOMP, 117 ) = "N" & CARON
Characters( PRECOMP, 118 ) = "0148" : Characters( DECOMP, 118 ) = "n" & CARON
Characters( PRECOMP, 119 ) = "014C" : Characters( DECOMP, 119 ) = "O" & MACRON
Characters( PRECOMP, 120 ) = "014D" : Characters( DECOMP, 120 ) = "o" & MACRON
Characters( PRECOMP, 121 ) = "014E" : Characters( DECOMP, 121 ) = "O" & BREVE
Characters( PRECOMP, 122 ) = "014F" : Characters( DECOMP, 122 ) = "o" & BREVE
Characters( PRECOMP, 123 ) = "0150" : Characters( DECOMP, 123 ) = "O" & DOUBLE_ACUTE
Characters( PRECOMP, 124 ) = "0151" : Characters( DECOMP, 124 ) = "o" & DOUBLE_ACUTE
Characters( PRECOMP, 125 ) = "0154" : Characters( DECOMP, 125 ) = "R" & ACUTE
Characters( PRECOMP, 126 ) = "0155" : Characters( DECOMP, 126 ) = "r" & ACUTE
Characters( PRECOMP, 127 ) = "0156" : Characters( DECOMP, 127 ) = "R" & CEDILLA
Characters( PRECOMP, 128 ) = "0157" : Characters( DECOMP, 128 ) = "r" & CEDILLA
Characters( PRECOMP, 129 ) = "0158" : Characters( DECOMP, 129 ) = "R" & CARON
Characters( PRECOMP, 130 ) = "0159" : Characters( DECOMP, 130 ) = "r" & CARON
Characters( PRECOMP, 131 ) = "015A" : Characters( DECOMP, 131 ) = "S" & ACUTE
Characters( PRECOMP, 132 ) = "015B" : Characters( DECOMP, 132 ) = "s" & ACUTE
Characters( PRECOMP, 133 ) = "015C" : Characters( DECOMP, 133 ) = "S" & CIRCUMFLEX
Characters( PRECOMP, 134 ) = "015D" : Characters( DECOMP, 134 ) = "s" & CIRCUMFLEX
Characters( PRECOMP, 135 ) = "015E" : Characters( DECOMP, 135 ) = "S" & CEDILLA
Characters( PRECOMP, 136 ) = "015F" : Characters( DECOMP, 136 ) = "s" & CEDILLA
Characters( PRECOMP, 137 ) = "0160" : Characters( DECOMP, 137 ) = "S" & CARON
Characters( PRECOMP, 138 ) = "0161" : Characters( DECOMP, 138 ) = "s" & CARON
Characters( PRECOMP, 139 ) = "0162" : Characters( DECOMP, 139 ) = "T" & CEDILLA
Characters( PRECOMP, 140 ) = "0163" : Characters( DECOMP, 140 ) = "t" & CEDILLA
Characters( PRECOMP, 141 ) = "0164" : Characters( DECOMP, 141 ) = "T" & CARON
Characters( PRECOMP, 142 ) = "0165" : Characters( DECOMP, 142 ) = "t" & CARON
Characters( PRECOMP, 143 ) = "0168" : Characters( DECOMP, 143 ) = "U" & TILDE
Characters( PRECOMP, 144 ) = "0169" : Characters( DECOMP, 144 ) = "u" & TILDE
Characters( PRECOMP, 145 ) = "016A" : Characters( DECOMP, 145 ) = "U" & MACRON
Characters( PRECOMP, 146 ) = "016B" : Characters( DECOMP, 146 ) = "u" & MACRON
Characters( PRECOMP, 147 ) = "016C" : Characters( DECOMP, 147 ) = "U" & BREVE
Characters( PRECOMP, 148 ) = "016D" : Characters( DECOMP, 148 ) = "u" & BREVE
Characters( PRECOMP, 149 ) = "016E" : Characters( DECOMP, 149 ) = "U" & RING_ABOVE
Characters( PRECOMP, 150 ) = "016F" : Characters( DECOMP, 150 ) = "u" & RING_ABOVE
Characters( PRECOMP, 151 ) = "0170" : Characters( DECOMP, 151 ) = "U" & DOUBLE_ACUTE
Characters( PRECOMP, 152 ) = "0171" : Characters( DECOMP, 152 ) = "u" & DOUBLE_ACUTE
Characters( PRECOMP, 153 ) = "0172" : Characters( DECOMP, 153 ) = "U" & OGONEK
Characters( PRECOMP, 154 ) = "0173" : Characters( DECOMP, 154 ) = "u" & OGONEK
Characters( PRECOMP, 155 ) = "0174" : Characters( DECOMP, 155 ) = "W" & CIRCUMFLEX
Characters( PRECOMP, 156 ) = "0175" : Characters( DECOMP, 156 ) = "w" & CIRCUMFLEX
Characters( PRECOMP, 157 ) = "0176" : Characters( DECOMP, 157 ) = "Y" & CIRCUMFLEX
Characters( PRECOMP, 158 ) = "0177" : Characters( DECOMP, 158 ) = "y" & CIRCUMFLEX
Characters( PRECOMP, 159 ) = "0178" : Characters( DECOMP, 159 ) = "Y" & DIAERESIS
Characters( PRECOMP, 160 ) = "0179" : Characters( DECOMP, 160 ) = "Z" & ACUTE
Characters( PRECOMP, 161 ) = "017A" : Characters( DECOMP, 161 ) = "z" & ACUTE
Characters( PRECOMP, 162 ) = "017B" : Characters( DECOMP, 162 ) = "Z" & DOT_ABOVE
Characters( PRECOMP, 163 ) = "017C" : Characters( DECOMP, 163 ) = "z" & DOT_ABOVE
Characters( PRECOMP, 164 ) = "017D" : Characters( DECOMP, 164 ) = "Z" & CARON
Characters( PRECOMP, 165 ) = "017E" : Characters( DECOMP, 165 ) = "z" & CARON
Characters( PRECOMP, 166 ) = "01A0" : Characters( DECOMP, 166 ) = "O" & HORN
Characters( PRECOMP, 167 ) = "01A1" : Characters( DECOMP, 167 ) = "o" & HORN
Characters( PRECOMP, 168 ) = "01AF" : Characters( DECOMP, 168 ) = "U" & HORN
Characters( PRECOMP, 169 ) = "01B0" : Characters( DECOMP, 169 ) = "u" & HORN
Characters( PRECOMP, 170 ) = "01CD" : Characters( DECOMP, 170 ) = "A" & CARON
Characters( PRECOMP, 171 ) = "01CE" : Characters( DECOMP, 171 ) = "a" & CARON
Characters( PRECOMP, 172 ) = "01CF" : Characters( DECOMP, 172 ) = "I" & CARON
Characters( PRECOMP, 173 ) = "01D0" : Characters( DECOMP, 173 ) = "i" & CARON
Characters( PRECOMP, 174 ) = "01D1" : Characters( DECOMP, 174 ) = "O" & CARON
Characters( PRECOMP, 175 ) = "01D2" : Characters( DECOMP, 175 ) = "o" & CARON
Characters( PRECOMP, 176 ) = "01D3" : Characters( DECOMP, 176 ) = "U" & CARON
Characters( PRECOMP, 177 ) = "01D4" : Characters( DECOMP, 177 ) = "u" & CARON
Characters( PRECOMP, 178 ) = "01D5" : Characters( DECOMP, 178 ) = "U" & DIAERESIS & MACRON
Characters( PRECOMP, 179 ) = "01D6" : Characters( DECOMP, 179 ) = "u" & DIAERESIS & MACRON
Characters( PRECOMP, 180 ) = "01D7" : Characters( DECOMP, 180 ) = "U" & DIAERESIS & ACUTE
Characters( PRECOMP, 181 ) = "01D8" : Characters( DECOMP, 181 ) = "u" & DIAERESIS & ACUTE
Characters( PRECOMP, 182 ) = "01D9" : Characters( DECOMP, 182 ) = "U" & DIAERESIS & CARON
Characters( PRECOMP, 183 ) = "01DA" : Characters( DECOMP, 183 ) = "u" & DIAERESIS & CARON
Characters( PRECOMP, 184 ) = "01DB" : Characters( DECOMP, 184 ) = "U" & DIAERESIS & GRAVE
Characters( PRECOMP, 185 ) = "01DC" : Characters( DECOMP, 185 ) = "u" & DIAERESIS & GRAVE
Characters( PRECOMP, 186 ) = "01DE" : Characters( DECOMP, 186 ) = "A" & DIAERESIS & MACRON
Characters( PRECOMP, 187 ) = "01DF" : Characters( DECOMP, 187 ) = "a" & DIAERESIS & MACRON
Characters( PRECOMP, 188 ) = "01E0" : Characters( DECOMP, 188 ) = "A" & DOT_ABOVE & MACRON
Characters( PRECOMP, 189 ) = "01E1" : Characters( DECOMP, 189 ) = "a" & DOT_ABOVE & MACRON
Characters( PRECOMP, 190 ) = "01E2" : Characters( DECOMP, 190 ) = AE_LIGATURE_UC & MACRON
Characters( PRECOMP, 191 ) = "01E3" : Characters( DECOMP, 191 ) = ae_LIGATURE_LC & MACRON
Characters( PRECOMP, 192 ) = "01E6" : Characters( DECOMP, 192 ) = "G" & CARON
Characters( PRECOMP, 193 ) = "01E7" : Characters( DECOMP, 193 ) = "g" & CARON
Characters( PRECOMP, 194 ) = "01E8" : Characters( DECOMP, 194 ) = "K" & CARON
Characters( PRECOMP, 195 ) = "01E9" : Characters( DECOMP, 195 ) = "k" & CARON
Characters( PRECOMP, 196 ) = "01EA" : Characters( DECOMP, 196 ) = "O" & OGONEK
Characters( PRECOMP, 197 ) = "01EB" : Characters( DECOMP, 197 ) = "o" & OGONEK
Characters( PRECOMP, 198 ) = "01EC" : Characters( DECOMP, 198 ) = "O" & OGONEK & MACRON
Characters( PRECOMP, 199 ) = "01ED" : Characters( DECOMP, 199 ) = "o" & OGONEK & MACRON
Characters( PRECOMP, 200 ) = "01EE" : Characters( DECOMP, 200 ) = EZH_UC & CARON
Characters( PRECOMP, 201 ) = "01EE" : Characters( DECOMP, 201 ) = ezh_LC & CARON
Characters( PRECOMP, 202 ) = "01F0" : Characters( DECOMP, 202 ) = "j" & CARON
Characters( PRECOMP, 203 ) = "01F4" : Characters( DECOMP, 203 ) = "G" & ACUTE
Characters( PRECOMP, 204 ) = "01F5" : Characters( DECOMP, 204 ) = "g" & ACUTE
Characters( PRECOMP, 205 ) = "01F8" : Characters( DECOMP, 205 ) = "N" & GRAVE
Characters( PRECOMP, 206 ) = "01F9" : Characters( DECOMP, 206 ) = "n" & GRAVE
Characters( PRECOMP, 207 ) = "01FA" : Characters( DECOMP, 207 ) = "A" & RING_ABOVE & ACUTE
Characters( PRECOMP, 208 ) = "01FB" : Characters( DECOMP, 208 ) = "a" & RING_ABOVE & ACUTE
Characters( PRECOMP, 209 ) = "01FC" : Characters( DECOMP, 209 ) = AE_LIGATURE_UC & ACUTE
Characters( PRECOMP, 210 ) = "01FD" : Characters( DECOMP, 210 ) = ae_LIGATURE_LC & ACUTE
Characters( PRECOMP, 211 ) = "01FE" : Characters( DECOMP, 211 ) = O_SLASH_UC & ACUTE
Characters( PRECOMP, 212 ) = "01FF" : Characters( DECOMP, 212 ) = o_SLASH_LC & ACUTE
Characters( PRECOMP, 213 ) = "0200" : Characters( DECOMP, 213 ) = "A" & DOUBLE_GRAVE
Characters( PRECOMP, 214 ) = "0201" : Characters( DECOMP, 214 ) = "a" & DOUBLE_GRAVE
Characters( PRECOMP, 215 ) = "0202" : Characters( DECOMP, 215 ) = "A" & INVERTED_BREVE
Characters( PRECOMP, 216 ) = "0203" : Characters( DECOMP, 216 ) = "a" & INVERTED_BREVE
Characters( PRECOMP, 217 ) = "0204" : Characters( DECOMP, 217 ) = "E" & DOUBLE_GRAVE
Characters( PRECOMP, 218 ) = "0205" : Characters( DECOMP, 218 ) = "e" & DOUBLE_GRAVE
Characters( PRECOMP, 219 ) = "0206" : Characters( DECOMP, 219 ) = "E" & INVERTED_BREVE
Characters( PRECOMP, 220 ) = "0207" : Characters( DECOMP, 220 ) = "e" & INVERTED_BREVE
Characters( PRECOMP, 221 ) = "0208" : Characters( DECOMP, 221 ) = "I" & DOUBLE_GRAVE
Characters( PRECOMP, 222 ) = "0209" : Characters( DECOMP, 222 ) = "i" & DOUBLE_GRAVE
Characters( PRECOMP, 223 ) = "020A" : Characters( DECOMP, 223 ) = "I" & INVERTED_BREVE
Characters( PRECOMP, 224 ) = "020B" : Characters( DECOMP, 224 ) = "i" & INVERTED_BREVE
Characters( PRECOMP, 225 ) = "020C" : Characters( DECOMP, 225 ) = "O" & DOUBLE_GRAVE
Characters( PRECOMP, 226 ) = "020D" : Characters( DECOMP, 226 ) = "o" & DOUBLE_GRAVE
Characters( PRECOMP, 227 ) = "020E" : Characters( DECOMP, 227 ) = "O" & INVERTED_BREVE
Characters( PRECOMP, 228 ) = "020F" : Characters( DECOMP, 228 ) = "o" & INVERTED_BREVE
Characters( PRECOMP, 229 ) = "0210" : Characters( DECOMP, 229 ) = "R" & DOUBLE_GRAVE
Characters( PRECOMP, 230 ) = "0211" : Characters( DECOMP, 230 ) = "r" & DOUBLE_GRAVE
Characters( PRECOMP, 231 ) = "0212" : Characters( DECOMP, 231 ) = "R" & INVERTED_BREVE
Characters( PRECOMP, 232 ) = "0213" : Characters( DECOMP, 232 ) = "r" & INVERTED_BREVE
Characters( PRECOMP, 233 ) = "0214" : Characters( DECOMP, 233 ) = "U" & DOUBLE_GRAVE
Characters( PRECOMP, 234 ) = "0215" : Characters( DECOMP, 234 ) = "u" & DOUBLE_GRAVE
Characters( PRECOMP, 235 ) = "0216" : Characters( DECOMP, 235 ) = "U" & INVERTED_BREVE
Characters( PRECOMP, 236 ) = "0217" : Characters( DECOMP, 236 ) = "u" & INVERTED_BREVE
Characters( PRECOMP, 237 ) = "0218" : Characters( DECOMP, 237 ) = "S" & COMMA_BELOW
Characters( PRECOMP, 238 ) = "0219" : Characters( DECOMP, 238 ) = "s" & COMMA_BELOW
Characters( PRECOMP, 239 ) = "021A" : Characters( DECOMP, 239 ) = "T" & COMMA_BELOW
Characters( PRECOMP, 240 ) = "021B" : Characters( DECOMP, 240 ) = "t" & COMMA_BELOW
Characters( PRECOMP, 241 ) = "021E" : Characters( DECOMP, 241 ) = "H" & CARON
Characters( PRECOMP, 242 ) = "021F" : Characters( DECOMP, 242 ) = "h" & CARON
Characters( PRECOMP, 243 ) = "0226" : Characters( DECOMP, 243 ) = "A" & DOT_ABOVE
Characters( PRECOMP, 244 ) = "0227" : Characters( DECOMP, 244 ) = "a" & DOT_ABOVE
Characters( PRECOMP, 245 ) = "0228" : Characters( DECOMP, 245 ) = "E" & CEDILLA
Characters( PRECOMP, 246 ) = "0229" : Characters( DECOMP, 246 ) = "e" & CEDILLA
Characters( PRECOMP, 247 ) = "022A" : Characters( DECOMP, 247 ) = "O" & DIAERESIS & MACRON
Characters( PRECOMP, 248 ) = "022B" : Characters( DECOMP, 248 ) = "o" & DIAERESIS & MACRON
Characters( PRECOMP, 249 ) = "022C" : Characters( DECOMP, 249 ) = "O" & TILDE & MACRON
Characters( PRECOMP, 250 ) = "022D" : Characters( DECOMP, 250 ) = "o" & TILDE & MACRON
Characters( PRECOMP, 251 ) = "022E" : Characters( DECOMP, 251 ) = "O" & DOT_ABOVE
Characters( PRECOMP, 252 ) = "022F" : Characters( DECOMP, 252 ) = "o" & DOT_ABOVE
Characters( PRECOMP, 253 ) = "0230" : Characters( DECOMP, 253 ) = "O" & DOT_ABOVE & MACRON
Characters( PRECOMP, 254 ) = "0231" : Characters( DECOMP, 254 ) = "o" & DOT_ABOVE & MACRON
Characters( PRECOMP, 255 ) = "0232" : Characters( DECOMP, 255 ) = "Y" & MACRON
Characters( PRECOMP, 256 ) = "0233" : Characters( DECOMP, 256 ) = "y" & MACRON

End Sub

'****************************************************************************************

Sub FillCharactersExtendedAdditional

Characters( PRECOMP, 257 ) = "1E00" : Characters( DECOMP, 257 ) = "A" & RING_BELOW
Characters( PRECOMP, 258 ) = "1E01" : Characters( DECOMP, 258 ) = "a" & RING_BELOW
Characters( PRECOMP, 259 ) = "1E02" : Characters( DECOMP, 259 ) = "B" & DOT_ABOVE
Characters( PRECOMP, 260 ) = "1E03" : Characters( DECOMP, 260 ) = "b" & DOT_ABOVE
Characters( PRECOMP, 261 ) = "1E04" : Characters( DECOMP, 261 ) = "B" & DOT_BELOW
Characters( PRECOMP, 262 ) = "1E05" : Characters( DECOMP, 262 ) = "b" & DOT_BELOW
Characters( PRECOMP, 263 ) = "1E06" : Characters( DECOMP, 263 ) = "B" & MACRON_BELOW
Characters( PRECOMP, 264 ) = "1E07" : Characters( DECOMP, 264 ) = "b" & MACRON_BELOW
Characters( PRECOMP, 265 ) = "1E08" : Characters( DECOMP, 265 ) = "C" & CEDILLA & ACUTE
Characters( PRECOMP, 266 ) = "1E09" : Characters( DECOMP, 266 ) = "c" & CEDILLA & ACUTE
Characters( PRECOMP, 267 ) = "1E0A" : Characters( DECOMP, 267 ) = "D" & DOT_ABOVE
Characters( PRECOMP, 268 ) = "1E0B" : Characters( DECOMP, 268 ) = "d" & DOT_ABOVE
Characters( PRECOMP, 269 ) = "1E0C" : Characters( DECOMP, 269 ) = "D" & DOT_BELOW
Characters( PRECOMP, 270 ) = "1E0D" : Characters( DECOMP, 270 ) = "d" & DOT_BELOW
Characters( PRECOMP, 271 ) = "1E0E" : Characters( DECOMP, 271 ) = "D" & MACRON_BELOW
Characters( PRECOMP, 272 ) = "1E0F" : Characters( DECOMP, 272 ) = "d" & MACRON_BELOW
Characters( PRECOMP, 273 ) = "1E10" : Characters( DECOMP, 273 ) = "D" & CEDILLA
Characters( PRECOMP, 274 ) = "1E11" : Characters( DECOMP, 274 ) = "d" & CEDILLA
Characters( PRECOMP, 275 ) = "1E12" : Characters( DECOMP, 275 ) = "D" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 276 ) = "1E13" : Characters( DECOMP, 276 ) = "d" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 277 ) = "1E14" : Characters( DECOMP, 277 ) = "E" & MACRON & GRAVE
Characters( PRECOMP, 278 ) = "1E15" : Characters( DECOMP, 278 ) = "e" & MACRON & GRAVE
Characters( PRECOMP, 279 ) = "1E16" : Characters( DECOMP, 279 ) = "E" & MACRON & ACUTE
Characters( PRECOMP, 280 ) = "1E17" : Characters( DECOMP, 280 ) = "e" & MACRON & ACUTE
Characters( PRECOMP, 281 ) = "1E18" : Characters( DECOMP, 281 ) = "E" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 282 ) = "1E19" : Characters( DECOMP, 282 ) = "e" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 283 ) = "1E1A" : Characters( DECOMP, 283 ) = "E" & TILDE_BELOW
Characters( PRECOMP, 284 ) = "1E1B" : Characters( DECOMP, 284 ) = "e" & TILDE_BELOW
Characters( PRECOMP, 285 ) = "1E1C" : Characters( DECOMP, 285 ) = "E" & CEDILLA & BREVE
Characters( PRECOMP, 286 ) = "1E1D" : Characters( DECOMP, 286 ) = "e" & CEDILLA & BREVE
Characters( PRECOMP, 287 ) = "1E1E" : Characters( DECOMP, 287 ) = "F" & DOT_ABOVE
Characters( PRECOMP, 288 ) = "1E1F" : Characters( DECOMP, 288 ) = "f" & DOT_ABOVE
Characters( PRECOMP, 289 ) = "1E20" : Characters( DECOMP, 289 ) = "G" & MACRON
Characters( PRECOMP, 290 ) = "1E21" : Characters( DECOMP, 290 ) = "g" & MACRON
Characters( PRECOMP, 291 ) = "1E22" : Characters( DECOMP, 291 ) = "H" & DOT_ABOVE
Characters( PRECOMP, 292 ) = "1E23" : Characters( DECOMP, 292 ) = "h" & DOT_ABOVE
Characters( PRECOMP, 293 ) = "1E24" : Characters( DECOMP, 293 ) = "H" & DOT_BELOW
Characters( PRECOMP, 294 ) = "1E25" : Characters( DECOMP, 294 ) = "h" & DOT_BELOW
Characters( PRECOMP, 295 ) = "1E26" : Characters( DECOMP, 295 ) = "H" & DIAERESIS
Characters( PRECOMP, 296 ) = "1E27" : Characters( DECOMP, 296 ) = "h" & DIAERESIS
Characters( PRECOMP, 297 ) = "1E28" : Characters( DECOMP, 297 ) = "H" & CEDILLA
Characters( PRECOMP, 298 ) = "1E29" : Characters( DECOMP, 298 ) = "h" & CEDILLA
Characters( PRECOMP, 299 ) = "1E2A" : Characters( DECOMP, 299 ) = "H" & BREVE_BELOW
Characters( PRECOMP, 300 ) = "1E2B" : Characters( DECOMP, 300 ) = "h" & BREVE_BELOW
Characters( PRECOMP, 301 ) = "1E2C" : Characters( DECOMP, 301 ) = "I" & TILDE_BELOW
Characters( PRECOMP, 302 ) = "1E2D" : Characters( DECOMP, 302 ) = "i" & TILDE_BELOW
Characters( PRECOMP, 303 ) = "1E2E" : Characters( DECOMP, 303 ) = "I" & DIAERESIS & ACUTE
Characters( PRECOMP, 304 ) = "1E2F" : Characters( DECOMP, 304 ) = "i" & DIAERESIS & ACUTE
Characters( PRECOMP, 305 ) = "1E30" : Characters( DECOMP, 305 ) = "K" & ACUTE
Characters( PRECOMP, 306 ) = "1E31" : Characters( DECOMP, 306 ) = "k" & ACUTE
Characters( PRECOMP, 307 ) = "1E32" : Characters( DECOMP, 307 ) = "K" & DOT_BELOW
Characters( PRECOMP, 308 ) = "1E33" : Characters( DECOMP, 308 ) = "k" & DOT_BELOW
Characters( PRECOMP, 309 ) = "1E34" : Characters( DECOMP, 309 ) = "K" & MACRON_BELOW
Characters( PRECOMP, 310 ) = "1E35" : Characters( DECOMP, 310 ) = "k" & MACRON_BELOW
Characters( PRECOMP, 311 ) = "1E36" : Characters( DECOMP, 311 ) = "L" & DOT_BELOW
Characters( PRECOMP, 312 ) = "1E37" : Characters( DECOMP, 312 ) = "l" & DOT_BELOW
Characters( PRECOMP, 313 ) = "1E38" : Characters( DECOMP, 313 ) = "L" & DOT_BELOW & MACRON
Characters( PRECOMP, 314 ) = "1E39" : Characters( DECOMP, 314 ) = "L" & DOT_BELOW & MACRON
Characters( PRECOMP, 315 ) = "1E3A" : Characters( DECOMP, 315 ) = "L" & MACRON_BELOW
Characters( PRECOMP, 316 ) = "1E3B" : Characters( DECOMP, 316 ) = "l" & MACRON_BELOW
Characters( PRECOMP, 317 ) = "1E3C" : Characters( DECOMP, 317 ) = "L" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 318 ) = "1E3D" : Characters( DECOMP, 318 ) = "l" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 319 ) = "1E3E" : Characters( DECOMP, 319 ) = "M" & ACUTE
Characters( PRECOMP, 320 ) = "1E3F" : Characters( DECOMP, 320 ) = "m" & ACUTE
Characters( PRECOMP, 321 ) = "1E40" : Characters( DECOMP, 321 ) = "M" & DOT_ABOVE
Characters( PRECOMP, 322 ) = "1E41" : Characters( DECOMP, 322 ) = "m" & DOT_ABOVE
Characters( PRECOMP, 323 ) = "1E42" : Characters( DECOMP, 323 ) = "M" & DOT_BELOW
Characters( PRECOMP, 324 ) = "1E43" : Characters( DECOMP, 324 ) = "m" & DOT_BELOW
Characters( PRECOMP, 325 ) = "1E44" : Characters( DECOMP, 325 ) = "N" & DOT_ABOVE
Characters( PRECOMP, 326 ) = "1E45" : Characters( DECOMP, 326 ) = "n" & DOT_ABOVE
Characters( PRECOMP, 327 ) = "1E46" : Characters( DECOMP, 327 ) = "N" & DOT_BELOW
Characters( PRECOMP, 328 ) = "1E47" : Characters( DECOMP, 328 ) = "n" & DOT_BELOW
Characters( PRECOMP, 329 ) = "1E48" : Characters( DECOMP, 329 ) = "N" & MACRON_BELOW
Characters( PRECOMP, 330 ) = "1E49" : Characters( DECOMP, 330 ) = "n" & MACRON_BELOW
Characters( PRECOMP, 331 ) = "1E4A" : Characters( DECOMP, 331 ) = "N" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 332 ) = "1E4B" : Characters( DECOMP, 332 ) = "n" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 333 ) = "1E4C" : Characters( DECOMP, 333 ) = "O" & TILDE & ACUTE
Characters( PRECOMP, 334 ) = "1E4D" : Characters( DECOMP, 334 ) = "o" & TILDE & ACUTE
Characters( PRECOMP, 335 ) = "1E4E" : Characters( DECOMP, 335 ) = "O" & TILDE & DIAERESIS
Characters( PRECOMP, 336 ) = "1E4F" : Characters( DECOMP, 336 ) = "o" & TILDE & DIAERESIS
Characters( PRECOMP, 337 ) = "1E50" : Characters( DECOMP, 337 ) = "O" & MACRON & GRAVE
Characters( PRECOMP, 338 ) = "1E51" : Characters( DECOMP, 338 ) = "o" & MACRON & GRAVE
Characters( PRECOMP, 339 ) = "1E52" : Characters( DECOMP, 339 ) = "O" & MACRON & ACUTE
Characters( PRECOMP, 340 ) = "1E53" : Characters( DECOMP, 340 ) = "o" & MACRON & ACUTE
Characters( PRECOMP, 341 ) = "1E54" : Characters( DECOMP, 341 ) = "P" & ACUTE
Characters( PRECOMP, 342 ) = "1E55" : Characters( DECOMP, 342 ) = "p" & ACUTE
Characters( PRECOMP, 343 ) = "1E56" : Characters( DECOMP, 343 ) = "P" & DOT_ABOVE
Characters( PRECOMP, 344 ) = "1E57" : Characters( DECOMP, 344 ) = "p" & DOT_ABOVE
Characters( PRECOMP, 345 ) = "1E58" : Characters( DECOMP, 345 ) = "R" & DOT_ABOVE
Characters( PRECOMP, 346 ) = "1E59" : Characters( DECOMP, 346 ) = "r" & DOT_ABOVE
Characters( PRECOMP, 347 ) = "1E5A" : Characters( DECOMP, 347 ) = "R" & DOT_BELOW
Characters( PRECOMP, 348 ) = "1E5B" : Characters( DECOMP, 348 ) = "r" & DOT_BELOW
Characters( PRECOMP, 349 ) = "1E5C" : Characters( DECOMP, 349 ) = "R" & DOT_BELOW & MACRON
Characters( PRECOMP, 350 ) = "1E5D" : Characters( DECOMP, 350 ) = "r" & DOT_BELOW & MACRON
Characters( PRECOMP, 351 ) = "1E5E" : Characters( DECOMP, 351 ) = "R" & MACRON_BELOW
Characters( PRECOMP, 352 ) = "1E5F" : Characters( DECOMP, 352 ) = "r" & MACRON_BELOW
Characters( PRECOMP, 353 ) = "1E60" : Characters( DECOMP, 353 ) = "S" & DOT_ABOVE
Characters( PRECOMP, 354 ) = "1E61" : Characters( DECOMP, 354 ) = "s" & DOT_ABOVE
Characters( PRECOMP, 355 ) = "1E62" : Characters( DECOMP, 355 ) = "S" & DOT_BELOW
Characters( PRECOMP, 356 ) = "1E63" : Characters( DECOMP, 356 ) = "s" & DOT_BELOW
Characters( PRECOMP, 357 ) = "1E64" : Characters( DECOMP, 357 ) = "S" & ACUTE & DOT_ABOVE
Characters( PRECOMP, 358 ) = "1E65" : Characters( DECOMP, 358 ) = "s" & ACUTE & DOT_ABOVE
Characters( PRECOMP, 359 ) = "1E66" : Characters( DECOMP, 359 ) = "S" & CARON & DOT_ABOVE
Characters( PRECOMP, 360 ) = "1E67" : Characters( DECOMP, 360 ) = "s" & CARON & DOT_ABOVE
Characters( PRECOMP, 361 ) = "1E68" : Characters( DECOMP, 361 ) = "S" & DOT_BELOW & DOT_ABOVE
Characters( PRECOMP, 362 ) = "1E69" : Characters( DECOMP, 362 ) = "s" & DOT_BELOW & DOT_ABOVE
Characters( PRECOMP, 363 ) = "1E6A" : Characters( DECOMP, 363 ) = "T" & DOT_ABOVE
Characters( PRECOMP, 364 ) = "1E6B" : Characters( DECOMP, 364 ) = "t" & DOT_ABOVE
Characters( PRECOMP, 365 ) = "1E6C" : Characters( DECOMP, 365 ) = "T" & DOT_BELOW
Characters( PRECOMP, 366 ) = "1E6D" : Characters( DECOMP, 366 ) = "t" & DOT_BELOW
Characters( PRECOMP, 367 ) = "1E6E" : Characters( DECOMP, 367 ) = "T" & MACRON_BELOW
Characters( PRECOMP, 368 ) = "1E6F" : Characters( DECOMP, 368 ) = "t" & MACRON_BELOW
Characters( PRECOMP, 369 ) = "1E70" : Characters( DECOMP, 369 ) = "T" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 370 ) = "1E71" : Characters( DECOMP, 370 ) = "t" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 371 ) = "1E72" : Characters( DECOMP, 371 ) = "U" & DIAERESIS_BELOW
Characters( PRECOMP, 372 ) = "1E73" : Characters( DECOMP, 372 ) = "u" & DIAERESIS_BELOW
Characters( PRECOMP, 373 ) = "1E74" : Characters( DECOMP, 373 ) = "U" & TILDE_BELOW
Characters( PRECOMP, 374 ) = "1E75" : Characters( DECOMP, 374 ) = "u" & TILDE_BELOW
Characters( PRECOMP, 375 ) = "1E76" : Characters( DECOMP, 375 ) = "U" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 376 ) = "1E77" : Characters( DECOMP, 376 ) = "u" & CIRCUMFLEX_BELOW
Characters( PRECOMP, 377 ) = "1E78" : Characters( DECOMP, 377 ) = "U" & TILDE & ACUTE
Characters( PRECOMP, 378 ) = "1E79" : Characters( DECOMP, 378 ) = "u" & TILDE & ACUTE
Characters( PRECOMP, 379 ) = "1E7A" : Characters( DECOMP, 379 ) = "U" & MACRON & DIAERESIS
Characters( PRECOMP, 380 ) = "1E7B" : Characters( DECOMP, 380 ) = "u" & MACRON & DIAERESIS
Characters( PRECOMP, 381 ) = "1E7C" : Characters( DECOMP, 381 ) = "V" & TILDE
Characters( PRECOMP, 382 ) = "1E7D" : Characters( DECOMP, 382 ) = "v" & TILDE
Characters( PRECOMP, 383 ) = "1E7E" : Characters( DECOMP, 383 ) = "V" & DOT_BELOW
Characters( PRECOMP, 384 ) = "1E7F" : Characters( DECOMP, 384 ) = "v" & DOT_BELOW
Characters( PRECOMP, 385 ) = "1E80" : Characters( DECOMP, 385 ) = "W" & GRAVE
Characters( PRECOMP, 386 ) = "1E81" : Characters( DECOMP, 386 ) = "w" & GRAVE
Characters( PRECOMP, 387 ) = "1E82" : Characters( DECOMP, 387 ) = "W" & ACUTE
Characters( PRECOMP, 388 ) = "1E83" : Characters( DECOMP, 388 ) = "w" & ACUTE
Characters( PRECOMP, 389 ) = "1E84" : Characters( DECOMP, 389 ) = "W" & DIAERESIS
Characters( PRECOMP, 390 ) = "1E85" : Characters( DECOMP, 390 ) = "w" & DIAERESIS
Characters( PRECOMP, 391 ) = "1E86" : Characters( DECOMP, 391 ) = "W" & DOT_ABOVE
Characters( PRECOMP, 392 ) = "1E87" : Characters( DECOMP, 392 ) = "w" & DOT_ABOVE
Characters( PRECOMP, 393 ) = "1E88" : Characters( DECOMP, 393 ) = "W" & DOT_BELOW
Characters( PRECOMP, 394 ) = "1E89" : Characters( DECOMP, 394 ) = "w" & DOT_BELOW
Characters( PRECOMP, 395 ) = "1E8A" : Characters( DECOMP, 395 ) = "X" & DOT_ABOVE
Characters( PRECOMP, 396 ) = "1E8B" : Characters( DECOMP, 396 ) = "x" & DOT_ABOVE
Characters( PRECOMP, 397 ) = "1E8C" : Characters( DECOMP, 397 ) = "X" & DIAERESIS
Characters( PRECOMP, 398 ) = "1E8D" : Characters( DECOMP, 398 ) = "x" & DIAERESIS
Characters( PRECOMP, 399 ) = "1E8E" : Characters( DECOMP, 399 ) = "Y" & DOT_ABOVE
Characters( PRECOMP, 400 ) = "1E8F" : Characters( DECOMP, 400 ) = "y" & DOT_ABOVE
Characters( PRECOMP, 401 ) = "1E90" : Characters( DECOMP, 401 ) = "Z" & CIRCUMFLEX
Characters( PRECOMP, 402 ) = "1E91" : Characters( DECOMP, 402 ) = "z" & CIRCUMFLEX
Characters( PRECOMP, 403 ) = "1E92" : Characters( DECOMP, 403 ) = "Z" & DOT_BELOW
Characters( PRECOMP, 404 ) = "1E93" : Characters( DECOMP, 404 ) = "z" & DOT_BELOW
Characters( PRECOMP, 405 ) = "1E94" : Characters( DECOMP, 405 ) = "Z" & MACRON_BELOW
Characters( PRECOMP, 406 ) = "1E95" : Characters( DECOMP, 406 ) = "z" & MACRON_BELOW
Characters( PRECOMP, 407 ) = "1E96" : Characters( DECOMP, 407 ) = "h" & MACRON_BELOW
Characters( PRECOMP, 408 ) = "1E97" : Characters( DECOMP, 408 ) = "t" & DIAERESIS
Characters( PRECOMP, 409 ) = "1E98" : Characters( DECOMP, 409 ) = "w" & RING_ABOVE
Characters( PRECOMP, 410 ) = "1E99" : Characters( DECOMP, 410 ) = "y" & RING_ABOVE
Characters( PRECOMP, 411 ) = "1E9B" : Characters( DECOMP, 411 ) = LONG_S & DOT_ABOVE
Characters( PRECOMP, 412 ) = "1EA0" : Characters( DECOMP, 412 ) = "A" & DOT_BELOW
Characters( PRECOMP, 413 ) = "1EA1" : Characters( DECOMP, 413 ) = "a" & DOT_BELOW
Characters( PRECOMP, 414 ) = "1EA2" : Characters( DECOMP, 414 ) = "A" & HOOK_ABOVE
Characters( PRECOMP, 415 ) = "1EA3" : Characters( DECOMP, 415 ) = "a" & HOOK_ABOVE
Characters( PRECOMP, 416 ) = "1EA4" : Characters( DECOMP, 416 ) = "A" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 417 ) = "1EA5" : Characters( DECOMP, 417 ) = "a" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 418 ) = "1EA6" : Characters( DECOMP, 418 ) = "A" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 419 ) = "1EA7" : Characters( DECOMP, 419 ) = "a" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 420 ) = "1EA8" : Characters( DECOMP, 420 ) = "A" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 421 ) = "1EA9" : Characters( DECOMP, 421 ) = "a" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 422 ) = "1EAA" : Characters( DECOMP, 422 ) = "A" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 423 ) = "1EAB" : Characters( DECOMP, 423 ) = "a" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 424 ) = "1EAC" : Characters( DECOMP, 424 ) = "A" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 425 ) = "1EAD" : Characters( DECOMP, 425 ) = "a" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 426 ) = "1EAE" : Characters( DECOMP, 426 ) = "A" & BREVE & ACUTE
Characters( PRECOMP, 427 ) = "1EAF" : Characters( DECOMP, 427 ) = "a" & BREVE & ACUTE
Characters( PRECOMP, 428 ) = "1EB0" : Characters( DECOMP, 428 ) = "A" & BREVE & GRAVE
Characters( PRECOMP, 429 ) = "1EB1" : Characters( DECOMP, 429 ) = "a" & BREVE & GRAVE
Characters( PRECOMP, 430 ) = "1EB2" : Characters( DECOMP, 430 ) = "A" & BREVE & HOOK_ABOVE
Characters( PRECOMP, 431 ) = "1EB3" : Characters( DECOMP, 431 ) = "a" & BREVE & HOOK_ABOVE
Characters( PRECOMP, 432 ) = "1EB4" : Characters( DECOMP, 432 ) = "A" & BREVE & TILDE
Characters( PRECOMP, 433 ) = "1EB5" : Characters( DECOMP, 433 ) = "a" & BREVE & TILDE
Characters( PRECOMP, 434 ) = "1EB6" : Characters( DECOMP, 434 ) = "A" & DOT_BELOW & BREVE
Characters( PRECOMP, 435 ) = "1EB7" : Characters( DECOMP, 435 ) = "a" & DOT_BELOW & BREVE
Characters( PRECOMP, 436 ) = "1EB8" : Characters( DECOMP, 436 ) = "E" & DOT_BELOW
Characters( PRECOMP, 437 ) = "1EB9" : Characters( DECOMP, 437 ) = "e" & DOT_BELOW
Characters( PRECOMP, 438 ) = "1EBA" : Characters( DECOMP, 438 ) = "E" & HOOK_ABOVE
Characters( PRECOMP, 439 ) = "1EBB" : Characters( DECOMP, 439 ) = "e" & HOOK_ABOVE
Characters( PRECOMP, 440 ) = "1EBC" : Characters( DECOMP, 440 ) = "E" & TILDE
Characters( PRECOMP, 441 ) = "1EBD" : Characters( DECOMP, 441 ) = "e" & TILDE
Characters( PRECOMP, 442 ) = "1EBE" : Characters( DECOMP, 442 ) = "E" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 443 ) = "1EBF" : Characters( DECOMP, 443 ) = "e" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 444 ) = "1EC0" : Characters( DECOMP, 444 ) = "E" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 445 ) = "1EC1" : Characters( DECOMP, 445 ) = "e" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 446 ) = "1EC2" : Characters( DECOMP, 446 ) = "E" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 447 ) = "1EC3" : Characters( DECOMP, 447 ) = "e" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 448 ) = "1EC4" : Characters( DECOMP, 448 ) = "E" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 449 ) = "1EC5" : Characters( DECOMP, 449 ) = "e" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 450 ) = "1EC6" : Characters( DECOMP, 450 ) = "E" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 451 ) = "1EC7" : Characters( DECOMP, 451 ) = "e" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 452 ) = "1EC8" : Characters( DECOMP, 452 ) = "I" & HOOK_ABOVE
Characters( PRECOMP, 453 ) = "1EC9" : Characters( DECOMP, 453 ) = "i" & HOOK_ABOVE
Characters( PRECOMP, 454 ) = "1ECA" : Characters( DECOMP, 454 ) = "I" & DOT_BELOW
Characters( PRECOMP, 455 ) = "1ECB" : Characters( DECOMP, 455 ) = "i" & DOT_BELOW
Characters( PRECOMP, 456 ) = "1ECC" : Characters( DECOMP, 456 ) = "O" & DOT_BELOW
Characters( PRECOMP, 457 ) = "1ECD" : Characters( DECOMP, 457 ) = "o" & DOT_BELOW
Characters( PRECOMP, 458 ) = "1ECE" : Characters( DECOMP, 458 ) = "O" & HOOK_ABOVE
Characters( PRECOMP, 459 ) = "1ECF" : Characters( DECOMP, 459 ) = "o" & HOOK_ABOVE
Characters( PRECOMP, 460 ) = "1ED0" : Characters( DECOMP, 460 ) = "O" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 461 ) = "1ED1" : Characters( DECOMP, 461 ) = "o" & CIRCUMFLEX & ACUTE
Characters( PRECOMP, 462 ) = "1ED2" : Characters( DECOMP, 462 ) = "O" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 463 ) = "1ED3" : Characters( DECOMP, 463 ) = "o" & CIRCUMFLEX & GRAVE
Characters( PRECOMP, 464 ) = "1ED4" : Characters( DECOMP, 464 ) = "O" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 465 ) = "1ED5" : Characters( DECOMP, 465 ) = "o" & CIRCUMFLEX & HOOK_ABOVE
Characters( PRECOMP, 466 ) = "1ED6" : Characters( DECOMP, 466 ) = "O" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 467 ) = "1ED7" : Characters( DECOMP, 467 ) = "o" & CIRCUMFLEX & TILDE
Characters( PRECOMP, 468 ) = "1ED8" : Characters( DECOMP, 468 ) = "O" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 469 ) = "1ED9" : Characters( DECOMP, 469 ) = "o" & DOT_BELOW & CIRCUMFLEX
Characters( PRECOMP, 470 ) = "1EDA" : Characters( DECOMP, 470 ) = "O" & HORN & ACUTE
Characters( PRECOMP, 471 ) = "1EDB" : Characters( DECOMP, 471 ) = "o" & HORN & ACUTE
Characters( PRECOMP, 472 ) = "1EDC" : Characters( DECOMP, 472 ) = "O" & HORN & GRAVE
Characters( PRECOMP, 473 ) = "1EDD" : Characters( DECOMP, 473 ) = "o" & HORN & GRAVE
Characters( PRECOMP, 474 ) = "1EDE" : Characters( DECOMP, 474 ) = "O" & HORN & HOOK_ABOVE
Characters( PRECOMP, 475 ) = "1EDF" : Characters( DECOMP, 475 ) = "o" & HORN & HOOK_ABOVE
Characters( PRECOMP, 476 ) = "1EE0" : Characters( DECOMP, 476 ) = "O" & HORN & TILDE
Characters( PRECOMP, 477 ) = "1EE1" : Characters( DECOMP, 477 ) = "o" & HORN & TILDE
Characters( PRECOMP, 478 ) = "1EE2" : Characters( DECOMP, 478 ) = "O" & HORN & DOT_BELOW
Characters( PRECOMP, 479 ) = "1EE3" : Characters( DECOMP, 479 ) = "o" & HORN & DOT_BELOW
Characters( PRECOMP, 480 ) = "1EE4" : Characters( DECOMP, 480 ) = "U" & DOT_BELOW
Characters( PRECOMP, 481 ) = "1EE5" : Characters( DECOMP, 481 ) = "u" & DOT_BELOW
Characters( PRECOMP, 482 ) = "1EE6" : Characters( DECOMP, 482 ) = "U" & HOOK_ABOVE
Characters( PRECOMP, 483 ) = "1EE7" : Characters( DECOMP, 483 ) = "u" & HOOK_ABOVE
Characters( PRECOMP, 484 ) = "1EE8" : Characters( DECOMP, 484 ) = "U" & HORN & ACUTE
Characters( PRECOMP, 485 ) = "1EE9" : Characters( DECOMP, 485 ) = "u" & HORN & ACUTE
Characters( PRECOMP, 486 ) = "1EEA" : Characters( DECOMP, 486 ) = "U" & HORN & GRAVE
Characters( PRECOMP, 487 ) = "1EEB" : Characters( DECOMP, 487 ) = "u" & HORN & GRAVE
Characters( PRECOMP, 488 ) = "1EEC" : Characters( DECOMP, 488 ) = "U" & HORN & HOOK_ABOVE
Characters( PRECOMP, 489 ) = "1EED" : Characters( DECOMP, 489 ) = "u" & HORN & HOOK_ABOVE
Characters( PRECOMP, 490 ) = "1EEE" : Characters( DECOMP, 490 ) = "U" & HORN & TILDE
Characters( PRECOMP, 491 ) = "1EEF" : Characters( DECOMP, 491 ) = "u" & HORN & TILDE
Characters( PRECOMP, 492 ) = "1EF0" : Characters( DECOMP, 492 ) = "U" & HORN & DOT_BELOW
Characters( PRECOMP, 493 ) = "1EF1" : Characters( DECOMP, 493 ) = "u" & HORN & DOT_BELOW
Characters( PRECOMP, 494 ) = "1EF2" : Characters( DECOMP, 494 ) = "Y" & GRAVE
Characters( PRECOMP, 495 ) = "1EF3" : Characters( DECOMP, 495 ) = "y" & GRAVE
Characters( PRECOMP, 496 ) = "1EF4" : Characters( DECOMP, 496 ) = "Y" & DOT_BELOW
Characters( PRECOMP, 497 ) = "1EF5" : Characters( DECOMP, 497 ) = "y" & DOT_BELOW
Characters( PRECOMP, 498 ) = "1EF6" : Characters( DECOMP, 498 ) = "Y" & HOOK_ABOVE
Characters( PRECOMP, 499 ) = "1EF7" : Characters( DECOMP, 499 ) = "y" & HOOK_ABOVE
Characters( PRECOMP, 500 ) = "1EF8" : Characters( DECOMP, 500 ) = "Y" & TILDE
Characters( PRECOMP, 501 ) = "1EF9" : Characters( DECOMP, 501 ) = "y" & TILDE

End Sub

'****************************************************************************************

Sub FillMARC_Latin

' MARC-8 characters not accounted for in the array above.

MARC_Latin( 0  ) = "0098"
MARC_Latin( 1  ) = "009C"
MARC_Latin( 2  ) = "00A1"
MARC_Latin( 3  ) = "00A3"
MARC_Latin( 4  ) = "00A9"
MARC_Latin( 5  ) = "00AE"
MARC_Latin( 6  ) = "00B0"
MARC_Latin( 7  ) = "00B1"
MARC_Latin( 8  ) = "00B7"
MARC_Latin( 9  ) = "00BF"
MARC_Latin( 10 ) = "00C6"
MARC_Latin( 11 ) = "00D8"
MARC_Latin( 12 ) = "00DE"
MARC_Latin( 13 ) = "00DF"
MARC_Latin( 14 ) = "00E6"
MARC_Latin( 15 ) = "00F0"
MARC_Latin( 16 ) = "00F8"
MARC_Latin( 17 ) = "00FE"
MARC_Latin( 18 ) = "0110"
MARC_Latin( 19 ) = "0111"
MARC_Latin( 20 ) = "0131"
MARC_Latin( 21 ) = "0141"
MARC_Latin( 22 ) = "0142"
MARC_Latin( 23 ) = "0152"
MARC_Latin( 24 ) = "0153"
MARC_Latin( 25 ) = "01A0"
MARC_Latin( 26 ) = "01A1"
MARC_Latin( 27 ) = "01AF"
MARC_Latin( 28 ) = "01B0"
MARC_Latin( 29 ) = "02B9"
MARC_Latin( 30 ) = "02BA"
MARC_Latin( 31 ) = "02BB"
MARC_Latin( 32 ) = "02BC"
MARC_Latin( 33 ) = "0300"
MARC_Latin( 34 ) = "0301"
MARC_Latin( 35 ) = "0302"
MARC_Latin( 36 ) = "0303"
MARC_Latin( 37 ) = "0304"
MARC_Latin( 38 ) = "0306"
MARC_Latin( 39 ) = "0307"
MARC_Latin( 40 ) = "0308"
MARC_Latin( 41 ) = "0309"
MARC_Latin( 42 ) = "030A"
MARC_Latin( 43 ) = "030B"
MARC_Latin( 44 ) = "030C"
MARC_Latin( 45 ) = "0310"
MARC_Latin( 46 ) = "0313"
MARC_Latin( 47 ) = "0315"
MARC_Latin( 48 ) = "031C"
MARC_Latin( 49 ) = "0323"
MARC_Latin( 50 ) = "0324"
MARC_Latin( 51 ) = "0325"
MARC_Latin( 52 ) = "0326"
MARC_Latin( 53 ) = "0327"
MARC_Latin( 54 ) = "0328"
MARC_Latin( 55 ) = "032E"
MARC_Latin( 56 ) = "0332"
MARC_Latin( 57 ) = "0333"
MARC_Latin( 58 ) = "0360"
MARC_Latin( 59 ) = "0361"
MARC_Latin( 60 ) = "200C"
MARC_Latin( 61 ) = "200D"
MARC_Latin( 62 ) = "20AC"
MARC_Latin( 63 ) = "2113"
MARC_Latin( 64 ) = "2117"
MARC_Latin( 65 ) = "266D"
MARC_Latin( 66 ) = "266F"

End Sub
'109766164
