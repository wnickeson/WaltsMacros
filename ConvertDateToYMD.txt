'MacroName:ConvertDateToYMD.2022.04
'MacroDescription:Converts a date or date range in a field in a bibliographic record into
' the format "Year Month Day."
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
'
' Last updated: 28 June 2022.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and 64-bit Windows 10 Enterprise &
' 64-bit Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Select a single date, or a single date range, and run the macro. The
' macro converts the selection to the format "Year Month Day" and replaces it with the
' new string. The selected text is also placed on the Windows Clipboard so it can be
' easily put back into the record if there is some problem with the conversion.
'
' This date format is directed by RDA 7.11.3.3: "Record the date of capture by giving the
' year, month, day, and time, as applicable." This macro was designed to so standardize
' the date given in the 518 field of existing records for sound recordings.
'
' Examples of dates and ranges the macro can convert:
'
'   Selection:                    Converted form:
'    Mar. 22, 2007                 2007 March 22
'    6-8 November 2006             2006 November 6-8
'    April, 1957                   1957 April
'    May, June 2006                2006 May-June
'    Apr. and July 1995            1995 April, July
'    February 11 & 12, 1969        1969 February 11-12
'    April 11 & 30, 1957           1957 April 11, 30
'    January 1 to 4, 1967          1967 January 1-4
'    25th July 2007                2007 July 25
'    June 29-July 2, 1990          1990 June 29-July 2
'    31 October-2 November 2005    2005 October 31-November 2
'
' The macro can't convert a date range that spans years, e.g., "Dec. 28, 2014-Jan. 4,
' 2015." It can't convert dates containing other text, e.g., "Dec. 4-5 (3rd work), 1996."
' Examples of other dates and ranges the macro can't convert:
'
'    May 7-8 and 10-11, 1993
'    Aug. 2000 and Aug. 2001
'    Dec. 19-20 & 23, 1992
'    July 12th & 13th 1993 & December 18th 1993 (but each part of this range can be
'      converted separately)
'    29th and 30th November, 2012
'    Oct. 28-29 and Dec. 30, 1998
'    March, April & June 1991
'****************************************************************************************

Option Explicit

Declare Function ExtractElement( InString$ ) As Integer

Global Const FAIL As Integer = 0

Global Connect$
Global Day1$
Global Day2$
Global DayString$
Global Month1$
Global Month2$
Global MonthString$
Global MonthVal1%
Global MonthVal2%
Global YearString$

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE    As Integer = 16
Const INFORMATION_MESSAGE As Integer = 64

Dim DELIMITER As String*1    : DELIMITER   = Chr$( 223 )

Dim CharT$
Dim ConvertedDate$
Dim FieldData$
Dim Piece$
Dim PieceCount%
Dim SelectedText$
Dim Start%                   : Start%       = 1
Dim TermChars$
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] Extras2:ConvertDateToYMD"
Dim WorkString$

Dim i As Integer, p As Integer

' First, make sure a bibliographic record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' Then check that the language of the record is English. If it isn't, names of months
' won't match and the macro will exit with a warning, but there is no need to go that
' far in the macro. Just quit!

If CS.GetField( "040", 1, FieldData$ ) Then
    p = InStr( FieldData$, DELIMITER & "b" )
    If p <> 0 Then
        If Mid$( FieldData$, p + 3, 3 ) <> "eng" Then
            MsgBox "Sorry, this macro works only in English-language records!", CRITICAL_MESSAGE, WaltsMacros$
            Exit Sub
        End If
    End If
End If

' Next, make sure some text has been selected.

If CS.GetSelectedText( SelectedText$ ) = FALSE Then
    MsgBox "Please select a date string for the macro to convert!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Preserve the end of the selection (any punctuation or spaces following the last date
' element). Those characters will be removed in processing.

For i = Len( SelectedText$ ) To 1 Step -1
    CharT$ = Mid$( SelectedText$, i, 1 )
    If CharT$ Like "[0-9A-Za-z]" Then
        Exit For
      Else
        TermChars$ = CharT$ & TermChars$
    End If
Next i

WorkString$ = Trim$( Left$( SelectedText$, i ) )

' The first step in the processing is to remove double spaces from the selection.

Do
  p = InStr$( WorkString$, "  " )
  If p <> 0 Then
      WorkString$ = Left$( WorkString$, p - 1 ) & Mid$( WorkString$, p + 1 )
  End If
Loop Until p = 0

' Then send each word (characters surrounded by a space) to the function for processing.

Do

  p = InStr( Start%, WorkString$, " " )
  If p <> 0 Then
      If Start% = 1 Then
          Piece$ = Left$( WorkString$, p - 1 )
        Else
          Piece$ = Mid$( WorkString$, Start%, p - Start% )
      End If
      Start% = p + 1
    Else
      If Start% = 1 Then
          Piece$ = WorkString$
        Else
          Piece$ = Mid$( WorkString$, Start% )
      End If
  End If
  PieceCount% = PieceCount% + 1
  If ExtractElement( Piece$ ) = FAIL Then Exit Do

Loop Until p = 0

' With all the pieces identified and separated, put them back together in proper order.

MonthString$ = Month1$
If Month2$ = "" Then                       'One month only
    If Day1$ = "" Then                      'No day
        DayString$ = ""
      Else
        DayString$ = Day1$                  'One day
        If Day2$ <> "" Then                 'Two days
            If Connect$ = "" Or Connect$ = "-" Then
                DayString$ = Day1$ & "-" & Day2$
              Else
                If Val( Day1$ ) + 1 = Val( Day2$ ) Then
                    DayString$ = Day1$ & "-" & Day2$
                  Else
                    DayString$ = Day1$ & ", " & Day2$
                End If
            End If
        End If
    End If
  Else                                     'Two months
    If Day1$ = "" Then                      'No day
        If MonthVal2% - MonthVal1% = 1 Then
            MonthString$ = MonthString$ & "-" & Month2$
          Else
            MonthString$ = MonthString$ & ", " & Month2$
        End If
      Else
        If Day2$ = "" Then                  'One day
            MonthString$ = MonthString$ & " " & Day1$ & "-" & Month2$
          Else                              'Two days
            MonthString$ = MonthString$ & " " & Day1$ & "-" & Month2$ & " " & Day2$
        End If
    End If
End If

ConvertedDate$ = YearString$ & " " & MonthString$ & " " & DayString$

If ConvertedDate$ = Trim$( SelectedText$ ) Then
    MsgBox "The date is already in year-month-date format!", INFORMATION_MESSAGE, WaltsMacros$
    Exit Sub
End If

' If no year is found, or the macro can discover no dates at all, the macro fails.

If YearString$ = "" Or ConvertedDate$ = "" Then
    MsgBox "Sorry, could not convert this selection.", CRITICAL_MESSAGE, WaltsMacros$

' Otherwise, replace the selection in the record with the new string, and place the old
' string (the original selection) on the Clipboard. This is so it can be pasted in to
' the record, restoring it to the way it was, if the conversion went awry.

  Else
    ConvertedDate$ = Trim$( ConvertedDate$ ) & TermChars$
    Clipboard.Clear
    Clipboard.SetText( ConvertedDate$ )
    CS.Paste
    Clipboard.Clear
    Clipboard.SetText( SelectedText$ )
End If

End Sub

'****************************************************************************************

Function ExtractElement( InString$ ) As Integer

' This function separates numbers from strings and identifies each piece for reassembly
' after the whole selection has been processed.

Const SUCCESS As Integer = 1

Dim CharT$
Dim InStringLength%
Dim MaxDays%                 : MaxDays    = 31
Dim MonthVal%
Dim NextCharT$
Dim TempString$
Dim WorkString$

Dim Digit                    : Digit      = FALSE
Dim MonthFound               : MonthFound = FALSE
Dim Text                     : Text       = FALSE

Dim i As Integer

WorkString$ = InString$

KeepGoing:

InStringLength% = Len( WorkString$ )

For i = 1 To InStringLength%
  CharT$ = Mid$( WorkString$, i, 1 )
  If i < InStringLength% Then
      NextCharT$ = Mid$( WorkString$, i + 1, 1 )
    Else
      NextCharT$ = ""
  End If
  Select Case CharT$

    Case "0" To "9"
      If NextCharT$ Like "[snrt]" Then
          If i = InStringLength% - 2 Then
              Select Case Mid$( WorkString$, i )
                Case "1st", "1th", "2d", "2nd", "2th", "3d", "3rd", "3th", "4th", "5th", "6th", "7th", "8th", "9th"
                  TempString$ = Left$( WorkString$, i )
                  Digit       = TRUE
                  i           = InStringLength%
                  Exit For
              End Select
          End If
        Else
          TempString$ = TempString$ & CharT$
          Digit       = TRUE
      End If

    Case "-"
      If NextCharT$ Like "[0-9]" Then
          If Digit Then                            'Digit-digit: Jan. 29-30
              TempString$ = TempString$ & CharT$
            Else                                   'Text-digit: 30 Jan.-1 Feb.
              Exit For
          End If
        ElseIf NextCharT$ Like "[A-Za-z]" Then     'Digit-text: Jan. 30-Feb. 1
          Exit For                                 'Text-text: Jan.-Feb.
      End If

    Case "A" To "Z", "a" To "z"
      TempString$ = TempString$ & CharT$
      Text        = TRUE

    Case "&"
      TempString$ = TempString$ & CharT$
      Text        = TRUE

  End Select

Next i

' First check if a YEAR is found in the piece.

If Len( TempString$ ) = 4 And Digit = TRUE And Text = FALSE And Val( TempString$ ) > 1000 And Val( TempString$ ) <= ( Year( Now ) + 1 ) Then
    If YearString$ = "" Then
        YearString$    = TempString$
      Else
        YearString$    = ""   'Only one year allowed!
        ExtractElement = FAIL
        Exit Function
    End If

' Then look for a DAY.

  ElseIf Text = FALSE and Digit = TRUE Then
    If Day1$ = "" Then
        Day1$ = TempString$
      Else
        Day2$ = TempString$
    End If

' Finally, check for a MONTH.

  ElseIf Text = TRUE And Digit = FALSE Then
    Select Case UCase$( TempString$ )

      Case "JAN", "JANUARY"
        MonthFound  = TRUE
        TempString$ = "January"
        MonthVal%   = 1

      Case "FEB", "FEBRUARY"
        MonthFound  = TRUE
        TempString$ = "February"
        MonthVal%   = 2

      Case "MAR", "MARCH"
        MonthFound  = TRUE
        TempString$ = "March"
        MonthVal%   = 3

      Case "APR", "APRIL"
        MonthFound  = TRUE
        TempString$ = "April"
        MonthVal%   = 4

      Case "MAY"
        MonthFound  = TRUE
        TempString$ = "May"
        MonthVal%   = 5

      Case "JUN", "JUNE"
        MonthFound  = TRUE
        TempString$ = "June"
        MonthVal%   = 6

      Case "JUL", "JULY"
        MonthFound  = TRUE
        TempString$ = "July"
        MonthVal%   = 7

      Case "AUG", "AUGUST"
        MonthFound  = TRUE
        TempString$ = "August"
        MonthVal%   = 8

      Case "SEP", "SEPT", "SEPTEMBER"
        MonthFound  = TRUE
        TempString$ = "September"
        MonthVal%   = 9

      Case "OCT", "OCTOBER"
        MonthFound  = TRUE
        TempString$ = "October"
        MonthVal%   = 10

      Case "NOV", "NOVEMBER"
        MonthFound  = TRUE
        TempString$ = "November"
        MonthVal%   = 11

      Case "DEC", "DECEMBER"
        MonthFound  = TRUE
        TempString$ = "December"
        MonthVal%   = 12

'An ampersand or the word "and" will get turned into a simple comma, e.g. "June 4 and 8"
' will become "June 4, 8".

      Case "AND", "&"
        Connect$   = "&"

' A "to" will get turned into a hyphen, e.g. "June 4 to 8" will become "June 4-8".

      Case "TO"
        Connect$   = "-"

      Case Else
        MonthFound = FALSE

    End Select

' After checking for the numeric elements of a date--the year, and possibly days--the
' third element of a date must be a month, or a connecting word. If no month is found,
' nor a connecting word, there is not a proper date for the macro to convert, and it will
' quit.

    If MonthFound Then
        If Month1$ = "" Then
            Month1$    = TempString$
            MonthVal1% = MonthVal%
          Else
            Month2$    = TempString$
            MonthVal2% = MonthVal%
        End If
      Else
        If Connect$ = "" Then
            YearString$    = ""
            ExtractElement = FAIL
            Exit Function
        End If
    End If

End If

' If after identifying a day or a month in the piece sent to this function there is more
' to the piece, usually because of the presence of a hyphen connecting dates, go back and
' process the rest of the piece. There is no need, however, if an ordinal number has been
' extracted--e.g., after finding "21" in "21st", don't continue with the rest of the
' string "st".

If i < InStringLength% Then
    WorkString$    = Mid$( WorkString$, i + 1 )
    TempString$    = ""
    Digit          = FALSE
    Text           = FALSE
    GoTo KeepGoing:
  Else
    ExtractElement = SUCCESS
End If

End Function
'46114346
'
'Macro name: ConvertDateToYMD
'Macro book: C:\Users\wnickeson.UR\AppData\Roaming\OCLC\Connex\Macros\Extras2.mbk
'Saved: 8/22/2023 10:01:17 AM using "MacroBookInspector" macro by Walter F. Nickeson.
