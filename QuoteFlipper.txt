'MacroName:QuoteFlipper.2023.02
'MacroDescription:Flips single quotation marks to double and vice versa, in a selection
' within a field, or within a whole field.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
'
' Last updated: 23 July 2023.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Select a text string in a single field in a Connexion record and run the
' macro to convert all double quotation marks in the selection to single, and vice versa.
' Or, if no text in a field has been selected, the macro simply flips all the quotation
' marks in the whole field. Use this macro when dealing with quotations within
' quotations, or when switching between American and British styles of quotation.
'
' The macro attempts to ignore single quotation marks used as apostrophes; its test is
' whether the quotation mark being evaluated has letters on both sides. If it doesn't, it
' will be considered a quotation mark and be flipped.  Note that an apostrophe used at
' the end of a word as a mark of the possessive will be subject to change. For example,
'
'   farmers' market
'
' will become
'
'   farmers" market
'
' if the apostrophe is included in the selection. Also note that this macro will not work
' if the quotation marks are "smart" or "curly," as may be found in text copied from a
' document or the Web.
'
' The macro works with selected text by editing the field that contains the selection
' from the beginning of the selection to its end. If no text has been selected, the whole
' field is evaluated. After editing the field, the macro uses the "SetField" command to
' replace it.
'****************************************************************************************

Option Explicit

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE    As Integer = 16
Const INFORMATION_MESSAGE As Integer = 64

Dim CurrentCol%
Dim CurrentRow%
Dim DOUBLE_QUOTE As String*1 : DOUBLE_QUOTE = Chr$( 034 )
Dim DoubleQuoteCount%
Dim FieldData$
Dim LenSelectedText%
Dim SINGLE_QUOTE As String*1 : SINGLE_QUOTE = Chr$( 039 )
Dim SelectedText$
Dim SingleQuoteCount%
Dim TestChar$
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] Extras3:QuoteFlipper"

Dim i As Integer

CurrentRow% = CS.CursorRow
CurrentCol% = CS.CursorColumn

If CurrentCol% = 0 Then
    MsgBox "The selection seems to be in the fixed field. Select text in a variable field and try again.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Although the macro needs to know if text has been selected, it also needs to have the
' whole field in hand, because it does its finding and replacing in the field, not the
' selection.

If CS.GetFieldLine( CurrentRow%, FieldData$ ) Then

' The macro can't work with Unicode data.

    If FieldData$ = "Data contains non-latin script" Then
        MsgBox "Sorry, this macro works only in fields containing Latin script.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If

' If no text has been selected, the whole field will be evaluated, beginning with the
' first position, which is column 6.

    If CS.GetSelectedText( SelectedText$ ) = FALSE Then
        SelectedText$ = FieldData$
        CurrentCol%   = 6
      Else

' If the selection spans a field, end the macro.

        If InStr( SelectedText$, Chr$( 013 ) ) Then
            MsgBox "Please keep the text selection within a field!", CRITICAL_MESSAGE, WaltsMacros$
            Exit Sub

' If the selection is in a tag or indicator cell, take the selection to be the whole
' field.

          ElseIf CurrentCol% < 6 Then
            SelectedText$ = FieldData$
            CurrentCol%   = 6
        End If
    End If
    LenSelectedText% = Len( SelectedText$ )

' Go through the field, character by character, from the beginning of the selection
' (identified by the integer CurrentCol%) to its end, calculated by the length of the
' selection. If the whole field is under consideration the beginning of the selection is
' column 6 (the first character after the second indicator) and the selection ends with
' the end of the field. Whenever a quotation mark is found, flip it. If the quotation
' mark is single, check to see if there is space on one side only; that shows that it is
' not an apostrophe. Unfortunately, sometimes it is an apostrophe, so the macro's results
' need to be verified by inspection.

    For i = CurrentCol% To CurrentCol% + LenSelectedText%
      TestChar$ = Mid$( FieldData$, i, 1 )
      If TestChar$ = SINGLE_QUOTE Then
          If i = 1 Or i = LenSelectedText% Then
              Mid$( FieldData$, i, 1 ) = DOUBLE_QUOTE
              SingleQuoteCount% = SingleQuoteCount% + 1
            Else
              If Mid$( FieldData$, i - 1, 1 ) Like "[A-Za-z]" And Mid$( FieldData$, i + 1, 1 ) Like "[A-Za-z]" Then

' Apostrophe: don't change

                Else
                  Mid$( FieldData$, i, 1 ) = DOUBLE_QUOTE
                  SingleQuoteCount% = SingleQuoteCount% + 1
              End If
          End If
        ElseIf TestChar$ = DOUBLE_QUOTE Then
          DoubleQuoteCount%        = DoubleQuoteCount% + 1
          Mid$( FieldData$, i, 1 ) = SINGLE_QUOTE
      End If
    Next i

' The quotation marks found need to be counted so if there actually weren't any, a
' message can be displayed.

    If DoubleQuoteCount% + SingleQuoteCount% = 0 Then
        MsgBox "There are no quotation marks in the selection, single or double, to change!", INFORMATION_MESSAGE, WaltsMacros$
        Exit Sub
    End If

' If the field was replaced, the macro is done. Otherwise the error message will be displayed.

    If CS.SetFieldLine( CurrentRow%, FieldData$ ) Then
        Exit Sub
    End If
End If

ErrorMessage:

MsgBox "Sorry, this macro could not change the quotation marks in the selection.", CRITICAL_MESSAGE, WaltsMacros$

End Sub
'1716640
'
'Macro name: QuoteFlipper
'Macro book: C:\Users\wnickeson.UR\AppData\Roaming\OCLC\Connex\Macros\Extras3.mbk
'Saved: 8/22/2023 10:04:06 AM using "MacroBookInspector" macro by Walter F. Nickeson.
