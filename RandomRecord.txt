'MacroName:RandomRecord.2024.01
'MacroDescription:Searches for a random bibliographic record.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
' https://orcid.org/0000-0003-0484-6938
'
' Last updated: 12 February 2024.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Run this macro to search WorldCat for a random bibliographic record. The
' macro generates a random number of 10 digits for the search, repeating until a record
' is found or 12 searches fail. The control number of a retrieved record is written to a
' file called "RandomRecordSearchLog.txt" which is found in the user's "Documents"
' folder. Note that the successful search may be for a record for which the number is in
' an 019 field.
'
' The current highest OCLC control number can be found at
' http://www.oclc.org/en/worldcat/watch-worldcat-grow-popup.html
'****************************************************************************************

Option Explicit

Global RandomRecordSearchLog$

'****************************************************************************************

Sub Main

Const CRITICAL_MESSAGE     As Integer = 16
Const DIALOG_BUTTON_CANCEL As Integer = 102

Const MAX_ATTEMPTS         As Integer = 13
Const ONE_BILLION          As Single  = 10^10
Const OVERFLOW             As Integer = 6      'The BASIC error code for an overflow.

Dim ControlNumber$
Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Dim FileNumber%
Dim LongRandomNumber&
Dim NewRandomNumber!
Dim Path$
Dim Results&
Dim SearchCount%
Dim Seed
Dim Start%
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] MacroTools:RandomRecord"

Dim i As Integer

' Of course, you must be online before trying to retrieve a record! The macro will
' attempt to log on for you if you are not.

If CS.IsOnline = FALSE Then

    Begin Dialog Dialog1Definition  192,  72, WaltsMacros$
      OkButton        70,  50,  52,  14
      CancelButton   130,  50,  52,  14
      Text            10,   4, 137,  12, "You are not logged on! What now?"
      OptionGroup                                                                           .OptionGroup1
       OptionButton   16,  16, 160,  12, "&Log on with default authorization and continue"
       OptionButton   16,  30, 108,  12, "Log on &only"
    End Dialog

    Dim Dialog1 As Dialog1Definition
    On Error Resume Next
    Dialog Dialog1
    If Err = DIALOG_BUTTON_CANCEL Then Exit Sub

    If CS.Logon( "", "", "" ) Then
        If Dialog1.OptionGroup1 = 1 Then
            Exit Sub
        End If
      Else
        MsgBox "Sorry, the macro could not log you on.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If

End If

' The random number generator produces a number between 0 and 1. Multiply this by a
' billion and drop decimals to get a random number consisting of ten digits. (Leading
' zeros are ignored in searches.) Convert that number to a string, and search WorldCat.
' If no record is retrieved, generate a different number and try again--but limit the
' number of attempts to 12.

Seed = Timer

Do
  Randomize Seed
  NewRandomNumber!  = Rnd
  On Error Resume Next
  LongRandomNumber& = Fix( NewRandomNumber! * ONE_BILLION )

' The largest number that can be of the data type "long" is 2,147,483,647. If the
' generated random number is larger than that, an overflow error occurs. In that case,
' generate a new number. By the time the OCLC control number reaches 2 billion, macros
' probably won't even exist, so there won't be a need to go to the next wider data type
' ("single").

  If Err = OVERFLOW Then
      Seed = Rnd( 0 )
      GoTo KeepGoing:
    ElseIf Err > 0 Then
      MsgBox "Sorry, the macro unexpectedly failed.", CRITICAL_MESSAGE, WaltsMacros$
      Exit Sub
  End If
  ControlNumber$ = "#" & Trim$( Str$( LongRandomNumber& ) )
  Results&       = CS.Search( "WC", ControlNumber$ )

  If Results& > 0 Then

' If a record is retrieved, the macro is done. Write the record number of a successful
' search to the file "RandomRecordSearchLog.txt" in the user's "Documents" folder (in
' case the record found is actually one that should be looked at again).

      On Error GoTo FileWriteFailure:

      Path$ = Environ( "USERPROFILE" )
      If Path$ <> "" Then
          RandomRecordSearchLog$ = Path$ & "\Documents\RandomRecordSearchLog.txt"
        Else
          GoTo FileWriteFailure:
      End If

' Pad the control number at the end with spaces so a shorter number won't have any of the
' previous number's final digits stuck on at the end. This problem could be avoided by
' deleting the file and creating a new one, but it's a little simpler to just use the
' "Put" command to overwrite the existing file.

      ControlNumber$ = ControlNumber$ & Space$( 12 - Len( ControlNumber$ ) )
      FileNumber%    = FreeFile
      Open RandomRecordSearchLog$ For Binary Access Write As #FileNumber%
      Put FileNumber%, 1, ControlNumber$
      Close #FileNumber%
      Reset

' Otherwise, use the failed search number as the seed for a new random number for the
' next search. However, if there is a connection problem such that all searches are
' failing, or if the generated numbers continually fail to find a record, provide an exit
' from a possible endless loop.

    Else

      Seed         = Val( Mid$( ControlNumber$, 2 ) )
      SearchCount% = SearchCount% + 1
      If SearchCount% = MAX_ATTEMPTS Then
          MsgBox "No record was found in " & Trim$( Str$( MAX_ATTEMPTS) ) & " attempts. Please check the connection before trying again.", CRITICAL_MESSAGE, WaltsMacros$
          Exit Sub
      End If
  End If

KeepGoing:

Loop Until Results& > 0

FileWriteFailure:

End Sub
'1736389
