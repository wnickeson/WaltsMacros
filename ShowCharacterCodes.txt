'MacroName:ShowCharacterCodes.2023.78
'MacroDescription:Shows the decimal and Unicode code points for the characters in a
' selection or a field, with the ability to toggle between displaying (as best the dialog
' box is able) the corresponding OCLC-MARC and ASCII characters. It also offers the
' ability to search for the names of MARC and selected Unicode Latin characters by code
' point.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
'
' Last updated: 4 August 2023.
' Check for the latest versions of this and my other macros at
' http://docushare.lib.rochester.edu/docushare/dsweb/View/Collection-2556
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Select text in a record, or place the cursor in a variable data field,
' and run the macro. It displays the decimal and Unicode code points of the characters in
' the selection, or of all the characters in the whole field, if no text has been
' selected. If the selection contains text in a non-Latin script, the macro offers to
' display information for the whole field instead. The macro also attempts to display the
' characters encoded by those code points, but because macro dialog boxes use the limited
' ISO 8859-1 character set, only Latin characters are possible, and even some of these
' can't be shown. Undisplayable characters are represented in the macro by an empty pair
' of square brackets: "[]". Undefined code points in MARC add the "×" sign inside the
' brackets: "[×]". For text in Latin script, this macro doesn't try, with few exceptions,
' to supply characters that might be similar in appearance to those in the record.
'
' The macro window arranges the code points of the selection or field in pages containing
' up to 84 characters each, in six rows of 14 characters. Push buttons allow for cycling
' through all the pages, or for selection of a specific page with a range of character
' positions. Each row contains three lines. The top line shows, as far as is possible in
' a macro dialog box, the character at each position in the field or selection. The next
' two lines of the row show the decimal and hexadecimal code points at those positions. A
' push button switches the view between MARC and ASCII encoding. For example, code point
' 225 appears in OCLC-MARC as a grave accent, but in ASCII as the composite character
' "á". Every decimal code point has a Unicode equivalent, but the reverse is not true.
' And while every Unicode code point encodes a character, not every decimal code point
' does, either in the MARC-8 or OCLC-MARC character sets.
'
' The macro offers limited searching for the names of some Latin script characters and
' diacritics. To identify a MARC character, enter a three-digit number from 158 to 254 in
' the search box. This range includes many diacritical marks that the dialog box can't
' display or may not be able to display clearly, so being able to view the character's
' name may be useful. (Note that many code points in that range are not defined.)
' Identification of Unicode characters is limited to a subset of those in the Latin
' alphabet. To view a Unicode character, enter a hexadecimal number from 0100 to 1EFF
' in the search box. The number must start with "0" or "1e" (case doesn't matter) and
' consist of four hexadecimal digits. The searchable Unicode characters are in the blocks
' Latin Extended A and B (U+0100-U+024F), Latin Extended Additional (U+1E00-U+1EFF),
' Spacing Modifier Letters (U+02B0-U+02FF), and Combining Diacritical Marks (U+0300-
' U+036F). As soon as a valid three-digit decimal number, or four-digit hexadecimal
' number, is entered into the search box, the name of the character pops up. Code points
' below decimal 158 are, except for subscript and superscript characters, mostly the
' standard Latin alphanumeric characters and punctuation of ASCII (in Unicode, blocks
' Basic Latin and Latin-1 Supplement (U+0000-U+00FF)), which includes ISO 8859-1, the
' subset of ASCII used by the macro language. Because they display more or less clearly,
' they are not included in the search feature.
'
' In addition to the use of the empty box "[]" to represent undisplayable characters, and
' a "[×]" box for undefined code points, the macro uses vertical bars to identify
' subscript and superscript characters (numbers and punctuation). They appear as, for
' example, "|2|". Two characters whose MARC-8 and OCLC-MARC encodings differ need some
' explanation. One is the subfield delimiter, defined in MARC-8 as the character at
' decimal code point 31. As a control character, not able to be printed, it has no glyph.
' However, OCLC has assigned the subfield delimiter to code point 223, and represents it
' with the familiar "alveolar click" character (U+01C2), which somewhat resembles a
' double dagger. This macro follows a widespread convention in using the dollar sign to
' represent the subfield delimiter. It encloses that sign with vertical bars |$|, and
' shows its code points as both 223 and 01C2. The other character is the fill character,
' defined in MARC-8 as the vertical bar, at decimal code point 127. OCLC, on the other
' hand, has assigned it to decimal code point 252, and uses the "end of proof" symbol
' (U+220E, which in Arial Unicode is a solid square; Wikipedia notes that this character
' is also known as a "tombstone") as the glyph. This macro shows the code point as
' decimal 252 and borrows the macro language's own version of the fill character (its
' representation of undisplayable characters) to represent it; its appearance is a thick
' vertical bar.
'
' References in the documentation to "MARC" generally includes MARC-8 and OCLC-MARC,
' which are not identical. The encoding shown in the macro is necessarily that of OCLC-
' MARC. A code point search shows both names, if they differ.
'
' OCLC recommends using the "Enter Diacritics and Special Characters" window to insert
' special characters into Connexion records, warning that use of "other methods such as
' copying and pasting from outside the client" will cause the record to fail validation.
' However, experience shows that use of precomposed ASCII characters alone, rather than
' decomposed MARC characters, will not cause records to fail validation, nor prevent
' successful export. This macro can show which encoding is being used in a record if
' there might be a question. When pasting content on the Clipboard into a Connexion
' record, my macro "PasteUnformattedPlus" converts characters in the Unicode block
' Latin-1 Supplement to their MARC equivalents, in addition to removing some text
' formatting information.
'****************************************************************************************

Option Explicit

Declare Sub FillCharDatabase
Declare Sub FillDefinitionArray
Declare Sub FillUnicodeArray
Declare Sub SetDialogBox( Page%, State% )

Declare Function Dialog1ControlFunction( Id$, Action%, SVal& )
Declare Function Dialog2ControlFunction( Id$, Action%, SVal& )

Global Const DISABLED             As Integer = 0
Global Const ENABLED              As Integer = 1
Global Const INITIALIZE           As Integer = 1
Global Const INVISIBLE            As Integer = 0
Global Const VISIBLE              As Integer = 1

Global Const EXTENDED_COUNT       As Integer = 97
Global Const DATABASE_COUNT       As Integer = 127
Global Const INITIAL              As Integer = 0
Global Const MAX_CHARS_PER_PAGE   As Integer = 84
Global Const SWITCHED             As Integer = 1
Global Const UNICODE_COUNT        As Integer = 783

Global Const ASCII_CHAR           As Integer = 4
Global Const ASCII_UNI_CHAR       As Integer = 5
Global Const CODE_POINT           As Integer = 1
Global Const MARC_CHAR            As Integer = 2
Global Const MARC_UNI_CHAR        As Integer = 3

Global CharCount%
Global CurrentPage%
Global Encoding$
Global Remainder%
Global TotalPages%
Global WaltsMacros$

Global ASCIIFound
Global DecOnTop
Global ShowSearch
Global ShowUnicode

Global Extended( EXTENDED_COUNT ) As String
Global CharDatabase( 127 )        As String
Global FieldInfo()                As String
Global Pages()                    As String
Global Unicode( UNICODE_COUNT )   As String

'****************************************************************************************

Sub Main

Const CRITICAL_MESSAGE As Integer = 16
Const FIXED_FIELD      As Integer = 0

Const AMPERSAND        As Integer = 38

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Dim CharA%
Dim CharByteCount$
Dim CharT$
Dim Col%
Dim CountDecimal%
Dim CountUnicode%
Dim FieldData$
Dim FirstVal%
Dim FollowsDelimiter
Dim LastVal%
Dim NCR$
Dim PageCount%
Dim Row%
Dim SearchLegend$
Dim Source$
Dim StringLength%
Dim Tag$
Dim TypeOfWindow%

Dim Selection

Dim i As Integer, j As Integer, p As Integer

ASCIIFound    = FALSE
SearchLegend$ = "Enter a 3-digit decimal or 4-digit hexadecimal number to identify or verify MARC or selected Unicode Latin characters:"
ShowSearch    = FALSE
ShowUnicode   = FALSE
WaltsMacros$  = "[Walt's macros] MacroTools:ShowCharacterCodes"

' First, make sure a record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 5 To 11, 13, 15 To 16, 21 To 25
    MsgBox "Sorry, this macro works only when a record is displayed!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' Test for whether a selection has been made, and if it has, whether it contains Unicode
' data. Also test to see if the selection spans fields; if it has, indicated by the
' presence of a carriage return, the macro can't continue.

If CS.GetSelectedText( FieldData$ ) Then
    If CS.CursorColumn > 5 Then
        Selection = TRUE
        If FieldData$ = "Data contains non-latin script" Then
            If MsgBox( "Sorry, this macro can't show character codes when non-Latin script has been selected. Do you want to view the character codes in the whole field instead?", 33, WaltsMacros$ ) = 2 Then
                Exit Sub
              Else
                Selection = FALSE
            End If
          Else
            If InStr( FieldData$, Chr$( 013 ) ) > 0 Then
                MsgBox "Please limit a selection to within a single field.", CRITICAL_MESSAGE, WaltsMacros$
                Exit Sub
              Else
                GoTo ProcessFieldData:
            End If
        End If
      Else
        Selection = FALSE
    End If
  Else
    Selection = FALSE
End If

Row% = CS.CursorRow
Col% = CS.CursorColumn
If Col% = FIXED_FIELD Then
    MsgBox "Sorry, this macro works only in the variable fields!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Use the "GetFieldUnicode" command to retrieve the code points from the field.

If CS.GetFieldUnicode( "...", Row%, FieldData$ ) = FALSE Then
    MsgBox "Sorry, this macro couldn't get the data in the field to analyze.", CRITICAL_MESSAGE, WaltsMacros$
  Else
    Tag$ = Left$( FieldData$, 3 )
    FieldData$ = Mid( FieldData$, 6 )
End If

ProcessFieldData:

StringLength% = Len( FieldData$ )

FillDefinitionArray
FillCharDatabase
FillUnicodeArray
Erase FieldInfo

i = 1
CharCount% = 0

' Go through the string, character by character. Count decimal and Unicode code points to
' see which form predominates. (Exclude subfield codes and the delimiter from
' consideration.) Check if the ampersand is followed by the two characters "#x",
' signifying a Numeric Character Reference; if it is, extract the code point and jump
' ahead in the string to the next character.

Do
  CharT$ = Mid$( FieldData$, i, 1 )
  CharA% = Asc( CharT$ )
  ReDim Preserve FieldInfo( CharCount% )

  Select Case CharA%

    Case 32 To 37, 39 To 127
      CharT$ = Str$( CharA% )
      If FollowsDelimiter Then
          FollowsDelimiter = FALSE
        Else
          Select Case CharA%
            Case 48 To 57, 65 To 90, 97 To 122
              CountDecimal% = CountDecimal% + 1
          End Select
      End If

    Case AMPERSAND

      If Mid$( FieldData$, i, 3 ) = "&#x" Then
          p = InStr( i, FieldData$, ";" )
          If p > 0 Then
              NCR$ = Mid$( FieldData$, i + 3, ( p - i ) - 3 )
              If NCR$ = "01C2" Then
                  FollowsDelimiter = TRUE
                Else
                  If ( NCR$ > "007B" And NCR$ < "0334" ) Or _
                     ( NCR$ > "2012" And NCR$ < "2122" ) Or _
                     ( NCR$ = "220E" Or NCR$ = "266D" Or NCR$ = "266F" ) Or _
                     ( NCR$ > "FE1F" And NCR$ < "FE24" ) Then
                      For j = 0 To DATABASE_COUNT
                        If NCR$ = GetField( CharDatabase( j ), MARC_UNI_CHAR, "," ) Then
                            CharT$ = " " & GetField( CharDatabase( j ), CODE_POINT, "," )
                            Exit For
                        End If
                      Next j
                  End If
              End If
              If CharT$ = "&" Then
                  CharT$    = NCR$
                  If NCR$ <> "01C2" Then
                      CountUnicode% = CountUnicode% + 1
                  End If
              End If
              i = i + 7
          End If
        Else
          CharT$ = Str$( CharA% )
      End If

    Case Else

     CharT$ = Str$( CharA% )

  End Select

  FieldInfo( CharCount% ) = CharT$
  CharCount%              = CharCount% + 1
  CharT$                  = ""
  i                       = i + 1
Loop Until i > StringLength%

' In the dialog box, the code points take up two rows, one for decimal and one for
' hexadecimal. For ease of reading, whichever type of code point predominates will go on
' the top row.

If CountDecimal% >= CountUnicode% Then
    DecOnTop = TRUE
  Else
    DecOnTop = FALSE
End If

' Figure out the total number of pages required to display the field.

TotalPages% = Int( CharCount% / ( MAX_CHARS_PER_PAGE ) )
Remainder%  = CharCount% Mod MAX_CHARS_PER_PAGE
If Remainder% > 0 Then
    TotalPages% = TotalPages% + 1
End If

' Figure out the ranges to put in the drop-down list box.

PageCount% = TotalPages% - 1
ReDim Pages( PageCount% )
For i = 0 To PageCount%
  FirstVal% = ( i * MAX_CHARS_PER_PAGE ) + 1
  If i < PageCount% Then
      LastVal% = ( i + 1 ) * MAX_CHARS_PER_PAGE
    Else
      If Remainder% = 0 Then
          LastVal% = CharCount%
        Else
          LastVal% = FirstVal% + Remainder% - 1
      End If
  End If
  Pages( i ) = Trim$( Str$( FirstVal% ) ) & "-" & Trim$( Str$( LastVal% ) )
Next i

' Give the number of characters in the selection or field, followed by the number of
' bytes, if different.

If Selection Then
    Source$ = "selection"
  Else
    Source$ = "field " & Tag$
End If

If CharCount% = StringLength% Then
    CharByteCount$ = Trim$( Str$( CharCount% ) ) & " total characters in " & Source$ & "."
  Else
    CharByteCount$ = Trim$( Str$( CharCount% ) ) & " total characters in " & Source$ & ", encoded in " & Trim$( Str$( StringLength% ) ) & " bytes."
End If

CurrentPage% = 1

Begin Dialog Dialog1Definition  358, 310, WaltsMacros$, .Dialog1ControlFunction
  OKButton      296, 286,  52,  14                                     '0
  CancelButton    1,  49,   1,   1                                     '1
  PushButton    110, 275,  52,  14, "&Previous page",    .Prev         '2
  PushButton    168, 275,  52,  14, "&Next page",        .Next         '3
  PushButton     76,  24,  56,  14, "&Switch",           .Switch       '4
  PushButton    318,  24,  16,  12, "&?",                .SearchHelp   '5
  DropListBox    48, 276,  56,  64, Pages(),             .Pages        '6
  TextBox        76,   8,  56,  12,                      .CharSet      '7
  Text          146,  12, 140,  24, SearchLegend$,       .Instructions '8
  TextBox       274,  24,  32,  12,                      .SearchBox    '9
  Text           10,  10,  64,   8, "Show encoding as:"                '10
  Text           18, 278,  24,   8, "&Range:",           .Range        '11
  GroupBox      140,   4, 208,  40, ""                                 '12
  GroupBox       10, 262, 220,  38, CharByteCount$                     '13
  GroupBox       10,  50, 338,  17, "",                  .Row1GroupBox '14
  GroupBox       10,  84, 338,  17, "",                  .Row2GroupBox '15
  GroupBox       10, 118, 338,  17, "",                  .Row3GroupBox '16
  GroupBox       10, 152, 338,  17, "",                  .Row4GroupBox '17
  GroupBox       10, 186, 338,  17, "",                  .Row5GroupBox '18
  GroupBox       10, 220, 338,  17, "",                  .Row6GroupBox '19
  Text           15,  56,  16,   8, ""                                 '20  Row 1
  Text           14,  68,  20,  16, ""                                 '21
  Text           39,  56,  16,   8, ""                                 '22
  Text           38,  68,  20,  16, ""                                 '23
  Text           63,  56,  16,   8, ""                                 '24
  Text           62,  68,  20,  16, ""                                 '25
  Text           87,  56,  16,   8, ""                                 '26
  Text           86,  68,  20,  16, ""                                 '27
  Text          111,  56,  16,   8, ""                                 '28
  Text          110,  68,  20,  16, ""                                 '29
  Text          135,  56,  16,   8, ""                                 '30
  Text          134,  68,  20,  16, ""                                 '31
  Text          159,  56,  16,   8, ""                                 '32
  Text          158,  68,  20,  16, ""                                 '33
  Text          183,  56,  16,   8, ""                                 '34
  Text          182,  68,  20,  16, ""                                 '35
  Text          207,  56,  16,   8, ""                                 '36
  Text          206,  68,  20,  16, ""                                 '37
  Text          231,  56,  16,   8, ""                                 '38
  Text          230,  68,  20,  16, ""                                 '39
  Text          255,  56,  16,   8, ""                                 '40
  Text          254,  68,  20,  16, ""                                 '41
  Text          279,  56,  16,   8, ""                                 '42
  Text          278,  68,  20,  16, ""                                 '43
  Text          303,  56,  16,   8, ""                                 '44
  Text          302,  68,  20,  16, ""                                 '45
  Text          327,  56,  16,   8, ""                                 '46
  Text          326,  68,  20,  16, ""                                 '47
  Text           15,  90,  16,   8, ""                                 '48  Row 2
  Text           14, 102,  20,  16, ""                                 '49
  Text           39,  90,  16,   8, ""                                 '50
  Text           38, 102,  20,  16, ""                                 '51
  Text           63,  90,  16,   8, ""                                 '52
  Text           62, 102,  20,  16, ""                                 '53
  Text           87,  90,  16,   8, ""                                 '54
  Text           86, 102,  20,  16, ""                                 '55
  Text          111,  90,  16,   8, ""                                 '56
  Text          110, 102,  20,  16, ""                                 '57
  Text          135,  90,  16,   8, ""                                 '58
  Text          134, 102,  20,  16, ""                                 '59
  Text          159,  90,  16,   8, ""                                 '60
  Text          158, 102,  20,  16, ""                                 '61
  Text          183,  90,  16,   8, ""                                 '62
  Text          182, 102,  20,  16, ""                                 '63
  Text          207,  90,  16,   8, ""                                 '64
  Text          206, 102,  20,  16, ""                                 '65
  Text          231,  90,  16,   8, ""                                 '66
  Text          230, 102,  20,  16, ""                                 '67
  Text          255,  90,  16,   8, ""                                 '68
  Text          254, 102,  20,  16, ""                                 '69
  Text          279,  90,  16,   8, ""                                 '70
  Text          278, 102,  20,  16, ""                                 '71
  Text          303,  90,  16,   8, ""                                 '72
  Text          302, 102,  20,  16, ""                                 '73
  Text          327,  90,  16,   8, ""                                 '74
  Text          326, 102,  20,  16, ""                                 '75
  Text           15, 124,  16,   8, ""                                 '76  Row 3
  Text           14, 136,  20,  16, ""                                 '77
  Text           39, 124,  16,   8, ""                                 '78
  Text           38, 136,  20,  16, ""                                 '79
  Text           63, 124,  16,   8, ""                                 '80
  Text           62, 136,  20,  16, ""                                 '81
  Text           87, 124,  16,   8, ""                                 '82
  Text           86, 136,  20,  16, ""                                 '83
  Text          111, 124,  16,   8, ""                                 '84
  Text          110, 136,  20,  16, ""                                 '85
  Text          135, 124,  16,   8, ""                                 '86
  Text          134, 136,  20,  16, ""                                 '87
  Text          159, 124,  16,   8, ""                                 '88
  Text          158, 136,  20,  16, ""                                 '89
  Text          183, 124,  16,   8, ""                                 '90
  Text          182, 136,  20,  16, ""                                 '91
  Text          207, 124,  16,   8, ""                                 '92
  Text          206, 136,  20,  16, ""                                 '93
  Text          231, 124,  16,   8, ""                                 '94
  Text          230, 136,  20,  16, ""                                 '95
  Text          255, 124,  16,   8, ""                                 '96
  Text          254, 136,  20,  16, ""                                 '97
  Text          279, 124,  16,   8, ""                                 '98
  Text          278, 136,  20,  16, ""                                 '99
  Text          303, 124,  16,   8, ""                                 '100
  Text          302, 136,  20,  16, ""                                 '101
  Text          327, 124,  16,   8, ""                                 '102
  Text          326, 136,  20,  16, ""                                 '103
  Text           15, 158,  16,   8, ""                                 '104 Row 4
  Text           14, 170,  20,  16, ""                                 '105
  Text           39, 158,  16,   8, ""                                 '106
  Text           38, 170,  20,  16, ""                                 '107
  Text           63, 158,  16,   8, ""                                 '108
  Text           62, 170,  20,  16, ""                                 '109
  Text           87, 158,  16,   8, ""                                 '110
  Text           86, 170,  20,  16, ""                                 '111
  Text          111, 158,  16,   8, ""                                 '112
  Text          110, 170,  20,  16, ""                                 '113
  Text          135, 158,  16,   8, ""                                 '114
  Text          134, 170,  20,  16, ""                                 '115
  Text          159, 158,  16,   8, ""                                 '116
  Text          158, 170,  20,  16, ""                                 '117
  Text          183, 158,  16,   8, ""                                 '118
  Text          182, 170,  20,  16, ""                                 '119
  Text          207, 158,  16,   8, ""                                 '120
  Text          206, 170,  20,  16, ""                                 '121
  Text          231, 158,  16,   8, ""                                 '122
  Text          230, 170,  20,  16, ""                                 '123
  Text          255, 158,  16,   8, ""                                 '124
  Text          254, 170,  20,  16, ""                                 '125
  Text          279, 158,  16,   8, ""                                 '126
  Text          278, 170,  20,  16, ""                                 '127
  Text          303, 158,  16,   8, ""                                 '128
  Text          302, 170,  20,  16, ""                                 '129
  Text          327, 158,  16,   8, ""                                 '130
  Text          326, 170,  20,  16, ""                                 '131
  Text           15, 192,  16,   8, ""                                 '132 Row 5
  Text           14, 204,  20,  16, ""                                 '133
  Text           39, 192,  16,   8, ""                                 '134
  Text           38, 204,  20,  16, ""                                 '135
  Text           63, 192,  16,   8, ""                                 '136
  Text           62, 204,  20,  16, ""                                 '137
  Text           87, 192,  16,   8, ""                                 '138
  Text           86, 204,  20,  16, ""                                 '139
  Text          111, 192,  16,   8, ""                                 '140
  Text          110, 204,  20,  16, ""                                 '141
  Text          135, 192,  16,   8, ""                                 '142
  Text          134, 204,  20,  16, ""                                 '143
  Text          159, 192,  16,   8, ""                                 '144
  Text          158, 204,  20,  16, ""                                 '145
  Text          183, 192,  16,   8, ""                                 '146
  Text          182, 204,  20,  16, ""                                 '147
  Text          207, 192,  16,   8, ""                                 '148
  Text          206, 204,  20,  16, ""                                 '149
  Text          231, 192,  16,   8, ""                                 '150
  Text          230, 204,  20,  16, ""                                 '151
  Text          255, 192,  16,   8, ""                                 '152
  Text          254, 204,  20,  16, ""                                 '153
  Text          279, 192,  16,   8, ""                                 '154
  Text          278, 204,  20,  16, ""                                 '155
  Text          303, 192,  16,   8, ""                                 '156
  Text          302, 204,  20,  16, ""                                 '157
  Text          327, 192,  16,   8, ""                                 '158
  Text          326, 204,  20,  16, ""                                 '159
  Text           15, 226,  16,   8, ""                                 '160 Row 6
  Text           14, 240,  20,  16, ""                                 '161
  Text           39, 226,  16,   8, ""                                 '162
  Text           38, 240,  20,  16, ""                                 '163
  Text           63, 226,  16,   8, ""                                 '164
  Text           62, 240,  20,  16, ""                                 '165
  Text           87, 226,  16,   8, ""                                 '166
  Text           86, 240,  20,  16, ""                                 '167
  Text          111, 226,  16,   8, ""                                 '168
  Text          110, 240,  20,  16, ""                                 '169
  Text          135, 226,  16,   8, ""                                 '170
  Text          134, 240,  20,  16, ""                                 '171
  Text          159, 226,  16,   8, ""                                 '172
  Text          158, 240,  20,  16, ""                                 '173
  Text          183, 226,  16,   8, ""                                 '174
  Text          182, 240,  20,  16, ""                                 '175
  Text          207, 226,  16,   8, ""                                 '176
  Text          206, 240,  20,  16, ""                                 '177
  Text          231, 226,  16,   8, ""                                 '178
  Text          230, 240,  20,  16, ""                                 '179
  Text          255, 226,  16,   8, ""                                 '180
  Text          254, 240,  20,  16, ""                                 '181
  Text          279, 226,  16,   8, ""                                 '182
  Text          278, 240,  20,  16, ""                                 '183
  Text          303, 226,  16,   8, ""                                 '184
  Text          302, 240,  20,  16, ""                                 '185
  Text          327, 226,  16,   8, ""                                 '186
  Text          326, 240,  20,  16, ""                                 '187
End Dialog

Dim Dialog1 As Dialog1Definition
On Error Resume Next
Dialog Dialog1

End Sub

'****************************************************************************************

Sub FillCharDatabase

' Numbers preceded by a left brace or curly bracket are ASCII values of characters that
' can't be represented here by themselves.

CharDatabase( 0   ) = "128,|0|,2070,[],20AC"
CharDatabase( 1   ) = "129,|1|,00B9,[×],"
CharDatabase( 2   ) = "130,|2|,00B2,[],201A"
CharDatabase( 3   ) = "131,|3|,00B3,[],0192"
CharDatabase( 4   ) = "132,|4|,2074,[],201E"
CharDatabase( 5   ) = "133,|5|,2075,[],2026"
CharDatabase( 6   ) = "134,|6|,2076,[],2020"
CharDatabase( 7   ) = "135,|7|,2077,[],2021"
CharDatabase( 8   ) = "136,|8|,2078,[],02C6"
CharDatabase( 9   ) = "137,|9|,2079,[],2030"
CharDatabase( 10  ) = "138,|(|,207D,[],0160"
CharDatabase( 11  ) = "139,|)|,207E,[],2039"
CharDatabase( 12  ) = "140,|+|,207A,[],0152"
CharDatabase( 13  ) = "141,|-|,207B,[×],"
CharDatabase( 14  ) = "142,,,[],017D"
CharDatabase( 15  ) = ",,,," 'Not defined in either scheme
CharDatabase( 16  ) = "144,|0|,2080,[×],"
CharDatabase( 17  ) = "145,|1|,2081,[],2018"
CharDatabase( 18  ) = "146,|2|,2082,[],2019"
CharDatabase( 19  ) = "147,|3|,2083,[],201C"
CharDatabase( 20  ) = "148,|4|,2084,[],201D"
CharDatabase( 21  ) = "149,|5|,2085,[],2022"
CharDatabase( 22  ) = "150,|6|,2086,[],2013"
CharDatabase( 23  ) = "151,|7|,2087,[],2014"
CharDatabase( 24  ) = "152,|8|,2088,[],02DC"
CharDatabase( 25  ) = "153,|9|,2089,[],2122"
CharDatabase( 26  ) = "154,|(|,208D,[],0161"
CharDatabase( 27  ) = "155,|)|,208E,[],203A"
CharDatabase( 28  ) = "156,|+|,208A,[],0153"
CharDatabase( 29  ) = "157,|-|,208B,[×],"
CharDatabase( 30  ) = "158,°,00B0,[],017E"
CharDatabase( 31  ) = "159,ß,00DF,[],0178"
CharDatabase( 32  ) = "160,[],20AC, ,00A0"
CharDatabase( 33  ) = "161,[],0141,¡,00A1"
CharDatabase( 34  ) = "162,Ø,00D8,¢,00A2"
CharDatabase( 35  ) = "163,Ð,0110,£,00A3"
CharDatabase( 36  ) = "164,Þ,00DE,¤,00A4"
CharDatabase( 37  ) = "165,Æ,00C6,¥,00A5"
CharDatabase( 38  ) = "166,[],0152,¦,00A6"
CharDatabase( 39  ) = "167,[],02B9,§,00A7"
CharDatabase( 40  ) = "168,·,00B7,¨,00A8"
CharDatabase( 41  ) = "169,[],266D,©,00A9"
CharDatabase( 42  ) = "170,®,00AE,ª,00AA"
CharDatabase( 43  ) = "171,±,00B1,«,00AB"
CharDatabase( 44  ) = "172,[],01A0,¬,00AC"
CharDatabase( 45  ) = "173,[],01AF,­,00AD"
CharDatabase( 46  ) = "174,[],02BC,®,00AE"
CharDatabase( 47  ) = "175,[x],,¯,00AF"
CharDatabase( 48  ) = "176,[],02BB,°,00B0"
CharDatabase( 49  ) = "177,[],0142,±,00B1"
CharDatabase( 50  ) = "178,ø,00F8,²,00B2"
CharDatabase( 51  ) = "179,[],0111,³,00B3"
CharDatabase( 52  ) = "180,þ,00FE,´,00B4"
CharDatabase( 53  ) = "181,æ,00E6,µ,00B5"
CharDatabase( 54  ) = "182,[],0153,¶,00B6"
CharDatabase( 55  ) = "183,[],02BA,·,00B7"
CharDatabase( 56  ) = "184,[],0131,¸,00B8"
CharDatabase( 57  ) = "185,£,00A3,¹,00B9"
CharDatabase( 58  ) = "186,[],00F0,º,00BA"
CharDatabase( 59  ) = "187,[x],,»,00BB"
CharDatabase( 60  ) = "188,[],01A1,¼,00BC"
CharDatabase( 61  ) = "189,[],01B0,½,00BD"
CharDatabase( 62  ) = "190,[],2113,¾,00BE"
CharDatabase( 63  ) = "191,[x],,¿,00BF"
CharDatabase( 64  ) = "192,[x],,À,00C0"
CharDatabase( 65  ) = "193,[x],,Á,00C1"
CharDatabase( 66  ) = "194,[x],,Â,00C2"
CharDatabase( 67  ) = "195,[x],,Ã,00C3"
CharDatabase( 68  ) = "196,[x],,Ä,00C4"
CharDatabase( 69  ) = "197,[x],,Å,00C5"
CharDatabase( 70  ) = "198,[x],,Æ,00C6"
CharDatabase( 71  ) = "199,[x],,Ç,00C7"
CharDatabase( 72  ) = "200,¿,00BF,È,00C8"
CharDatabase( 73  ) = "201,¡,00A1,É,00C9"
CharDatabase( 74  ) = "202,©,00A9,Ê,00CA"
CharDatabase( 75  ) = "203,[],2117,Ë,00CB"
CharDatabase( 76  ) = "204,[],266F,Ì,00CC"
CharDatabase( 77  ) = "205,[x],,Í,00CD"
CharDatabase( 78  ) = "206,[x],,Î,00CE"
CharDatabase( 79  ) = "207,[x],,Ï,00CF"
CharDatabase( 80  ) = "208,[x],,Ð,00D0"
CharDatabase( 81  ) = "209,[x],,Ñ,00D1"
CharDatabase( 82  ) = "210,[x],,Ò,00D2"
CharDatabase( 83  ) = "211,[x],,Ó,00D3"
CharDatabase( 84  ) = "212,[x],,Ô,00D4"
CharDatabase( 85  ) = "213,[x],,Õ,00D5"
CharDatabase( 86  ) = "214,[x],,Ö,00D6"
CharDatabase( 87  ) = "215,[x],,×,00D7"
CharDatabase( 88  ) = "216,[x],,Ø,00D8"
CharDatabase( 89  ) = "217,[x],,Ù,00D9"
CharDatabase( 90  ) = "218,[x],,Ú,00DA"
CharDatabase( 91  ) = "219,[x],,Û,00DB"
CharDatabase( 92  ) = "220,[x],,Ü,00DC"
CharDatabase( 93  ) = "221,[x],,Ý,00DD"
CharDatabase( 94  ) = "222,[x],,Þ,00DE"
CharDatabase( 95  ) = "223,|$|,01C2,ß,00DF"
CharDatabase( 96  ) = "224,[],0309,à,00E0"
CharDatabase( 97  ) = "225,`,0300,á,00E1"
CharDatabase( 98  ) = "226,´,0301,â,00E2"
CharDatabase( 99  ) = "227,^,0302,ã,00E3"
CharDatabase( 100 ) = "228,~,0303,ä,00E4"
CharDatabase( 101 ) = "229,¯,0304,å,00E5"
CharDatabase( 102 ) = "230,[],0306,æ,00E6"
CharDatabase( 103 ) = "231,[],0307,ç,00E7"
CharDatabase( 104 ) = "232,¨,0308,è,00E8"
CharDatabase( 105 ) = "233,[],030C,é,00E9"
CharDatabase( 106 ) = "234,°,030A,ê,00EA"
CharDatabase( 107 ) = "235,[],FE20,ë,00EB"
CharDatabase( 108 ) = "236,[],FE21,ì,00EC"
CharDatabase( 109 ) = "237,[],0315,í,00ED"
CharDatabase( 110 ) = "238,[],030B,î,00EE"
CharDatabase( 111 ) = "239,[],0310,ï,00EF"
CharDatabase( 112 ) = "240,¸,0327,ð,00F0"
CharDatabase( 113 ) = "241,[],0328,ñ,00F1"
CharDatabase( 114 ) = "242,[],0323,ò,00F2"
CharDatabase( 115 ) = "243,[],0324,ó,00F3"
CharDatabase( 116 ) = "244,[],0325,ô,00F4"
CharDatabase( 117 ) = "245,[],0333,õ,00F5"
CharDatabase( 118 ) = "246,_,0332,ö,00F6"
CharDatabase( 119 ) = "247,{44,0326,÷,00F7"
CharDatabase( 120 ) = "248,[],031C,ø,00F8"
CharDatabase( 121 ) = "249,[],032E,ù,00F9"
CharDatabase( 122 ) = "250,[],FE22,ú,00FA"
CharDatabase( 123 ) = "251,[],FE23,û,00FB"
CharDatabase( 124 ) = "252,{127,220E,ü,00FC"
CharDatabase( 125 ) = "253,[×],,ý,00FD"
CharDatabase( 126 ) = "254,{039,0313,þ,00FE"
CharDatabase( 127 ) = "255,[×],,ÿ,00FF"

End Sub

'****************************************************************************************

Sub FillDefinitionArray

' The character names for the extended Latin range are taken from
' https://www.loc.gov/marc/specifications/codetables/ExtendedLatin.html. The MARC-8
' character name is followed by the Unicode name; if the MARC-8 name is the same as or
' very similar to the UCS name, only the UCS name is given. In a few cases, where the
' OCLC-MARC name is quite different, it is given first.

Extended( 0  ) = "158ODegree sign"
Extended( 1  ) = "159OEszett symbol"
Extended( 2  ) = "160OEuro sign"
Extended( 3  ) = "161BUppercase Polish L / Latin capital letter L with stroke"
Extended( 4  ) = "162BUppercase Scandinavian O / Latin capital letter O with stroke"
Extended( 5  ) = "163BUppercase D with crossbar / Latin capital letter D with stroke"
Extended( 6  ) = "164BUppercase Icelandic Thorn / Latin capital letter Thorn"
Extended( 7  ) = "165BUppercase digraph AE / Latin capital ligature AE"
Extended( 8  ) = "166BUppercase digraph OE / Latin capital ligature OE"
Extended( 9  ) = "167BMiagkii znak / Soft sign, prime / modifier letter prime"
Extended( 10 ) = "168BMiddle dot"
Extended( 11 ) = "169BMusic flat sign"
Extended( 12 ) = "170BPatent mark / registered sign"
Extended( 13 ) = "171BPlus or minus / plus-minus sign"
Extended( 14 ) = "172BUppercase O-hook / Latin capital letter O with horn"
Extended( 15 ) = "173BUppercase U-hook / Latin capital letter U with horn"
Extended( 16 ) = "174BAlif / modifier letter apostrophe"
Extended( 17 ) = "175N"
Extended( 18 ) = "176BAyn / modifier letter turned comma"
Extended( 19 ) = "177BLowercase Polish l / Latin small letter l with stroke"
Extended( 20 ) = "178BLowercase Scandinavian o / Latin small letter o with stroke"
Extended( 21 ) = "179BLowercase d with crossbar / Latin small letter d with stroke"
Extended( 22 ) = "180BLowercase Icelandic thorn / Latin small letter thorn"
Extended( 23 ) = "181BLowercase digraph ae / Latin small ligature ae"
Extended( 24 ) = "182BLowercase digraph oe / Latin small ligature oe"
Extended( 25 ) = "183BTverdyi znak / Hard sign, double prime / modifier letter double prime"
Extended( 26 ) = "184BLowercase Turkish i / Latin small letter dotless i"
Extended( 27 ) = "185BBritish pound / pound sign"
Extended( 28 ) = "186BLowercase eth / Latin small letter eth"
Extended( 29 ) = "187N"
Extended( 30 ) = "188BLowercase o-hook / Latin small letter o with horn"
Extended( 31 ) = "189BLowercase u-hook / Latin small letter u with horn"
Extended( 32 ) = "190OScript small l"
Extended( 33 ) = "191N"
Extended( 34 ) = "1928Degree sign"
Extended( 35 ) = "1938Script small l"
Extended( 36 ) = "1948Sound recording copyright"
Extended( 37 ) = "1958Copyright sign"
Extended( 38 ) = "1968Music sharp sign"
Extended( 39 ) = "1978Inverted question mark"
Extended( 40 ) = "1988Inverted exclamation mark"
Extended( 41 ) = "1998Eszett symbol"
Extended( 42 ) = "200OInverted question mark"
Extended( 43 ) = "201OInverted exclamation mark"
Extended( 44 ) = "202OCopyright sign"
Extended( 45 ) = "203OSound recording copyright"
Extended( 46 ) = "204OMusic sharp sign"
Extended( 47 ) = "205N"
Extended( 48 ) = "206N"
Extended( 49 ) = "207N"
Extended( 50 ) = "208N"
Extended( 51 ) = "209N"
Extended( 52 ) = "210N"
Extended( 53 ) = "211N"
Extended( 54 ) = "212N"
Extended( 55 ) = "213N"
Extended( 56 ) = "214N"
Extended( 57 ) = "215N"
Extended( 58 ) = "216N"
Extended( 59 ) = "217N"
Extended( 60 ) = "218N"
Extended( 61 ) = "219N"
Extended( 62 ) = "220N"
Extended( 63 ) = "221N"
Extended( 64 ) = "222N"
Extended( 65 ) = "223ODelimiter"
Extended( 66 ) = "224BPseudo question mark / combining hook above"
Extended( 67 ) = "225BGrave / combining grave accent"
Extended( 68 ) = "226BAcute / combining acute accent"
Extended( 69 ) = "227BCircumflex / combining circumflex accent"
Extended( 70 ) = "228BTilde / combining tilde"
Extended( 71 ) = "229BMacron / combining macron"
Extended( 72 ) = "230BBreve / combining breve"
Extended( 73 ) = "231BSuperior dot / combining dot above"
Extended( 74 ) = "232BUmlaut, diaeresis / combining diaeresis"
Extended( 75 ) = "233BHacek / combining caron"
Extended( 76 ) = "234BCircle above, angstrom / combining ring above"
Extended( 77 ) = "235BLigature, first half / combining double inverted breve"
Extended( 78 ) = "236BLigature, second half / combining ligature right half"
Extended( 79 ) = "237BHigh comma, off center / combining comma above right"
Extended( 80 ) = "238BDouble acute / combining double acute accent"
Extended( 81 ) = "239BCandrabindu / combining candrabindu"
Extended( 82 ) = "240BCedilla / combining cedilla"
Extended( 83 ) = "241BRight hook, ogonek / combining ogonek"
Extended( 84 ) = "242BDot below / combining dot below"
Extended( 85 ) = "243BDouble dot below / combining diaeresis below"
Extended( 86 ) = "244BCircle below / combining ring below"
Extended( 87 ) = "245BDouble underscore / combining double low line"
Extended( 88 ) = "246BUnderscore / combining low line"
Extended( 89 ) = "247BLeft hook (comma below) / combining comma below"
Extended( 90 ) = "248BRight cedilla / combining left half ring below"
Extended( 91 ) = "249BUpadhmaniya / combining breve below"
Extended( 92 ) = "250BDouble tilde, first half / combining double tilde"
Extended( 93 ) = "251BDouble tilde, second half / combining double tilde right half"
Extended( 94 ) = "252OFill character"
Extended( 95 ) = "253N"
Extended( 96 ) = "254BHigh comma, centered / combining comma above"
Extended( 97 ) = "255N"

End Sub

'****************************************************************************************

Sub FillUnicodeArray

' Filling the Unicode array has to be done in two steps because there seems to be a
' limit to the size of a subroutine in this version of BASIC of about 56,000 bytes, and
' code for filling the whole array in one go is rather larger than that.

' The Unicode characters selected for display are all those in the blocks Latin Extended-
' A and -B (together, U+0100 to U+024F), Latin Extended-C (U+2C60 to U+2C7F), Combining
' Diacritical Marks (U+0300 to U+036F), and Latin Extended Additional (U+1E00 to U+1EFF).
' Characters in the Basic Latin and Latin-1 Supplement blocks (U+0000 to U+00FF) I judged
' to be not necessary to include, as they are the same as the ASCII characters available
' to the dialog box. Including characters in the remaining Latin Unicode blocks (Latin
' Extended-D (U+A720 to U+A7FF), Latin Extended-E (U+AB30 to U+AB6F), Latin Extended-F
' (U+10780 to U+107BF), and Latin Extended-G (U+1DF00 to U+1DFFF)) would have made the
' macro much larger, and I judged those characters to be less likely to be encountered by
' myself and most users. For the same reasons I did not include characters in the blocks
' Combining Diacritical Marks Extended (U+1AB0 to U+1AFF), Combining Diacritical Marks
' Supplement (U+1DC0 to U+1DFF), Combining Diacritical Marks for Symbols (U+20D0 to
' U+20FF), or Combining Half Marks (U+FE20 to U+FE2F). Accounting for non-Latin scripts
' also is way beyond the scope of this macro.

Unicode( 0   ) = "0100Latin capital letter A with macron"
Unicode( 1   ) = "0101Latin small letter a with macron"
Unicode( 2   ) = "0102Latin capital letter A with breve"
Unicode( 3   ) = "0103Latin small letter a with breve"
Unicode( 4   ) = "0104Latin capital letter A with ogonek"
Unicode( 5   ) = "0105Latin small letter a with ogonek"
Unicode( 6   ) = "0106Latin capital letter C with acute"
Unicode( 7   ) = "0107Latin small letter c with acute"
Unicode( 8   ) = "0108Latin capital letter C with circumflex"
Unicode( 9   ) = "0109Latin small letter c with circumflex"
Unicode( 10  ) = "010ALatin capital letter C with dot above"
Unicode( 11  ) = "010BLatin small letter c with dot above"
Unicode( 12  ) = "010CLatin capital letter C with caron"
Unicode( 13  ) = "010DLatin small letter c with caron"
Unicode( 14  ) = "010ELatin capital letter D with caron"
Unicode( 15  ) = "010FLatin small letter d with caron"
Unicode( 16  ) = "0110Latin capital letter D with stroke"
Unicode( 17  ) = "0111Latin small letter d with stroke"
Unicode( 18  ) = "0112Latin capital letter E with macron"
Unicode( 19  ) = "0113Latin small letter e with macron"
Unicode( 20  ) = "0114Latin capital letter E with breve"
Unicode( 21  ) = "0115Latin small letter e with breve"
Unicode( 22  ) = "0116Latin capital letter E with dot above"
Unicode( 23  ) = "0117Latin small letter e with dot above"
Unicode( 24  ) = "0118Latin capital letter E with ogonek"
Unicode( 25  ) = "0119Latin small letter e with ogonek"
Unicode( 26  ) = "011ALatin capital letter E with caron"
Unicode( 27  ) = "011BLatin small letter e with caron"
Unicode( 28  ) = "011CLatin capital letter G with circumflex"
Unicode( 29  ) = "011DLatin small letter g with circumflex"
Unicode( 30  ) = "011ELatin capital letter G with breve"
Unicode( 31  ) = "011FLatin small letter g with breve"
Unicode( 32  ) = "0120Latin capital letter G with dot above"
Unicode( 33  ) = "0121Latin small letter g with dot above"
Unicode( 34  ) = "0122Latin capital letter G with cedilla"
Unicode( 35  ) = "0123Latin small letter g with cedilla"
Unicode( 36  ) = "0124Latin capital letter H with circumflex"
Unicode( 37  ) = "0125Latin small letter h with circumflex"
Unicode( 38  ) = "0126Latin capital letter H with stroke"
Unicode( 39  ) = "0127Latin small letter h with stroke"
Unicode( 40  ) = "0128Latin capital letter I with tilde"
Unicode( 41  ) = "0129Latin small letter i with tilde"
Unicode( 42  ) = "012ALatin capital letter I with macron"
Unicode( 43  ) = "012BLatin small letter i with macron"
Unicode( 44  ) = "012CLatin capital letter I with breve"
Unicode( 45  ) = "012DLatin small letter i with breve"
Unicode( 46  ) = "012ELatin capital letter I with ogonek"
Unicode( 47  ) = "012FLatin small letter i with ogonek"
Unicode( 48  ) = "0130Latin capital letter I with dot above"
Unicode( 49  ) = "0131Latin small letter dotless i"
Unicode( 50  ) = "0132Latin capital ligature IJ"
Unicode( 51  ) = "0133Latin small ligature ij"
Unicode( 52  ) = "0134Latin capital letter J with circumflex"
Unicode( 53  ) = "0135Latin small letter j with circumflex"
Unicode( 54  ) = "0136Latin capital letter K with cedilla"
Unicode( 55  ) = "0137Latin small letter k with cedilla"
Unicode( 56  ) = "0138Latin small letter kra"
Unicode( 57  ) = "0139Latin capital letter L with acute"
Unicode( 58  ) = "013ALatin small letter l with acute"
Unicode( 59  ) = "013BLatin capital letter L with cedilla"
Unicode( 60  ) = "013CLatin small letter l with cedilla"
Unicode( 61  ) = "013DLatin capital letter L with caron"
Unicode( 62  ) = "013ELatin small letter l with caron"
Unicode( 63  ) = "013FLatin capital letter L with middle dot"
Unicode( 64  ) = "0140Latin small letter l with middle dot"
Unicode( 65  ) = "0141Latin capital letter L with stroke"
Unicode( 66  ) = "0142Latin small letter l with stroke"
Unicode( 67  ) = "0143Latin capital letter N with acute"
Unicode( 68  ) = "0144Latin small letter n with acute"
Unicode( 69  ) = "0145Latin capital letter N with cedilla"
Unicode( 70  ) = "0146Latin small letter n with cedilla"
Unicode( 71  ) = "0147Latin capital letter N with caron"
Unicode( 72  ) = "0148Latin small letter n with caron"
Unicode( 73  ) = "0149Latin small letter n preceded by apostrophe"
Unicode( 74  ) = "014ALatin capital letter Eng"
Unicode( 75  ) = "014BLatin small letter eng"
Unicode( 76  ) = "014CLatin capital letter O with macron"
Unicode( 77  ) = "014DLatin small letter o with macron"
Unicode( 78  ) = "014ELatin capital letter O with breve"
Unicode( 79  ) = "014FLatin small letter o with breve"
Unicode( 80  ) = "0150Latin capital letter O with double acute"
Unicode( 81  ) = "0151Latin small letter o with double acute"
Unicode( 82  ) = "0152Latin capital ligature OE"
Unicode( 83  ) = "0153Latin small ligature oe"
Unicode( 84  ) = "0154Latin capital letter R with acute"
Unicode( 85  ) = "0155Latin small letter r with acute"
Unicode( 86  ) = "0156Latin capital letter R with cedilla"
Unicode( 87  ) = "0157Latin small letter r with cedilla"
Unicode( 88  ) = "0158Latin capital letter R with caron"
Unicode( 89  ) = "0159Latin small letter r with caron"
Unicode( 90  ) = "015ALatin capital letter S with acute"
Unicode( 91  ) = "015BLatin small letter s with acute"
Unicode( 92  ) = "015CLatin capital letter S with circumflex"
Unicode( 93  ) = "015DLatin small letter s with circumflex"
Unicode( 94  ) = "015ELatin capital letter S with cedilla"
Unicode( 95  ) = "015FLatin small letter s with cedilla"
Unicode( 96  ) = "0160Latin capital letter S with caron"
Unicode( 97  ) = "0161Latin small letter s with caron"
Unicode( 98  ) = "0162Latin capital letter T with cedilla"
Unicode( 99  ) = "0163Latin small letter t with cedilla"
Unicode( 100 ) = "0164Latin capital letter T with caron"
Unicode( 101 ) = "0165Latin small letter t with caron"
Unicode( 102 ) = "0166Latin capital letter T with stroke"
Unicode( 103 ) = "0167Latin small letter t with stroke"
Unicode( 104 ) = "0168Latin capital letter U with tilde"
Unicode( 105 ) = "0169Latin small letter u with tilde"
Unicode( 106 ) = "016ALatin capital letter U with macron"
Unicode( 107 ) = "016BLatin small letter u with macron"
Unicode( 108 ) = "016CLatin capital letter U with breve"
Unicode( 109 ) = "016DLatin small letter u with breve"
Unicode( 110 ) = "016ELatin capital letter U with ring above"
Unicode( 111 ) = "016FLatin small letter u with ring above"
Unicode( 112 ) = "0170Latin capital letter U with double acute"
Unicode( 113 ) = "0171Latin small letter u with double acute"
Unicode( 114 ) = "0172Latin capital letter U with ogonek"
Unicode( 115 ) = "0173Latin small letter u with ogonek"
Unicode( 116 ) = "0174Latin capital letter W with circumflex"
Unicode( 117 ) = "0175Latin small letter w with circumflex"
Unicode( 118 ) = "0176Latin capital letter Y with circumflex"
Unicode( 119 ) = "0177Latin small letter y with circumflex"
Unicode( 120 ) = "0178Latin capital letter Y with diaeresis"
Unicode( 121 ) = "0179Latin capital letter Z with acute"
Unicode( 122 ) = "017ALatin small letter z with acute"
Unicode( 123 ) = "017BLatin capital letter Z with dot above"
Unicode( 124 ) = "017CLatin small letter z with dot above"
Unicode( 125 ) = "017DLatin capital letter Z with caron"
Unicode( 126 ) = "017ELatin small letter z with caron"
Unicode( 127 ) = "017FLatin small letter long s"
Unicode( 128 ) = "0180Latin small letter b with stroke"
Unicode( 129 ) = "0181Latin capital letter B with hook"
Unicode( 130 ) = "0182Latin capital letter B with topbar"
Unicode( 131 ) = "0183Latin small letter b with topbar"
Unicode( 132 ) = "0184Latin capital letter tone six"
Unicode( 133 ) = "0185Latin small letter tone six"
Unicode( 134 ) = "0186Latin capital letter open O"
Unicode( 135 ) = "0187Latin capital letter C with hook"
Unicode( 136 ) = "0188Latin small letter c with hook"
Unicode( 137 ) = "0189Latin capital letter African D"
Unicode( 138 ) = "018ALatin capital letter D with hook"
Unicode( 139 ) = "018BLatin capital letter D with topbar"
Unicode( 140 ) = "018CLatin small letter d with topbar"
Unicode( 141 ) = "018DLatin small letter turned delta"
Unicode( 142 ) = "018ELatin capital letter reversed E"
Unicode( 143 ) = "018FLatin capital letter Schwa"
Unicode( 144 ) = "0190Latin capital letter open E"
Unicode( 145 ) = "0191Latin capital letter F with hook"
Unicode( 146 ) = "0192Latin small letter f with hook"
Unicode( 147 ) = "0193Latin capital letter G with hook"
Unicode( 148 ) = "0194Latin capital letter Gamma"
Unicode( 149 ) = "0195Latin small letter hv"
Unicode( 150 ) = "0196Latin capital letter Iota"
Unicode( 151 ) = "0197Latin capital letter I with stroke"
Unicode( 152 ) = "0198Latin capital letter K with hook"
Unicode( 153 ) = "0199Latin small letter k with hook"
Unicode( 154 ) = "019ALatin small letter l with bar"
Unicode( 155 ) = "019BLatin small letter lambda with stroke"
Unicode( 156 ) = "019CLatin capital letter turned M"
Unicode( 157 ) = "019DLatin capital letter N with left hook"
Unicode( 158 ) = "019ELatin small letter n with long right leg"
Unicode( 159 ) = "019FLatin capital letter O with middle tilde"
Unicode( 160 ) = "01A0Latin capital letter O with horn"
Unicode( 161 ) = "01A1Latin small letter o with horn"
Unicode( 162 ) = "01A2Latin capital letter OI"
Unicode( 163 ) = "01A3Latin small letter oi"
Unicode( 164 ) = "01A4Latin capital letter P with hook"
Unicode( 165 ) = "01A5Latin small letter p with hook"
Unicode( 166 ) = "01A6Latin letter yr"
Unicode( 167 ) = "01A7Latin capital letter tone two"
Unicode( 168 ) = "01A8Latin small letter tone two"
Unicode( 169 ) = "01A9Latin capital letter Esh"
Unicode( 170 ) = "01AALatin letter reversed esh loop"
Unicode( 171 ) = "01ABLatin small letter t with palatal hook"
Unicode( 172 ) = "01ACLatin capital letter T with hook"
Unicode( 173 ) = "01ADLatin small letter t with hook"
Unicode( 174 ) = "01AELatin capital letter T with retroflex hook"
Unicode( 175 ) = "01AFLatin capital letter U with horn"
Unicode( 176 ) = "01B0Latin small letter u with horn"
Unicode( 177 ) = "01B1Latin capital letter Upsilon"
Unicode( 178 ) = "01B2Latin capital letter V with hook"
Unicode( 179 ) = "01B3Latin capital letter Y with hook"
Unicode( 180 ) = "01B4Latin small letter y with hook"
Unicode( 181 ) = "01B5Latin capital letter Z with stroke"
Unicode( 182 ) = "01B6Latin small letter z with stroke"
Unicode( 183 ) = "01B7Latin capital letter Ezh"
Unicode( 184 ) = "01B8Latin capital letter Ezh reversed"
Unicode( 185 ) = "01B9Latin small letter ezh reversed"
Unicode( 186 ) = "01BALatin small letter ezh with tail"
Unicode( 187 ) = "01BBLatin letter two with stroke"
Unicode( 188 ) = "01BCLatin capital letter tone five"
Unicode( 189 ) = "01BDLatin small letter tone five"
Unicode( 190 ) = "01BELatin letter inverted glottal stop with stroke"
Unicode( 191 ) = "01BFLatin letter wynn"
Unicode( 192 ) = "01C0Latin letter dental click"
Unicode( 193 ) = "01C1Latin letter lateral click"
Unicode( 194 ) = "01C2Latin letter alveolar click"
Unicode( 195 ) = "01C3Latin letter retroflex click"
Unicode( 196 ) = "01C4Latin capital letter DZ with caron"
Unicode( 197 ) = "01C5Latin capital letter D with small letter z with caron"
Unicode( 198 ) = "01C6Latin small letter dz with caron"
Unicode( 199 ) = "01C7Latin capital letter LJ"
Unicode( 200 ) = "01C8Latin capital letter L with small letter j"
Unicode( 201 ) = "01C9Latin small letter lj"
Unicode( 202 ) = "01CALatin capital letter NJ"
Unicode( 203 ) = "01CBLatin capital letter N with small letter j"
Unicode( 204 ) = "01CCLatin small letter nj"
Unicode( 205 ) = "01CDLatin capital letter A with caron"
Unicode( 206 ) = "01CELatin small letter a with caron"
Unicode( 207 ) = "01CFLatin capital letter I with caron"
Unicode( 208 ) = "01D0Latin small letter i with caron"
Unicode( 209 ) = "01D1Latin capital letter O with caron"
Unicode( 210 ) = "01D2Latin small letter o with caron"
Unicode( 211 ) = "01D3Latin capital letter U with caron"
Unicode( 212 ) = "01D4Latin small letter u with caron"
Unicode( 213 ) = "01D5Latin capital letter U with diaeresis and macron"
Unicode( 214 ) = "01D6Latin small letter u with diaeresis and macron"
Unicode( 215 ) = "01D7Latin capital letter U with diaeresis and acute"
Unicode( 216 ) = "01D8Latin small letter u with diaeresis and acute"
Unicode( 217 ) = "01D9Latin capital letter U with diaeresis and caron"
Unicode( 218 ) = "01DALatin small letter u with diaeresis and caron"
Unicode( 219 ) = "01DBLatin capital letter U with diaeresis and grave"
Unicode( 220 ) = "01DCLatin small letter u with diaeresis and grave"
Unicode( 221 ) = "01DDLatin small letter turned e"
Unicode( 222 ) = "01DELatin capital letter A with diaeresis and macron"
Unicode( 223 ) = "01DFLatin small letter a with diaeresis and macron"
Unicode( 224 ) = "01E0Latin capital letter A with dot above and macron"
Unicode( 225 ) = "01E1Latin small letter a with dot above and macron"
Unicode( 226 ) = "01E2Latin capital letter AE with macron"
Unicode( 227 ) = "01E3Latin small letter ae with macron"
Unicode( 228 ) = "01E4Latin capital letter G with stroke"
Unicode( 229 ) = "01E5Latin small letter g with stroke"
Unicode( 230 ) = "01E6Latin capital letter G with caron"
Unicode( 231 ) = "01E7Latin small letter g with caron"
Unicode( 232 ) = "01E8Latin capital letter K with caron"
Unicode( 233 ) = "01E9Latin small letter k with caron"
Unicode( 234 ) = "01EALatin capital letter O with ogonek"
Unicode( 235 ) = "01EBLatin small letter o with ogonek"
Unicode( 236 ) = "01ECLatin capital letter O with ogonek and macron"
Unicode( 237 ) = "01EDLatin small letter o with ogonek and macron"
Unicode( 238 ) = "01EELatin capital letter Ezh with caron"
Unicode( 239 ) = "01EFLatin small letter ezh with caron"
Unicode( 240 ) = "01F0Latin small letter j with caron"
Unicode( 241 ) = "01F1Latin capital letter DZ"
Unicode( 242 ) = "01F2Latin capital letter D with small letter z"
Unicode( 243 ) = "01F3Latin small letter dz"
Unicode( 244 ) = "01F4Latin capital letter G with acute"
Unicode( 245 ) = "01F5Latin small letter g with acute"
Unicode( 246 ) = "01F6Latin capital letter Hwair"
Unicode( 247 ) = "01F7Latin capital letter Wynn"
Unicode( 248 ) = "01F8Latin capital letter N with grave"
Unicode( 249 ) = "01F9Latin small letter n with grave"
Unicode( 250 ) = "01FALatin capital letter A with ring above and acute"
Unicode( 251 ) = "01FBLatin small letter a with ring above and acute"
Unicode( 252 ) = "01FCLatin capital letter AE with acute"
Unicode( 253 ) = "01FDLatin small letter ae with acute"
Unicode( 254 ) = "01FELatin capital letter O with stroke and acute"
Unicode( 255 ) = "01FFLatin small letter o with stroke and acute"
Unicode( 256 ) = "0200Latin capital letter A with double grave"
Unicode( 257 ) = "0201Latin small letter a with double grave"
Unicode( 258 ) = "0202Latin capital letter A with inverted breve"
Unicode( 259 ) = "0203Latin small letter a with inverted breve"
Unicode( 260 ) = "0204Latin capital letter E with double grave"
Unicode( 261 ) = "0205Latin small letter e with double grave"
Unicode( 262 ) = "0206Latin capital letter E with inverted breve"
Unicode( 263 ) = "0207Latin small letter e with inverted breve"
Unicode( 264 ) = "0208Latin capital letter I with double grave"
Unicode( 265 ) = "0209Latin small letter i with double grave"
Unicode( 266 ) = "020ALatin capital letter I with inverted breve"
Unicode( 267 ) = "020BLatin small letter i with inverted breve"
Unicode( 268 ) = "020CLatin capital letter O with double grave"
Unicode( 269 ) = "020DLatin small letter o with double grave"
Unicode( 270 ) = "020ELatin capital letter O with inverted breve"
Unicode( 271 ) = "020FLatin small letter o with inverted breve"
Unicode( 272 ) = "0210Latin capital letter R with double grave"
Unicode( 273 ) = "0211Latin small letter r with double grave"
Unicode( 274 ) = "0212Latin capital letter R with inverted breve"
Unicode( 275 ) = "0213Latin small letter r with inverted breve"
Unicode( 276 ) = "0214Latin capital letter U with double grave"
Unicode( 277 ) = "0215Latin small letter u with double grave"
Unicode( 278 ) = "0216Latin capital letter U with inverted breve"
Unicode( 279 ) = "0217Latin small letter u with inverted breve"
Unicode( 280 ) = "0218Latin capital letter S with comma below"
Unicode( 281 ) = "0219Latin small letter s with comma below"
Unicode( 282 ) = "021ALatin capital letter T with comma below"
Unicode( 283 ) = "021BLatin small letter t with comma below"
Unicode( 284 ) = "021CLatin capital letter Yogh"
Unicode( 285 ) = "021DLatin small letter yogh"
Unicode( 286 ) = "021ELatin capital letter H with caron"
Unicode( 287 ) = "021FLatin small letter h with caron"
Unicode( 288 ) = "0220Latin capital letter N with long right leg"
Unicode( 289 ) = "0221Latin small letter d with curl"
Unicode( 290 ) = "0222Latin capital letter OU"
Unicode( 291 ) = "0223Latin small letter ou"
Unicode( 292 ) = "0224Latin capital letter Z with hook"
Unicode( 293 ) = "0225Latin small letter z with hook"
Unicode( 294 ) = "0226Latin capital letter A with dot above"
Unicode( 295 ) = "0227Latin small letter a with dot above"
Unicode( 296 ) = "0228Latin capital letter E with cedilla"
Unicode( 297 ) = "0229Latin small letter e with cedilla"
Unicode( 298 ) = "022ALatin capital letter O with diaeresis and macron"
Unicode( 299 ) = "022BLatin small letter o with diaeresis and macron"
Unicode( 300 ) = "022CLatin capital letter O with tilde and macron"
Unicode( 301 ) = "022DLatin small letter o with tilde and macron"
Unicode( 302 ) = "022ELatin capital letter O with dot above"
Unicode( 303 ) = "022FLatin small letter o with dot above"
Unicode( 304 ) = "0230Latin capital letter O with dot above and macron"
Unicode( 305 ) = "0231Latin small letter o with dot above and macron"
Unicode( 306 ) = "0232Latin capital letter Y with macron"
Unicode( 307 ) = "0233Latin small letter y with macron"
Unicode( 308 ) = "0234Latin small letter l with curl"
Unicode( 309 ) = "0235Latin small letter n with curl"
Unicode( 310 ) = "0236Latin small letter t with curl"
Unicode( 311 ) = "0237Latin small letter dotless j"
Unicode( 312 ) = "0238Latin small letter db digraph"
Unicode( 313 ) = "0239Latin small letter qp digraph"
Unicode( 314 ) = "023ALatin capital letter A with stroke"
Unicode( 315 ) = "023BLatin capital letter C with stroke"
Unicode( 316 ) = "023CLatin small letter c with stroke"
Unicode( 317 ) = "023DLatin capital letter L with bar"
Unicode( 318 ) = "023ELatin capital letter T with diagonal stroke"
Unicode( 319 ) = "023FLatin small letter s with swash tail"
Unicode( 320 ) = "0240Latin small letter z with swash tail"
Unicode( 321 ) = "0241Latin capital letter glottal stop"
Unicode( 322 ) = "0242Latin small letter glottal stop"
Unicode( 323 ) = "0243Latin capital letter B with stroke"
Unicode( 324 ) = "0244Latin capital letter U bar"
Unicode( 325 ) = "0245Latin capital letter turned V"
Unicode( 326 ) = "0246Latin capital letter E with stroke"
Unicode( 327 ) = "0247Latin small letter e with stroke"
Unicode( 328 ) = "0248Latin capital letter J with stroke"
Unicode( 329 ) = "0249Latin small letter j with stroke"
Unicode( 330 ) = "024ALatin capital letter Small q with hook tail"
Unicode( 331 ) = "024BLatin small letter q with hook tail"
Unicode( 332 ) = "024CLatin capital letter R with stroke"
Unicode( 333 ) = "024DLatin small letter r with stroke"
Unicode( 334 ) = "024ELatin capital letter Y with stroke"
Unicode( 335 ) = "024FLatin small letter y with stroke"
Unicode( 336 ) = "02B0Modifier letter small h"
Unicode( 337 ) = "02B1Modifier letter small h with hook"
Unicode( 338 ) = "02B2Modifier letter small j"
Unicode( 339 ) = "02B3Modifier letter small r"
Unicode( 340 ) = "02B4Modifier letter small turned r"
Unicode( 341 ) = "02B5Modifier letter small turned r with hook"
Unicode( 342 ) = "02B6Modifier letter small capital inverted r"
Unicode( 343 ) = "02B7Modifier letter small w"
Unicode( 344 ) = "02B8Modifier letter small y"
Unicode( 345 ) = "02B9Modifier letter prime"
Unicode( 346 ) = "02BAModifier letter double prime"
Unicode( 347 ) = "02BBModifier letter turned comma"
Unicode( 348 ) = "02BCModifier letter apostrophe"
Unicode( 349 ) = "02BDModifier letter reversed comma"
Unicode( 350 ) = "02BEModifier letter right half ring"
Unicode( 351 ) = "02BFModifier letter left half ring"
Unicode( 352 ) = "02C0Modifier letter glottal stop"
Unicode( 353 ) = "02C1Modifier letter reversed glottal stop"
Unicode( 354 ) = "02C2Modifier letter left arrowhead"
Unicode( 355 ) = "02C3Modifier letter right arrowhead"
Unicode( 356 ) = "02C4Modifier letter up arrowhead"
Unicode( 357 ) = "02C5Modifier letter down arrowhead"
Unicode( 358 ) = "02C6Modifier letter circumflex accent"
Unicode( 359 ) = "02C7Caron"
Unicode( 360 ) = "02C8Modifier letter vertical line"
Unicode( 361 ) = "02C9Modifier letter macron"
Unicode( 362 ) = "02CAModifier letter acute accent"
Unicode( 363 ) = "02CBModifier letter grave accent"
Unicode( 364 ) = "02CCModifier letter low vertical line"
Unicode( 365 ) = "02CDModifier letter low macron"
Unicode( 366 ) = "02CEModifier letter low grave accent"
Unicode( 367 ) = "02CFModifier letter low acute accent"
Unicode( 368 ) = "02D0Modifier letter triangular colon"
Unicode( 369 ) = "02D1Modifier letter half triangular colon"
Unicode( 370 ) = "02D2Modifier letter centred right half ring"
Unicode( 371 ) = "02D3Modifier letter centred left half ring"
Unicode( 372 ) = "02D4Modifier letter up tack"
Unicode( 373 ) = "02D5Modifier letter down tack"
Unicode( 374 ) = "02D6Modifier letter plus sign"
Unicode( 375 ) = "02D7Modifier letter minus sign"
Unicode( 376 ) = "02D8Breve"
Unicode( 377 ) = "02D9Dot above"
Unicode( 378 ) = "02DARing above"
Unicode( 379 ) = "02DBOgonek"
Unicode( 380 ) = "02DCSmall tilde"
Unicode( 381 ) = "02DDDouble acute accent"
Unicode( 382 ) = "02DEModifier letter rhotic hook"
Unicode( 383 ) = "02DFModifier letter cross accent"
Unicode( 384 ) = "02E0Modifier letter small gamma"
Unicode( 385 ) = "02E1Modifier letter small l"
Unicode( 386 ) = "02E2Modifier letter small s"
Unicode( 387 ) = "02E3Modifier letter small x"
Unicode( 388 ) = "02E4Modifier letter small reversed glottal stop"
Unicode( 389 ) = "02E5Modifier letter extra-high tone bar"
Unicode( 390 ) = "02E6Modifier letter high tone bar"
Unicode( 391 ) = "02E7Modifier letter mid tone bar"
Unicode( 392 ) = "02E8Modifier letter low tone bar"
Unicode( 393 ) = "02E9Modifier letter extra-low tone bar"
Unicode( 394 ) = "02EAModifier letter yin departing tone mark"
Unicode( 395 ) = "02EBModifier letter yang departing tone mark"
Unicode( 396 ) = "02ECModifier letter voicing"
Unicode( 397 ) = "02EDModifier letter unaspirated"
Unicode( 398 ) = "02EEModifier letter double apostrophe"
Unicode( 399 ) = "02EFModifier letter low down arrowhead"
Unicode( 400 ) = "02F0Modifier letter low up arrowhead"
Unicode( 401 ) = "02F1Modifier letter low left arrowhead"
Unicode( 402 ) = "02F2Modifier letter low right arrowhead"
Unicode( 403 ) = "02F3Modifier letter low ring"
Unicode( 404 ) = "02F4Modifier letter middle grave accent"
Unicode( 405 ) = "02F5Modifier letter middle double grave accent"
Unicode( 406 ) = "02F6Modifier letter middle double acute accent"
Unicode( 407 ) = "02F7Modifier letter low tilde"
Unicode( 408 ) = "02F8Modifier letter raised colon"
Unicode( 409 ) = "02F9Modifier letter begin high tone"
Unicode( 410 ) = "02FAModifier letter end high tone"
Unicode( 411 ) = "02FBModifier letter begin low tone"
Unicode( 412 ) = "02FCModifier letter end low tone"
Unicode( 413 ) = "02FDModifier letter shelf"
Unicode( 414 ) = "02FEModifier letter open shelf"
Unicode( 415 ) = "02FFModifier letter low left arrow"
Unicode( 416 ) = "0300Combining grave accent"
Unicode( 417 ) = "0301Combining acute accent"
Unicode( 418 ) = "0302Combining circumflex accent"
Unicode( 419 ) = "0303Combining tilde"
Unicode( 420 ) = "0304Combining macron"
Unicode( 421 ) = "0305Combining overline"
Unicode( 422 ) = "0306Combining breve"
Unicode( 423 ) = "0307Combining dot above"
Unicode( 424 ) = "0308Combining diaeresis"
Unicode( 425 ) = "0309Combining hook above"
Unicode( 426 ) = "030ACombining ring above"
Unicode( 427 ) = "030BCombining double acute accent"
Unicode( 428 ) = "030CCombining caron"
Unicode( 429 ) = "030DCombining vertical line above"
Unicode( 430 ) = "030ECombining double vertical line above"
Unicode( 431 ) = "030FCombining double grave accent"
Unicode( 432 ) = "0310Combining candrabindu"
Unicode( 433 ) = "0311Combining inverted breve"
Unicode( 434 ) = "0312Combining turned comma above"
Unicode( 435 ) = "0313Combining comma above"
Unicode( 436 ) = "0314Combining reversed comma above"
Unicode( 437 ) = "0315Combining comma above right"
Unicode( 438 ) = "0316Combining grave accent below"
Unicode( 439 ) = "0317Combining acute accent below"
Unicode( 440 ) = "0318Combining left tack below"
Unicode( 441 ) = "0319Combining right tack below"
Unicode( 442 ) = "031ACombining left angle above"
Unicode( 443 ) = "031BCombining horn"
Unicode( 444 ) = "031CCombining left half ring below"
Unicode( 445 ) = "031DCombining up tack below"
Unicode( 446 ) = "031ECombining down tack below"
Unicode( 447 ) = "031FCombining plus sign below"
Unicode( 448 ) = "0320Combining minus sign below"
Unicode( 449 ) = "0321Combining palatalized hook below"
Unicode( 450 ) = "0322Combining retroflex hook below"
Unicode( 451 ) = "0323Combining dot below"
Unicode( 452 ) = "0324Combining diaeresis below"
Unicode( 453 ) = "0325Combining ring below"
Unicode( 454 ) = "0326Combining comma below"
Unicode( 455 ) = "0327Combining cedilla"
Unicode( 456 ) = "0328Combining ogonek"
Unicode( 457 ) = "0329Combining vertical line below"
Unicode( 458 ) = "032ACombining bridge below"
Unicode( 459 ) = "032BCombining inverted double arch below"
Unicode( 460 ) = "032CCombining caron below"
Unicode( 461 ) = "032DCombining circumflex accent below"
Unicode( 462 ) = "032ECombining breve below"
Unicode( 463 ) = "032FCombining inverted breve below"
Unicode( 464 ) = "0330Combining tilde below"
Unicode( 465 ) = "0331Combining macron below"
Unicode( 466 ) = "0332Combining low line"
Unicode( 467 ) = "0333Combining double low line"
Unicode( 468 ) = "0334Combining tilde overlay"
Unicode( 469 ) = "0335Combining short stroke overlay"
Unicode( 470 ) = "0336Combining long stroke overlay"
Unicode( 471 ) = "0337Combining short solidus overlay"
Unicode( 472 ) = "0338Combining long solidus overlay"
Unicode( 473 ) = "0339Combining right half ring below"
Unicode( 474 ) = "033ACombining inverted bridge below"
Unicode( 475 ) = "033BCombining square below"
Unicode( 476 ) = "033CCombining seagull below"
Unicode( 477 ) = "033DCombining x above"
Unicode( 478 ) = "033ECombining vertical tilde"
Unicode( 479 ) = "033FCombining double overline"
Unicode( 480 ) = "0340Combining grave tone mark"
Unicode( 481 ) = "0341Combining acute tone mark"
Unicode( 482 ) = "0342Combining Greek perispomeni"
Unicode( 483 ) = "0343Combining Greek koronis"
Unicode( 484 ) = "0344Combining Greek dialytika tonos"
Unicode( 485 ) = "0345Combining Greek ypogegrammeni"
Unicode( 486 ) = "0346Combining bridge above"
Unicode( 487 ) = "0347Combining equals sign below"
Unicode( 488 ) = "0348Combining double vertical line below"
Unicode( 489 ) = "0349Combining left angle below"
Unicode( 490 ) = "034ACombining not tilde above"
Unicode( 491 ) = "034BCombining homothetic above"
Unicode( 492 ) = "034CCombining almost equal to above"
Unicode( 493 ) = "034DCombining left right arrow below"
Unicode( 494 ) = "034ECombining upwards arrow below"
Unicode( 495 ) = "034FCombining grapheme joiner"
Unicode( 496 ) = "0350Combining right arrowhead above"
Unicode( 497 ) = "0351Combining left half ring above"
Unicode( 498 ) = "0352Combining fermata"
Unicode( 499 ) = "0353Combining x below"
Unicode( 500 ) = "0354Combining left arrowhead below"
Unicode( 501 ) = "0355Combining right arrowhead below"
Unicode( 502 ) = "0356Combining right arrowhead and up arrowhead below"
Unicode( 503 ) = "0357Combining right half ring above"
Unicode( 504 ) = "0358Combining dot above right"
Unicode( 505 ) = "0359Combining asterisk below"
Unicode( 506 ) = "035ACombining double ring below"
Unicode( 507 ) = "035BCombining zigzag above"
Unicode( 508 ) = "035CCombining double breve below"
Unicode( 509 ) = "035DCombining double breve"
Unicode( 510 ) = "035ECombining double macron"
Unicode( 511 ) = "035FCombining double macron below"
Unicode( 512 ) = "0360Combining double tilde"
Unicode( 513 ) = "0361Combining double inverted breve"
Unicode( 514 ) = "0362Combining double rightwards arrow below"
Unicode( 515 ) = "0363Combining Latin small letter a"
Unicode( 516 ) = "0364Combining Latin small letter e"
Unicode( 517 ) = "0365Combining Latin small letter i"
Unicode( 518 ) = "0366Combining Latin small letter o"
Unicode( 519 ) = "0367Combining Latin small letter u"
Unicode( 520 ) = "0368Combining Latin small letter c"
Unicode( 521 ) = "0369Combining Latin small letter d"
Unicode( 522 ) = "036ACombining Latin small letter h"
Unicode( 523 ) = "036BCombining Latin small letter m"
Unicode( 524 ) = "036CCombining Latin small letter r"
Unicode( 525 ) = "036DCombining Latin small letter t"
Unicode( 526 ) = "036ECombining Latin small letter v"
Unicode( 527 ) = "036FCombining Latin small letter x"
Unicode( 528 ) = "1E00Latin capital letter A with ring below"
Unicode( 529 ) = "1E01Latin small letter a with ring below"
Unicode( 530 ) = "1E02Latin capital letter B with dot above"
Unicode( 531 ) = "1E03Latin small letter b with dot above"
Unicode( 532 ) = "1E04Latin capital letter B with dot below"
Unicode( 533 ) = "1E05Latin small letter b with dot below"
Unicode( 534 ) = "1E06Latin capital letter B with line below"
Unicode( 535 ) = "1E07Latin small letter b with line below"
Unicode( 536 ) = "1E08Latin capital letter C with cedilla and acute"
Unicode( 537 ) = "1E09Latin small letter c with cedilla and acute"
Unicode( 538 ) = "1E0ALatin capital letter D with dot above"
Unicode( 539 ) = "1E0BLatin small letter d with dot above"
Unicode( 540 ) = "1E0CLatin capital letter D with dot below"
Unicode( 541 ) = "1E0DLatin small letter d with dot below"
Unicode( 542 ) = "1E0ELatin capital letter D with line below"
Unicode( 543 ) = "1E0FLatin small letter d with line below"
Unicode( 544 ) = "1E10Latin capital letter D with cedilla"
Unicode( 545 ) = "1E11Latin small letter d with cedilla"
Unicode( 546 ) = "1E12Latin capital letter D with circumflex below"
Unicode( 547 ) = "1E13Latin small letter d with circumflex below"
Unicode( 548 ) = "1E14Latin capital letter E with macron and grave"
Unicode( 549 ) = "1E15Latin small letter e with macron and grave"
Unicode( 550 ) = "1E16Latin capital letter E with macron and acute"
Unicode( 551 ) = "1E17Latin small letter e with macron and acute"
Unicode( 552 ) = "1E18Latin capital letter E with circumflex below"
Unicode( 553 ) = "1E19Latin small letter e with circumflex below"
Unicode( 554 ) = "1E1ALatin capital letter E with tilde below"
Unicode( 555 ) = "1E1BLatin small letter e with tilde below"
Unicode( 556 ) = "1E1CLatin capital letter E with cedilla and breve"
Unicode( 557 ) = "1E1DLatin small letter e with cedilla and breve"
Unicode( 558 ) = "1E1ELatin capital letter F with dot above"
Unicode( 559 ) = "1E1FLatin small letter f with dot above"
Unicode( 560 ) = "1E20Latin capital letter G with macron"
Unicode( 561 ) = "1E21Latin small letter g with macron"
Unicode( 562 ) = "1E22Latin capital letter H with dot above"
Unicode( 563 ) = "1E23Latin small letter h with dot above"
Unicode( 564 ) = "1E24Latin capital letter H with dot below"
Unicode( 565 ) = "1E25Latin small letter h with dot below"
Unicode( 566 ) = "1E26Latin capital letter H with diaeresis"
Unicode( 567 ) = "1E27Latin small letter h with diaeresis"
Unicode( 568 ) = "1E28Latin capital letter H with cedilla"
Unicode( 569 ) = "1E29Latin small letter h with cedilla"
Unicode( 570 ) = "1E2ALatin capital letter H with breve below"
Unicode( 571 ) = "1E2BLatin small letter h with breve below"
Unicode( 572 ) = "1E2CLatin capital letter I with tilde below"
Unicode( 573 ) = "1E2DLatin small letter i with tilde below"
Unicode( 574 ) = "1E2ELatin capital letter I with diaeresis and acute"
Unicode( 575 ) = "1E2FLatin small letter i with diaeresis and acute"
Unicode( 576 ) = "1E30Latin capital letter K with acute"
Unicode( 577 ) = "1E31Latin small letter k with acute"
Unicode( 578 ) = "1E32Latin capital letter K with dot below"
Unicode( 579 ) = "1E33Latin small letter k with dot below"
Unicode( 580 ) = "1E34Latin capital letter K with line below"
Unicode( 581 ) = "1E35Latin small letter k with line below"
Unicode( 582 ) = "1E36Latin capital letter L with dot below"
Unicode( 583 ) = "1E37Latin small letter l with dot below"
Unicode( 584 ) = "1E38Latin capital letter L with dot below and macron"
Unicode( 585 ) = "1E39Latin small letter l with dot below and macron"
Unicode( 586 ) = "1E3ALatin capital letter L with line below"
Unicode( 587 ) = "1E3BLatin small letter l with line below"
Unicode( 588 ) = "1E3CLatin capital letter L with circumflex below"
Unicode( 589 ) = "1E3DLatin small letter l with circumflex below"
Unicode( 590 ) = "1E3ELatin capital letter M with acute"
Unicode( 591 ) = "1E3FLatin small letter m with acute"
Unicode( 592 ) = "1E40Latin capital letter M with dot above"
Unicode( 593 ) = "1E41Latin small letter m with dot above"
Unicode( 594 ) = "1E42Latin capital letter M with dot below"
Unicode( 595 ) = "1E43Latin small letter m with dot below"
Unicode( 596 ) = "1E44Latin capital letter N with dot above"
Unicode( 597 ) = "1E45Latin small letter n with dot above"
Unicode( 598 ) = "1E46Latin capital letter N with dot below"
Unicode( 599 ) = "1E47Latin small letter n with dot below"
Unicode( 600 ) = "1E48Latin capital letter N with line below"
Unicode( 601 ) = "1E49Latin small letter n with line below"
Unicode( 602 ) = "1E4ALatin capital letter N with circumflex below"
Unicode( 603 ) = "1E4BLatin small letter n with circumflex below"
Unicode( 604 ) = "1E4CLatin capital letter O with tilde and acute"
Unicode( 605 ) = "1E4DLatin small letter o with tilde and acute"
Unicode( 606 ) = "1E4ELatin capital letter O with tilde and diaeresis"
Unicode( 607 ) = "1E4FLatin small letter o with tilde and diaeresis"
Unicode( 608 ) = "1E50Latin capital letter O with macron and grave"
Unicode( 609 ) = "1E51Latin small letter o with macron and grave"
Unicode( 610 ) = "1E52Latin capital letter O with macron and acute"
Unicode( 611 ) = "1E53Latin small letter o with macron and acute"
Unicode( 612 ) = "1E54Latin capital letter P with acute"
Unicode( 613 ) = "1E55Latin small letter p with acute"
Unicode( 614 ) = "1E56Latin capital letter P with dot above"
Unicode( 615 ) = "1E57Latin small letter p with dot above"
Unicode( 616 ) = "1E58Latin capital letter R with dot above"
Unicode( 617 ) = "1E59Latin small letter r with dot above"
Unicode( 618 ) = "1E5ALatin capital letter R with dot below"
Unicode( 619 ) = "1E5BLatin small letter r with dot below"
Unicode( 620 ) = "1E5CLatin capital letter R with dot below and macron"
Unicode( 621 ) = "1E5DLatin small letter r with dot below and macron"
Unicode( 622 ) = "1E5ELatin capital letter R with line below"
Unicode( 623 ) = "1E5FLatin small letter r with line below"
Unicode( 624 ) = "1E60Latin capital letter S with dot above"
Unicode( 625 ) = "1E61Latin small letter s with dot above"
Unicode( 626 ) = "1E62Latin capital letter S with dot below"
Unicode( 627 ) = "1E63Latin small letter s with dot below"
Unicode( 628 ) = "1E64Latin capital letter S with acute and dot above"
Unicode( 629 ) = "1E65Latin small letter s with acute and dot above"
Unicode( 630 ) = "1E66Latin capital letter S with caron and dot above"
Unicode( 631 ) = "1E67Latin small letter s with caron and dot above"
Unicode( 632 ) = "1E68Latin capital letter S with dot below and dot above"
Unicode( 633 ) = "1E69Latin small letter s with dot below and dot above"
Unicode( 634 ) = "1E6ALatin capital letter T with dot above"
Unicode( 635 ) = "1E6BLatin small letter t with dot above"
Unicode( 636 ) = "1E6CLatin capital letter T with dot below"
Unicode( 637 ) = "1E6DLatin small letter t with dot below"
Unicode( 638 ) = "1E6ELatin capital letter T with line below"
Unicode( 639 ) = "1E6FLatin small letter t with line below"
Unicode( 640 ) = "1E70Latin capital letter T with circumflex below"
Unicode( 641 ) = "1E71Latin small letter t with circumflex below"
Unicode( 642 ) = "1E72Latin capital letter U with diaeresis below"
Unicode( 643 ) = "1E73Latin small letter u with diaeresis below"
Unicode( 644 ) = "1E74Latin capital letter U with tilde below"
Unicode( 645 ) = "1E75Latin small letter u with tilde below"
Unicode( 646 ) = "1E76Latin capital letter U with circumflex below"
Unicode( 647 ) = "1E77Latin small letter u with circumflex below"
Unicode( 648 ) = "1E78Latin capital letter U with tilde and acute"
Unicode( 649 ) = "1E79Latin small letter u with tilde and acute"
Unicode( 650 ) = "1E7ALatin capital letter U with macron and diaeresis"
Unicode( 651 ) = "1E7BLatin small letter u with macron and diaeresis"
Unicode( 652 ) = "1E7CLatin capital letter V with tilde"
Unicode( 653 ) = "1E7DLatin small letter v with tilde"
Unicode( 654 ) = "1E7ELatin capital letter V with dot below"
Unicode( 655 ) = "1E7FLatin small letter v with dot below"
Unicode( 656 ) = "1E80Latin capital letter W with grave"
Unicode( 657 ) = "1E81Latin small letter w with grave"
Unicode( 658 ) = "1E82Latin capital letter W with acute"
Unicode( 659 ) = "1E83Latin small letter w with acute"
Unicode( 660 ) = "1E84Latin capital letter W with diaeresis"
Unicode( 661 ) = "1E85Latin small letter w with diaeresis"
Unicode( 662 ) = "1E86Latin capital letter W with dot above"
Unicode( 663 ) = "1E87Latin small letter w with dot above"
Unicode( 664 ) = "1E88Latin capital letter W with dot below"
Unicode( 665 ) = "1E89Latin small letter w with dot below"
Unicode( 666 ) = "1E8ALatin capital letter X with dot above"
Unicode( 667 ) = "1E8BLatin small letter x with dot above"
Unicode( 668 ) = "1E8CLatin capital letter X with diaeresis"
Unicode( 669 ) = "1E8DLatin small letter x with diaeresis"
Unicode( 670 ) = "1E8ELatin capital letter Y with dot above"
Unicode( 671 ) = "1E8FLatin small letter y with dot above"
Unicode( 672 ) = "1E90Latin capital letter Z with circumflex"
Unicode( 673 ) = "1E91Latin small letter z with circumflex"
Unicode( 674 ) = "1E92Latin capital letter Z with dot below"
Unicode( 675 ) = "1E93Latin small letter z with dot below"
Unicode( 676 ) = "1E94Latin capital letter Z with line below"
Unicode( 677 ) = "1E95Latin small letter z with line below"
Unicode( 678 ) = "1E96Latin small letter h with line below"
Unicode( 679 ) = "1E97Latin small letter t with diaeresis"
Unicode( 680 ) = "1E98Latin small letter w with ring above"
Unicode( 681 ) = "1E99Latin small letter y with ring above"
Unicode( 682 ) = "1E9ALatin small letter a with right half ring"
Unicode( 683 ) = "1E9BLatin small letter long s with dot above"
Unicode( 684 ) = "1E9CLatin small letter long s with diagonal stroke"
Unicode( 685 ) = "1E9DLatin small letter long s with high stroke"
Unicode( 686 ) = "1E9ELatin capital letter sharp S"
Unicode( 687 ) = "1E9FLatin small letter delta"
Unicode( 688 ) = "1EA0Latin capital letter A with dot below"
Unicode( 689 ) = "1EA1Latin small letter a with dot below"
Unicode( 690 ) = "1EA2Latin capital letter A with hook above"
Unicode( 691 ) = "1EA3Latin small letter a with hook above"
Unicode( 692 ) = "1EA4Latin capital letter A with circumflex and acute"
Unicode( 693 ) = "1EA5Latin small letter a with circumflex and acute"
Unicode( 694 ) = "1EA6Latin capital letter A with circumflex and grave"
Unicode( 695 ) = "1EA7Latin small letter a with circumflex and grave"
Unicode( 696 ) = "1EA8Latin capital letter A with circumflex and hook above"
Unicode( 697 ) = "1EA9Latin small letter a with circumflex and hook above"
Unicode( 698 ) = "1EAALatin capital letter A with circumflex and tilde"
Unicode( 699 ) = "1EABLatin small letter a with circumflex and tilde"
Unicode( 700 ) = "1EACLatin capital letter A with circumflex and dot below"
Unicode( 701 ) = "1EADLatin small letter a with circumflex and dot below"
Unicode( 702 ) = "1EAELatin capital letter A with breve and acute"
Unicode( 703 ) = "1EAFLatin small letter a with breve and acute"
Unicode( 704 ) = "1EB0Latin capital letter A with breve and grave"
Unicode( 705 ) = "1EB1Latin small letter a with breve and grave"
Unicode( 706 ) = "1EB2Latin capital letter A with breve and hook above"
Unicode( 707 ) = "1EB3Latin small letter a with breve and hook above"
Unicode( 708 ) = "1EB4Latin capital letter A with breve and tilde"
Unicode( 709 ) = "1EB5Latin small letter a with breve and tilde"
Unicode( 710 ) = "1EB6Latin capital letter A with breve and dot below"
Unicode( 711 ) = "1EB7Latin small letter a with breve and dot below"
Unicode( 712 ) = "1EB8Latin capital letter E with dot below"
Unicode( 713 ) = "1EB9Latin small letter e with dot below"
Unicode( 714 ) = "1EBALatin capital letter E with hook above"
Unicode( 715 ) = "1EBBLatin small letter e with hook above"
Unicode( 716 ) = "1EBCLatin capital letter E with tilde"
Unicode( 717 ) = "1EBDLatin small letter e with tilde"
Unicode( 718 ) = "1EBELatin capital letter E with circumflex and acute"
Unicode( 719 ) = "1EBFLatin small letter e with circumflex and acute"
Unicode( 720 ) = "1EC0Latin capital letter E with circumflex and grave"
Unicode( 721 ) = "1EC1Latin small letter e with circumflex and grave"
Unicode( 722 ) = "1EC2Latin capital letter E with circumflex and hook above"
Unicode( 723 ) = "1EC3Latin small letter e with circumflex and hook above"
Unicode( 724 ) = "1EC4Latin capital letter E with circumflex and tilde"
Unicode( 725 ) = "1EC5Latin small letter e with circumflex and tilde"
Unicode( 726 ) = "1EC6Latin capital letter E with circumflex and dot below"
Unicode( 727 ) = "1EC7Latin small letter e with circumflex and dot below"
Unicode( 728 ) = "1EC8Latin capital letter I with hook above"
Unicode( 729 ) = "1EC9Latin small letter i with hook above"
Unicode( 730 ) = "1ECALatin capital letter I with dot below"
Unicode( 731 ) = "1ECBLatin small letter i with dot below"
Unicode( 732 ) = "1ECCLatin capital letter O with dot below"
Unicode( 733 ) = "1ECDLatin small letter o with dot below"
Unicode( 734 ) = "1ECELatin capital letter O with hook above"
Unicode( 735 ) = "1ECFLatin small letter o with hook above"
Unicode( 736 ) = "1ED0Latin capital letter O with circumflex and acute"
Unicode( 737 ) = "1ED1Latin small letter o with circumflex and acute"
Unicode( 738 ) = "1ED2Latin capital letter O with circumflex and grave"
Unicode( 739 ) = "1ED3Latin small letter o with circumflex and grave"
Unicode( 740 ) = "1ED4Latin capital letter O with circumflex and hook above"
Unicode( 741 ) = "1ED5Latin small letter o with circumflex and hook above"
Unicode( 742 ) = "1ED6Latin capital letter O with circumflex and tilde"
Unicode( 743 ) = "1ED7Latin small letter o with circumflex and tilde"
Unicode( 744 ) = "1ED8Latin capital letter O with circumflex and dot below"
Unicode( 745 ) = "1ED9Latin small letter o with circumflex and dot below"
Unicode( 746 ) = "1EDALatin capital letter O with horn and acute"
Unicode( 747 ) = "1EDBLatin small letter o with horn and acute"
Unicode( 748 ) = "1EDCLatin capital letter O with horn and grave"
Unicode( 749 ) = "1EDDLatin small letter o with horn and grave"
Unicode( 750 ) = "1EDELatin capital letter O with horn and hook above"
Unicode( 751 ) = "1EDFLatin small letter o with horn and hook above"
Unicode( 752 ) = "1EE0Latin capital letter O with horn and tilde"
Unicode( 753 ) = "1EE1Latin small letter o with horn and tilde"
Unicode( 754 ) = "1EE2Latin capital letter O with horn and dot below"
Unicode( 755 ) = "1EE3Latin small letter o with horn and dot below"
Unicode( 756 ) = "1EE4Latin capital letter U with dot below"
Unicode( 757 ) = "1EE5Latin small letter u with dot below"
Unicode( 758 ) = "1EE6Latin capital letter U with hook above"
Unicode( 759 ) = "1EE7Latin small letter u with hook above"
Unicode( 760 ) = "1EE8Latin capital letter U with horn and acute"
Unicode( 761 ) = "1EE9Latin small letter u with horn and acute"
Unicode( 762 ) = "1EEALatin capital letter U with horn and grave"
Unicode( 763 ) = "1EEBLatin small letter u with horn and grave"
Unicode( 764 ) = "1EECLatin capital letter U with horn and hook above"
Unicode( 765 ) = "1EEDLatin small letter u with horn and hook above"
Unicode( 766 ) = "1EEELatin capital letter U with horn and tilde"
Unicode( 767 ) = "1EEFLatin small letter u with horn and tilde"
Unicode( 768 ) = "1EF0Latin capital letter U with horn and dot below"
Unicode( 769 ) = "1EF1Latin small letter u with horn and dot below"
Unicode( 770 ) = "1EF2Latin capital letter Y with grave"
Unicode( 771 ) = "1EF3Latin small letter y with grave"
Unicode( 772 ) = "1EF4Latin capital letter Y with dot below"
Unicode( 773 ) = "1EF5Latin small letter y with dot below"
Unicode( 774 ) = "1EF6Latin capital letter Y with hook above"
Unicode( 775 ) = "1EF7Latin small letter y with hook above"
Unicode( 776 ) = "1EF8Latin capital letter Y with tilde"
Unicode( 777 ) = "1EF9Latin small letter y with tilde"
Unicode( 778 ) = "1EFALatin capital letter Middle-Welsh LL"
Unicode( 779 ) = "1EFBLatin small letter Middle-Welsh ll"
Unicode( 780 ) = "1EFCLatin capital letter Middle-Welsh V"
Unicode( 781 ) = "1EFDLatin small letter Middle-Welsh v"
Unicode( 782 ) = "1EFELatin capital letter Y with loop"
Unicode( 783 ) = "1EFFLatin small letter y with loop"

End Sub

'****************************************************************************************

Sub SetDialogBox( CurrentPage%, State% )

' Set up everything on the macro's invocation and if the page changes (the state of the
' dialog box is considered INITIAL). If the encoding form is switched (the state of the
' dialog box is considered SWITCHED), only the characters change; everything else on the
' page remains the same, and need not be re-drawn.

Const MAX_CHARS_PER_LINE As Integer = 14

Dim CharA&
Dim CharControl%
Dim CharDec$
Dim CharDisplay$
Dim CharT$
Dim CharUni$
Dim StringPos%

Dim NoData

Dim i As Integer

If State% = INITIAL Then

    If CurrentPage% = 1 Then
        DlgEnable  "Prev",         DISABLED
        If TotalPages% = 1 Then
            DlgEnable  "Next",         DISABLED
            DlgEnable  "Pages",        DISABLED
            DlgEnable  "Range",        DISABLED
          Else
            DlgEnable  "Next",         ENABLED
            DlgEnable  "Pages",        ENABLED
            DlgEnable  "Range",        ENABLED
        End If
      Else
        If CurrentPage% = TotalPages% Then
            DlgEnable  "Prev",         ENABLED
            DlgEnable  "Next",         DISABLED
          Else
            DlgEnable  "Prev",         ENABLED
            DlgEnable  "Next",         ENABLED
        End If
    End If

    DlgValue   "Pages",        CurrentPage% - 1

    If CurrentPage% = TotalPages% Then
        If Remainder% < ( MAX_CHARS_PER_LINE * 1 ) + 1 Then
            DlgVisible "Row2GroupBox", INVISIBLE
            DlgVisible "Row3GroupBox", INVISIBLE
            DlgVisible "Row4GroupBox", INVISIBLE
            DlgVisible "Row5GroupBox", INVISIBLE
            DlgVisible "Row6GroupBox", INVISIBLE
          ElseIf Remainder% < ( MAX_CHARS_PER_LINE * 2 ) + 1 Then
            DlgVisible "Row3GroupBox", INVISIBLE
            DlgVisible "Row4GroupBox", INVISIBLE
            DlgVisible "Row5GroupBox", INVISIBLE
            DlgVisible "Row6GroupBox", INVISIBLE
          ElseIf Remainder% < ( MAX_CHARS_PER_LINE * 3 ) + 1 Then
            DlgVisible "Row4GroupBox", INVISIBLE
            DlgVisible "Row5GroupBox", INVISIBLE
            DlgVisible "Row6GroupBox", INVISIBLE
          ElseIf Remainder% < ( MAX_CHARS_PER_LINE * 4 ) + 1 Then
            DlgVisible "Row5GroupBox", INVISIBLE
            DlgVisible "Row6GroupBox", INVISIBLE
          ElseIf Remainder% < ( MAX_CHARS_PER_LINE * 5 ) + 1 Then
            DlgVisible "Row6GroupBox", INVISIBLE
        End If
      Else
        DlgVisible "Row1GroupBox", VISIBLE
        DlgVisible "Row2GroupBox", VISIBLE
        DlgVisible "Row3GroupBox", VISIBLE
        DlgVisible "Row4GroupBox", VISIBLE
        DlgVisible "Row5GroupBox", VISIBLE
        DlgVisible "Row6GroupBox", VISIBLE
    End If

End If

' Set the code points first.

For i = 1 To MAX_CHARS_PER_PAGE
  CharControl% = ( i * 2 ) + 19
  If NoData Then
      CharDec$ = ""
      CharUni$ = ""
    Else
      StringPos% = i + ( MAX_CHARS_PER_PAGE * ( CurrentPage% - 1 ) ) - 1
      CharDec$   = Trim$( FieldInfo( StringPos% ) )
      If CharDec$ = "01C2" Then
          CharDec$ = "223"
      End If
      If Len( CharDec$ ) > 3 Then
          CharA& = Abs( Val( "&H" & CharDec$ ) )
        Else
          CharA& = Val( CharDec$ )
      End If
      If CharA& < 128 Then
          CharUni$ = "00" & Hex( CharA& )
        ElseIf CharA& = 223 Then
          CharUni$ = "01C2"
        ElseIf CharA& < 255 Then
          If Encoding$ = "OCLC-MARC" Then
              CharUni$ = GetField( CharDatabase( CharA& - 128 ), MARC_UNI_CHAR, ","  )
            Else
              CharUni$ = GetField( CharDatabase( CharA& - 128 ), ASCII_UNI_CHAR, ","  )
          End If
        Else
          CharUni$ = CharDec$
      End If
  End If
  If CharDec$ = CharUni$ Then
      CharDec$ = "   "
  End If
  If DecOnTop Then
      CharDisplay$ = CharDec$ & " " & CharUni$
    Else
      CharDisplay$ = CharUni$ & " " & CharDec$
  End If
  DlgText    CharControl%,   CharDisplay$
  If StringPos% = UBound( FieldInfo ) Then
      NoData = TRUE
    Else
      NoData = FALSE
  End If
Next i

' Then set the characters for each code point.

NoData = FALSE
For i = 1 To MAX_CHARS_PER_PAGE
  CharControl% = ( i * 2 ) + 18
  If NoData Then
      DlgText    CharControl%,   ""
    Else
      StringPos% = i + ( MAX_CHARS_PER_PAGE * ( CurrentPage% - 1 ) ) - 1
      CharDec$   = Trim$( FieldInfo( StringPos% ) )
      If Len( CharDec$ ) > 3 Then
          CharA& = Abs( Val( "&H" & CharDec$ ) )
        Else
          CharA& = Val( CharDec$ )
      End If

' The ampersand symbol needs to be doubled to make it display in a dialog box.

      If CharA& = 38 Then
          DlgText    CharControl%,   "&&"
        ElseIf CharA& < 128 Then
          DlgText    CharControl%,   Chr$( CharA& )
        Else
          If CharDec$ = "01C2" Then
              DlgText    CharControl%,   "|$|"
            Else
              If CharA& > 255 Then
                  CharT$ = "[]"
                Else
                  If Encoding$ = "OCLC-MARC" Then
                      CharT$ = GetField( CharDatabase( CharA& - 128 ), MARC_CHAR, ","  )
                      If Left$( CharT$, 1 ) = "{" Then
                          CharT$ = Chr$( Val( Mid$( CharT$, 2 ) ) )
                      End If
                    Else
                      CharT$ = GetField( CharDatabase( CharA& - 128 ), ASCII_CHAR, ","  )
                  End If
              End If
              DlgText    CharControl%,   CharT$
          End If
      End If
      If StringPos% = UBound( FieldInfo ) Then
          NoData = TRUE
        Else
          NoData = FALSE
      End If
  End If
Next i

End Sub

'****************************************************************************************

Function Dialog1ControlFunction( Id$, Action%, SVal& )

' The initial character display of the macro when it is invoked is MARC-8. If all the
' characters (except the delimiter) are encoded as low ASCII, with values below 128, the
' switch to view Unicode characters and the search box are both disabled. If character
' encodings are found above 157 then the two controls are enabled.

Const CONTROL_CHANGE      As Integer = 2
Const FOCUS_CHANGE        As Integer = 4
Const IDLE_STATE          As Integer = 5
Const INFORMATION_MESSAGE As Integer = 64
Const KEEP_DLG_OPEN       As Integer = -1
Const WARNING_MESSAGE     As Integer = 48

Const DIGITS_BAD          As Integer = 1
Const DIGITS_OK           As Integer = 0
Const VALUE_BAD           As Integer = 4
Const VALUE_OK            As Integer = 2

Dim CR As String*1           : CR           = Chr$( 013 )
Dim DOUBLE_QUOTE As String*1 : DOUBLE_QUOTE = Chr$( 034 )

Static ASCIIInstruction$
Static CaseInstruct$
Static InputWarning$
Static MARCInstruction$

Dim Byte1$
Dim Byte2$
Dim CharacterName$
Dim CharacterSet$
Dim Compare%
Dim DecVal%
Dim DOMAIN As String*1
Dim HexVal%
Dim High%
Dim InputCheck%
Dim Low%
Dim Middle%
Dim Result%
Dim SearchString$

Dim i As Integer

InputWarning$     = "Please enter a decimal number between 158 and 254 to see the name of an OCLC-MARC character." & CR & CR & "To"
InputWarning$     = InputWarning$ & " see the name of a Unicode character, enter a hexadecimal number between 0100 and 1EFF."
InputWarning$     = InputWarning$ & " Note that only characters in Latin script, and combining characters, are searchable"
InputWarning$     = InputWarning$ & " here, so most of the code points in that range are for characters not included in this"
InputWarning$     = InputWarning$ & " index. The searchable ranges in this index are actually 0100-024F, 02B0-036F, and 1E00-"
InputWarning$     = InputWarning$ & "1EFF. The first digit for a hexadecimal search must therefore be either 0 or 1; if the "
InputWarning$     = InputWarning$ & "first digit is 1, the second character must be E. Case is irrelevant."

MARCInstruction$  = "Enter a 3-digit number between 161 and 254 to view the name of the OCLC-MARC character at that code point."
MARCInstruction$  = MARCInstruction$ & " Characters in that range include diacritics and other characters that can't display"
MARCInstruction$  = MARCInstruction$ & " in the dialog box. Characters below that code point should be able to be viewed"
MARCInstruction$  = MARCInstruction$ & " without problem."

ASCIIInstruction$ = "Enter a 4-character hexadecimal number (the digits 0-9 and letters A-F; case is irrelevant) between 0100"
ASCIIInstruction$ = ASCIIInstruction$ & " and 1EFF to view the name of the Unicode character at that code point. The first"
ASCIIInstruction$ = ASCIIInstruction$ & " digit must be either 0 or 1; if the first digit is 1, the second character must be"
ASCIIInstruction$ = ASCIIInstruction$ & " E. Names are not available for any characters in this range in non-Latin scripts, or"
ASCIIInstruction$ = ASCIIInstruction$ & " for any other marks or symbols apart from the most common diacritical marks. Within"
ASCIIInstruction$ = ASCIIInstruction$ & " this range, this index includes the Unicode blocks Latin Extended A and B (U+0100-"
ASCIIInstruction$ = ASCIIInstruction$ & "U+024F), Latin Extended Additional (U+1E00-U+1EFF), Spacing Modifier Letters (U+02B0-"
ASCIIInstruction$ = ASCIIInstruction$ & "U+02FF), and Combining Diacritical Marks (U+0300-U+036F). Few of these characters "
ASCIIInstruction$ = ASCIIInstruction$ & "will display in the dialog box at all. Characters in Unicode blocks Basic Latin and"
ASCIIInstruction$ = ASCIIInstruction$ & " Latin-1 Supplement (U+0000-U+00FF) should be able to be viewed without problem, and"
ASCIIInstruction$ = ASCIIInstruction$ & " so are not included in this index. Don't enter " & DOUBLE_QUOTE & "U+" & DOUBLE_QUOTE
ASCIIInstruction$ = ASCIIInstruction$ & " in the search box--that just identifies code points as Unicode."

Select Case Action%

  Case INITIALIZE

    DlgVisible "Cancel",       INVISIBLE
    Encoding$ = "OCLC-MARC"
    DlgText    "CharSet",      Encoding$
    If ShowSearch = FALSE Then
'        DlgEnable  "SearchBox",    DISABLED
'        DlgEnable  "Instructions", DISABLED
    End If

    Call SetDialogBox( CurrentPage%, INITIAL )


  Case CONTROL_CHANGE

    Select Case Id$

' When the "Forward" and "Previous" buttons are clicked, they change the current page,
' and they also may need to be disabled at the ends of the ranges. The dialog box stays
' open.

      Case "Prev"

        CurrentPage% = CurrentPage% - 1
        DlgEnable  "Next",         ENABLED
        If CurrentPage% = 1 Then
            DlgEnable  "Prev",         DISABLED
          Else
            DlgEnable  "Prev",         ENABLED
        End If
        Dialog1ControlFunction = KEEP_DLG_OPEN
        Call SetDialogBox( CurrentPage%, INITIAL )

      Case "Next"

        CurrentPage% = CurrentPage% + 1
        DlgEnable  "Prev",         ENABLED
        If CurrentPage% = TotalPages% Then
            DlgEnable  "Next",         DISABLED
          Else
            DlgEnable  "Next",         ENABLED
        End If
        Dialog1ControlFunction = KEEP_DLG_OPEN
        Call SetDialogBox( CurrentPage%, INITIAL )

' Selecting a range of characters from the drop-down box changes the current page.

      Case "Pages"

        CurrentPage% = DlgValue( "Pages" ) + 1
        Call SetDialogBox( CurrentPage%, INITIAL )

      Case "Switch"

' The "Switch" button simply toggles between the two encodings.

        Encoding$ = DlgText( "CharSet" )
        If Encoding$ = "OCLC-MARC" Then
            Encoding$ = "ASCII"
          Else
            Encoding$ = "OCLC-MARC"
        End If
        DlgText    "CharSet",      Encoding$
        Call SetDialogBox( CurrentPage%, SWITCHED )
        Dialog1ControlFunction = KEEP_DLG_OPEN

      Case "SearchHelp"

        Begin Dialog Dialog2Definition  256, 194, WaltsMacros$, .Dialog2ControlFunction
          OkButton      194, 170,  52,  14
          CancelButton    1,   1,   1,   1
          Text           10,   6, 236,  40, MARCInstruction$
          Text           10,  50, 236, 112, ASCIIInstruction$
        End Dialog

        Dim Dialog2 As Dialog2Definition
        On Error Resume Next
        Dialog Dialog2
        Dialog1ControlFunction = KEEP_DLG_OPEN

    End Select


  Case FOCUS_CHANGE

' The macro shows the encoding being viewed in a text box, because that control makes its
' contents stand out more prominently than a text area in the dialog box. However, it's
' not made for input, so if it gets the focus, shunt the focus to another control.

    If Id$ = "CharSet" Then
        DlgFocus   "Switch"
    End If


  Case IDLE_STATE

' Monitor the input to the code point search box for validity. The first validity check
' is the length and makeup of the input string. For viewing MARC characters, the string
' must be three decimal digits; for viewing Unicode characters, it must be four
' hexadecimal digits. A single input box can suffice for both encodings because of the
' limitations of searchable entities. The string to view a MARC character must start with
' either 1 or 2. The string to view a Unicode character must start with either 0 or 1. If
' the first character is 0, the second must be only 1, 2, or 3; if the first character is
' 1, the second must be only 3. In either case, the last two characters can be any of the
' hexadecimal digits 0-F. The second validity check is the numeric value of the input
' string. For viewing MARC characters, the string must have a value between 158 and 254
' (inclusive). For viewing Unicode characters, the value of the input string must be
' between 0100 and 1EFF (decimal 256 and 7935), inclusive, although there are two big
' gaps in the range: The array contains no entries between 024F and 0300, or between 036F
' and 1E00.
'
' As soon as an input string passes both validity checks, for length and for value,
' display a message box showing the code point searched and its character name. When the
' message box is dismissed, clear the input box, but keep the cursor there for entry of
' another code point search. The search for MARC characters is a simple linear search
' because the array is not too large, but the search in the much larger array of Unicode
' characters is binary.

    SearchString$ = DlgText( "SearchBox" )
    If SearchString$ <> "" Then
        If Len( SearchString$ ) = 3 Then
            If Mid$( SearchString$, 1, 1 ) Like "[12]" And _
               Mid$( SearchString$, 2, 1 ) Like "[0-9]" And _
               Mid$( SearchString$, 3, 1 ) Like "[0-9]" Then
                InputCheck% = InputCheck% + DIGITS_OK
                DecVal%     = Val( SearchString$ )
                If DecVal% > 157 And DecVal% < 255 Then
                    InputCheck% = InputCheck% + VALUE_OK
                    For i = 0 To EXTENDED_COUNT
                      If SearchString$ = Left$( Extended( i ), 3 ) Then
                          DOMAIN = Mid$( Extended( i ), 4, 1 )
                          CharacterName$ = Mid$( Extended( i ), 5 )
                          Exit For
                      End If
                    Next i
                  Else
                    InputCheck% = InputCheck% + VALUE_BAD
                End If
              Else
                If SearchString$ Like "[1-9][0-9][0-9]" Then
                    InputCheck% = InputCheck% + DIGITS_OK
                    InputCheck% = InputCheck% + VALUE_BAD
                End If
            End If
          ElseIf Len( SearchString$ ) = 4 Then
            SearchString$ = UCase$( SearchString$ )
            Byte1$ = Left$( SearchString$, 2 )
            Byte2$ = Right$( SearchString$, 2 )
            If Byte1$ Like "0[123]" Or Byte1$ = "1E" And _
               Byte2$ Like "[0-9A-F][0-9A-F]" Then
                InputCheck% = InputCheck% + DIGITS_OK
                HexVal%     = Val( "&H" & SearchString$ )
                If HexVal% > 255 And HexVal% < 7936 Then
                    High%   = UNICODE_COUNT
                    Low%    = 1
                    Do While Low% <= High%
                      Middle%  = Int( ( High% + Low% ) / 2 )
                      Compare% = StrComp( Left$( Unicode( Middle% ), 4 ), SearchString$ )
                      Select Case Compare%
                        Case -1
                          Low%    = Middle% + 1
                        Case 0
                          Result% = Middle%
                          Exit Do
                        Case 1
                          High%   = Middle% - 1
                      End Select
                    Loop
                    If Result% = 0 Then
                        CharacterName$ = "Sorry, the character at this code point is not included in this index."
                      Else
                        CharacterName$ = Mid$( Unicode( Result% ), 5 )
                    End If
                    InputCheck% = InputCheck% + VALUE_OK
                  Else
                    InputCheck% = InputCheck% + VALUE_BAD
                End If
              Else
                If Byte1$ Like "[0-9A-F][0-9A-F]" And Byte2$ Like "[0-9A-F][0-9A-F]" Then
                    InputCheck% = InputCheck% + DIGITS_OK
                    HexVal%    = Val( "&H" & SearchString$ )
                    If HexVal% > 255 And HexVal% < 7936 Then
                        CharacterName$ = "Sorry, the character at this code point is not included in this index."
                        InputCheck% = InputCheck% + VALUE_OK
                      Else
                        InputCheck%    = InputCheck% + VALUE_BAD
                    End If
                  Else
                    InputCheck% = InputCheck% + DIGITS_BAD
                    InputCheck% = InputCheck% + VALUE_BAD
                End If
            End If
          Else
            InputCheck% = InputCheck% + DIGITS_BAD
        End If
        Select Case InputCheck%
          Case DIGITS_OK + VALUE_OK '2
            If DecVal% > 0 Then
                Select Case DOMAIN
                  Case "O"
                    MsgBox "OCLC-MARC character at code point " & SearchString$ & " = " & CharacterName$ & " (not defined in MARC-8)", INFORMATION_MESSAGE, WaltsMacros$
                  Case "B"
                    MsgBox "MARC character at code point " & SearchString$ & " = " & CharacterName$, INFORMATION_MESSAGE, WaltsMacros$
                  Case "8"
                    MsgBox "Code point " & SearchString$ & " is not defined in OCLC-MARC. In MARC-8, code point " & SearchString$ & " = " & CharacterName$, INFORMATION_MESSAGE, WaltsMacros$
                  Case "N"
                    MsgBox "Code point " & SearchString$ & " is not defined in MARC.", INFORMATION_MESSAGE, WaltsMacros$
                End Select
              Else
                MsgBox "Unicode character at code point " & SearchString$ & " = " & CharacterName$, INFORMATION_MESSAGE, WaltsMacros$
            End If
            DlgText    "SearchBox",    ""
          Case DIGITS_OK + VALUE_BAD  '4
            MsgBox InputWarning$, WARNING_MESSAGE, WaltsMacros$
            DlgText    "SearchBox",    ""
          Case 3
            MsgBox "Case 3"
          Case 4
            MsgBox "Case 4"
        End Select
    End If
    Dialog1ControlFunction = KEEP_DLG_OPEN

End Select

End Function

'****************************************************************************************

Function Dialog2ControlFunction( Id$, Action%, SVal& )

If Action% = INITIALIZE Then
    DlgVisible "Cancel",       INVISIBLE
End If

End Function
'2124109548
'
'Macro name: ShowCharacterCodes
'Macro book: C:\Users\wnickeson.UR\AppData\Roaming\OCLC\Connex\Macros\MacroTools.mbk
'Saved: 8/22/2023 10:05:18 AM using "MacroBookInspector" macro by Walter F. Nickeson.
