'MacroName:MergeFields.2024.07
'MacroDescription:Merges two consecutive fields in a bibliographic record.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
' https://orcid.org/0000-0003-0484-6938
'
' Last updated: 2 August 2024.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: This macro combines two consecutive variable fields in a bibliographic
' record, such as when contents notes have been divided into several fields and you want
' them to be in only one. Click anywhere in the first field to be merged and run the
' macro. It combines that field with the field immediately following, and the resulting
' merged field replaces the first one, keeping its tag and indicators. The second field
' is deleted.
'
' Subfield coding in both fields is preserved. This means that if the first subfield of
' the second field is subfield $a (which Connexion normally does not display), and the
' last subfield of the first field is something else, the macro adds "$a" at the head of
' the information in the second field. If the merged fields are contents notes (tag 505),
' the content of the two fields will be separated by the ISBD dash of space-hyphen-hyphen
' space. Otherwise, the content of the merged fields will be separated by a space. No
' information is lost in the merge except for the tag and indicators of the second field.
'
' The macro always asks for confirmation before proceeding. If the two fields have the
' same tag, the default option is to go ahead, but if their tags differ, the default
' option is to cancel the macro. No claim can be made about the validity of the new field
' resulting from the merge, especially if two different types of fields are combined!
'
' The macro can't merge fields containing non-Latin script. It also can't tell if the
' characters in the field are properly encoded as MARC-8, so it is possible that some
' characters will get mangled in processing. Use my macro "Decompose" to correct the
' encoding in the fields to be merged so the results will be as expected.
'
' The limit of the length of a variable field in MARC is 9,999 characters (strictly
' speaking, octets). The macro won't merge the two fields if their combined length
' exceeds that limit.
'****************************************************************************************

Option Explicit

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE     As Integer = 16
Const MSGBOX_RETURN_CANCEL As Integer = 2

Dim DELIMITER   As String*1  : DELIMITER    = Chr$( 223 )
Dim DELIMITER_A As String*2  : DELIMITER_A  = DELIMITER & "a"

Dim ButtonSet%
Dim Field1$
Dim Field1Row%
Dim Field1Tag$
Dim Field2$
Dim Field2Tag$
Dim LastSubfieldCodeField1$
Dim LenField1%
Dim LenMergedFields%
Dim MergedFields$
Dim MergeQuery$
Dim Start%
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] Extras2:MergeFields"

Dim p As Integer

' First, make sure a bibliographic record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

Field1Row% = CS.CursorRow

If CS.GetField( "...", Field1Row%, Field1$ ) Then
    If Field1$ = "Data contains non-latin script" Then
        MsgBox "Sorry, this macro works only with fields in Latin script.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
      Else
        LenField1%  = Len( Field1$ )
        Field1Tag$ = Left$( Field1$, 3 )

' Find the last subfield code in the first field. If it's not subfield $a, then "$a" will
' be added to the beginning of the next field in the merge, unless the first subfield in
' the second field is explicitly coded as something other than $a.

        Start% = 1
        Do
          p = InStr( Start%, Field1$, DELIMITER )
          If p > 0 Then
              LastSubfieldCodeField1$ = Mid$( Field1$, p + 1, 1 )
            Else
              If Start% = 1 Then
                  LastSubfieldCodeField1$ = DELIMITER_A
              End If
          End If
          Start% = p + 1
        Loop Until p = 0
    End If

    If CS.GetField( "...", Field1Row% + 1, Field2$ ) Then
        If Field2$ = "Data contains non-latin script" Then
            MsgBox "Sorry, this macro works only with fields in Latin script.", CRITICAL_MESSAGE, WaltsMacros$
            Exit Sub
        End If
        If Len( Field2$ ) - 5 + LenField1% > 9999 Then
            MsgBox "The size of the two fields combined will exceed the MARC limit of 9,999 characters! Macro exiting.", CRITICAL_MESSAGE, WaltsMacros$
            Exit Sub
        End If
        Field2Tag$ = Left$( Field2$, 3 )
        If Mid$( Field2$, 6, 1 ) <> DELIMITER Then
            If LastSubfieldCodeField1$ = DELIMITER_A Then
                Field2$ = Mid$( Field2$, 6 )
              Else
                Field2$ = DELIMITER_A & " " & Mid$( Field2$, 6 )
            End If
          Else
            Field2$ = Mid$( Field2$, 6 )
        End If
        If Field1Tag$ = Field2Tag$ Then
            MergeQuery$ = "Merge this " & Field1Tag$ & " field with the following " & Field2Tag$ & " field?"
            ButtonSet%  = 1 + 32        'OK, Cancel + Warning Query
          Else
            MergeQuery$ = "Do you really want to merge this " & Field1Tag$ & " with the next " & Field2Tag$ & " field?"
            ButtonSet%  = 1 + 32 + 256  'OK, Cancel + Warning Query + Second button default
        End If
        If MsgBox( MergeQuery, ButtonSet%, WaltsMacros$ ) = MSGBOX_RETURN_CANCEL Then
            Exit Sub
          Else
            If Field1Tag$ = "505" and Field2Tag$ = "505" Then
                If Right$( Trim$( Field1$ ), 3 ) <> " --" Then
                    Field1$ = Field1$ & " -- "
                End If
             End If
             MergedFields$ = Field1$ & " " & Field2$
        End If
    End If
End If

' Replace the original first field with the new field containing all the merged fields.

If CS.SetFieldLine( Field1Row%, MergedFields$ ) = FALSE Then
    MsgBox "Sorry, something went wrong when trying to set the new field.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Delete the second field.

If CS.DeleteFieldLine( Field1Row% + 1 ) = FALSE Then
    MsgBox "Sorry, something went wrong when trying to delete the merged field.", CRITICAL_MESSAGE, WaltsMacros$
End If

CS.CursorRow = Field1Row%

End Sub
'1767248
