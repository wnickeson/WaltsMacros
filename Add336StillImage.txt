' MacroName:Add336StillImage.2025.01
' MacroDescription:Adds a 336 field for "still image" to bibliographic records for other
' than visual materials.
'
' This macro was written by Walter F. Nickeson and last updated 3 May 2025.
' It was developed in Connexion client 3.1 running in Windows 11 Enterprise and 64-bit
' Windows 10 Pro.
' Walt's macros for the Connexion client: https://github.com/wnickeson/WaltsMacros
' wfnickeson@zohomail.com
'
' Copyright 2025 Walter F. Nickeson.
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this
' software and associated documentation files (the "Software"), to deal in the Software
' without restriction, including without limitation the rights to use, copy, modify,
' merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
' permit persons to whom the Software is furnished to do so, subject to the following
' conditions:
'
' The above copyright notice and this permission notice shall be included in all copies
' or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
' INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
' PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
' HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
' THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'
'****************************************************************************************
' How it works: Run this macro while viewing a bibliographic record to quickly add a 336
' field for "still image" with subfields $b "sti" and $2 "rdacontent". Of course, this
' makes sense only for certain types of material. These are the broad formats for which
' the macro will add the 336 field: Language material ("Type" codes "a", "s", and "t"),
' notated music ("c" and "d"), cartographic material ("e" and "f"), kits ("o"), and
' mixed materials ("p"). For material whose description includes use of field 300,
' subfield $b, or the fixed field element "Ills", the macro checks for appropriate
' content in those places indicating the presence of illustrations, and if there is none,
' displays a warning.
'****************************************************************************************

Option Explicit

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE  As Integer = 16
Const DISPLAY_FF_AT_TOP As Integer = 1
Const WARNING_MESSAGE   As Integer = 48

Dim DELIMITER As String*1    : DELIMITER          = Chr$( 223 )

Dim BibLevel$
Dim FieldData$
Dim Illustrations$
Dim MessageText$
Dim MessageType%
Dim PosFF%
Dim Sequence%
Dim TypeOfRecord$
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$       = "[Walt's macros] Extras2:Add336StillImage"

Dim ChangedFFView
Dim FFIlls
Dim FoundField
Dim IllustrationsIn300       : IllustrationsIn300 = FALSE
Dim IllustrationsInFF

Dim i As Integer

Dim IllusTerms( 14 ) As String

' Proceed only if a bibliographic record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MessageText$ = "Sorry, this macro works only in bibliographic records."
    MessageType% = CRITICAL_MESSAGE
    GoTo DisplayMessage:
End Select

' Proceed further only if the record is in English.

If CS.GetField( "040", 1, FieldData$ ) Then
    If InStr( FieldData$, DELIMITER & "b" ) > 0 Then
        If InStr( FieldData$, "b eng" ) = FALSE Then
            MessageText$ = "Sorry, this macro can add a 336 field to only English-language records."
            MessageType% = CRITICAL_MESSAGE
            GoTo DisplayMessage:
        End If
    End If
End If

' Get some fixed field values. The macro will warn if the fixed field element "Ills" is
' not coded for illustrations (if the element is present, which it will not be for some
' types of printed material).

PosFF% = CS.FixedFieldPosition
If PosFF% <> DISPLAY_FF_AT_TOP Then
    CS.FixedFieldPosition = DISPLAY_FF_AT_TOP
    ChangedFFView         = TRUE
End If
If CS.GetFixedField( "Type", TypeOfRecord$ ) Then
    If TypeOfRecord$ Like "[at]" Then
        If CS.GetFixedField( "BLvl", BibLevel$ ) Then
            If BibLevel$ Like "[acdm]" Then
                FFIlls = TRUE
                If CS.GetFixedField( "Ills", Illustrations$ ) = FALSE Then
                    MessageText$ = "Sorry, this macro could not get some fixed field values."
                    MessageType% = CRITICAL_MESSAGE
                    GoTo DisplayMessage:
                End If
              Else
                FFIlls = FALSE
            End If
        End If
      Else
        If TypeOfRecord$ Like "[!acdefopt]" Then
            MessageText$ = "Sorry, this macro will not work on this type of record."
            MessageType% = CRITICAL_MESSAGE
            GoTo DisplayMessage:
        End If
    End If
 Else
    MessageText$ = "Sorry, this macro could not get some fixed field values."
    MessageType% = CRITICAL_MESSAGE
    GoTo DisplayMessage:
End If

If ChangedFFView Then CS.FixedFieldPosition = PosFF%

If Illustrations$ <> "" Then
    IllustrationsInFF = TRUE
  Else
    IllustrationsInFF = FALSE
End If

' Check for the presence of illustrations in the 300 field by looking for the text string
' "ill" (which means, of course, that other kinds of illustrations present in the record,
' like maps and portraits, won't show up).

If CS.GetField( "300", 1, FieldData$ ) Then
    If TypeOfRecord$ Like "[at]" Then
        Sequence% = 2
        IllusTerms( 0  ) = "ill"
        IllusTerms( 1  ) = "map"
        IllusTerms( 2  ) = "port"
        IllusTerms( 3  ) = "char"
        IllusTerms( 4  ) = "plan"
        IllusTerms( 5  ) = "plat"
        IllusTerms( 6  ) = "musi"
        IllusTerms( 7  ) = "facs"
        IllusTerms( 8  ) = "coat"
        IllusTerms( 9  ) = "gene"
        IllusTerms( 10 ) = "form"
        IllusTerms( 11 ) = "samp"
        IllusTerms( 12 ) = "phon"
        IllusTerms( 13 ) = "phot"
        IllusTerms( 14 ) = "illum"
        For i = 0 To 14
          If InStr( FieldData$, IllusTerms( i ) ) Then
              IllustrationsIn300 = TRUE
              Exit For
          End If
        Next i
      Else
        Sequence% = 1
    End If
End If

i = 1
Do
  FoundField = CS.GetField( "336", i, FieldData$ )
  If FoundField Then
      If InStr( FieldData$, "still image" ) > 0 Or InStr( FieldData$, "b sti" ) > 0 Then
          MessageText$ = "A 336 field for still images is already present!"
          MessageType% = WARNING_MESSAGE
          GoTo DisplayMessage:
      End If
  End If
  i = i + 1
Loop Until FoundField = FALSE

' Add the field, and warn if the fixed field needs adjusting.

If CS.AddField( Sequence%, "336  still image " & DELIMITER & "b sti " & DELIMITER & "2 rdacontent" ) = FALSE Then
    MessageText$ = "Sorry, the macro could not add a 336 field."
    MessageType% = CRITICAL_MESSAGE
    GoTo DisplayMessage:
  Else
    If TypeOfRecord$ Like "[at]" Then
        If FFIlls Then
            If IllustrationsInFF = FALSE And IllustrationsIn300 = FALSE Then
                MessageText$ = "Fixed field and 300 field do not show illustrations are present."
                MessageType% = WARNING_MESSAGE
              ElseIf IllustrationsInFF = TRUE And IllustrationsIn300 = FALSE Then
                MessageText$ = "300 field does not show illustrations are present."
                MessageType% = WARNING_MESSAGE
              ElseIf IllustrationsInFF = FALSE And IllustrationsIn300 = TRUE Then
                MessageText$ = "Fixed field does not show illustrations are present."
                MessageType% = WARNING_MESSAGE
            End If
        End If
    End If
End If

DisplayMessage:

If MessageText$ <> "" Then
    MsgBox MessageText$, MessageType%, WaltsMacros$
End If

End Sub
'2248383
