' MacroName:PasteInverted.2025.01
' MacroDescription:Inverts a two- or three-word text selection on the Windows Clipboard
' for pasting into a bibliographic record, by simply putting the last word first.
'
' This macro was written by Walter F. Nickeson and last updated 3 May 2025.
' It was developed in Connexion client 3.1 running in Windows 11 Enterprise and 64-bit
' Windows 10 Pro.
' Walt's macros for the Connexion client: https://github.com/wnickeson/WaltsMacros
' wfnickeson@zohomail.com
'
' Copyright 2025 Walter F. Nickeson.
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this
' software and associated documentation files (the "Software"), to deal in the Software
' without restriction, including without limitation the rights to use, copy, modify,
' merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
' permit persons to whom the Software is furnished to do so, subject to the following
' conditions:
'
' The above copyright notice and this permission notice shall be included in all copies
' or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
' INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
' PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
' HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
' THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'
'****************************************************************************************
' How it works: This macro takes text in a record copied to the Windows Clipboard and
' pastes it in as a name heading in a 1XX field. If the selection is composed of only two
' or three words, it offers the option of inverting the selection (by putting the last
' word first) for pasting in as a personal name; if the selection consists of a single
' word, or of more than three words, no inversion is done. Intended primarily to
' complement the macro "BrowseAuthority," it covers those situations in which the name
' selected for browsing by that macro matched no authority record, and the heading must
' therefore contain that name in the form given. ("BrowseAuthority" puts the selection it
' uses for browsing on the Clipboard, so when using this macro after "BrowseAuthority,"
' there is no need for an additional Copy command.) After returning to the bibliographic
' record from the unsuccessful browse, run this macro to paste the selection into the
' record as a 1XX field. It assumes a selection of two or three words is a personal name
' and asks if the selection should be inverted before pasting. The name can of course be
' pasted in uninverted, if desired.
'****************************************************************************************

Option Explicit

Declare Function Dialog1ControlFunction( Id$, Action%, SValue& )

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE     As Integer = 16
Const DLG_STATEMENT_CANCEL As Integer = 102

Dim Heading$
Dim NameCopied$
Dim NameInverted$
Dim NameRegular$
Dim Start%                   : Start%        = 1
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$  = "[Walt's macros] Extras2:PasteInverted"
Dim WordCount%               : WordCount%    = 1

Dim FieldAdded               : FieldAdded    = TRUE
Dim Invert                   : Invert        = TRUE

Dim p As Integer

' First, make sure a bibliographic record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' Then get the text on the Clipboard.

NameCopied$ = Trim$( Clipboard.GetText( ) )
If NameCopied$ = "" Then
    Exit Sub
  Else
    NameRegular$ = NameCopied$
End If

' Count the words in the string by counting spaces. The position of the last space found
' will be used for inverting a phrase.

Do
  p = InStr( Start%, NameCopied$, " " )
  If p > 0 Then
      Start% = p + 1
      WordCount% = WordCount% + 1
  End If
Loop Until p = 0

NameInverted$ = Trim$( Mid$( NameCopied$, Start% ) ) & ", " & Trim$( Left$( NameCopied$, Start% - 1 ) )

' If the selection is two or three words, check to see if it should be inverted before
' going onto the Clipboard.

If WordCount% = 1 Or WordCount% > 3 Then

    Invert = FALSE

  Else

    Begin Dialog Dialog1Definition  178, 124, WaltsMacros$, .Dialog1ControlFunction
      Text           28,  12, 124,  14, "Paste Clipboard selection into record in ..."
      ButtonGroup                                                                       .Choice
       PushButton    44,  32,  90,  16, "&Inverted form (100 field)"
       PushButton    44,  60,  90,  16, "&Direct order (110 field)"
       PushButton    44,  88,  90,  16, "&Quit, dont paste"
      CancelButton    1,   1,   1,   1,                                                 .Cancel
    End Dialog
    Dim Dialog1 As Dialog1Definition
    On Error Resume Next
    Dialog Dialog1
    If Err = DLG_STATEMENT_CANCEL Then Exit Sub

    Select Case Dialog1.Choice
      Case 0
        Invert = TRUE
      Case 1
        Invert = FALSE
      Case 2
        Exit Sub
    End Select
End If

If Invert = FALSE Then
    Heading$ = "1102 " & NameRegular$
  Else
    Heading$ = "1001 " & NameInverted$
End If

FieldAdded = CS.AddField( 1, Heading$ )
If FieldAdded = FALSE Then MsgBox "Sorry, could not add heading.", CRITICAL_MESSAGE, WaltsMacros$

End Sub

'****************************************************************************************

Function Dialog1ControlFunction( Id$, Action%, SValue& )

Const INVISIBLE As Integer = 0

DlgVisible "Cancel", INVISIBLE

End Function
'1626284
