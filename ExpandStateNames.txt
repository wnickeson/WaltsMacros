' MacroName:ExpandStateNames.2025.01
' MacroDescription:Expands abbreviations and postal codes of U.S. states to their full
' forms.
'
' This macro was written by Walter F. Nickeson and last updated 3 May 2025.
' It was developed in Connexion client 3.1 running in Windows 11 Enterprise and 64-bit
' Windows 10 Pro.
' Walt's macros for the Connexion client: https://github.com/wnickeson/WaltsMacros
' wfnickeson@zohomail.com
'
' Copyright 2025 Walter F. Nickeson.
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this
' software and associated documentation files (the "Software"), to deal in the Software
' without restriction, including without limitation the rights to use, copy, modify,
' merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
' permit persons to whom the Software is furnished to do so, subject to the following
' conditions:
'
' The above copyright notice and this permission notice shall be included in all copies
' or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
' INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
' PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
' HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
' CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
' THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'
'****************************************************************************************
' How it works: In a bibliographic record, put the cursor in, or immediately before or
' after, an abbreviation or postal code for a U.S. state. Run the macro. It expands the
' abbreviation or postal code to the full form, and puts the cursor at the end of the
' new, full form. Case is important: an abbreviation without capital letters (that is, a
' non-standard form) or a postal code in lower case will make the macro fail.
'****************************************************************************************

Option Explicit

Declare Sub FillArray

Global Const ABBREVIATION As Integer = 1
Global Const FULL_NAME    As Integer = 0
Global Const POSTAL_CODE  As Integer = 2
Global Const STATE_LIST   As Integer = 54

Global States() As String

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE As Integer = 16

Dim DOUBLE_QUOTE As String*1 : DOUBLE_QUOTE = Chr$( 034 )

Dim CandidateName$
Dim CharT$
Dim Col%
Dim CharactersFollowing$
Dim CharactersPreceding$
Dim FieldData$
Dim FirstHalf$
Dim FullStateName$
Dim RemainderOfField$
Dim Row%
Dim SecondHalf$
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$ = "[Walt's macros] Extras2:ExpandStateNames"

Dim Match                    : Match        = FALSE

Dim i As Integer, p As Integer, q As Integer

' First, make sure a bibliographic record is displayed.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 36
    MsgBox "Sorry, this macro works only in a bibliographic record!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' Then get the cursor location.

Row% = CS.CursorRow
Col% = CS.CursorColumn

' A cursor position in the fixed field, or in the tag or indicator cells, means there is
' nothing for the macro to do.

If Col% = 0 Then
    MsgBox "Please check the cursor location. It must be in an abbreviation or postal code in one of the variable fields of a record.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
  ElseIf Col% < 6 Then
    MsgBox "Please check the cursor location. It must be in an abbreviation or postal code within this field.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' If the cursor is in a valid position in a bibliographic record, proceed by filling the
' array to look up the full name from the abbreviation or postal code.

FillArray

' Then get the content of the row in which the cursor is placed.

If CS.GetField( "...", Row%, FieldData$ ) = FALSE Then
    MsgBox "Sorry, this macro unexpectedly failed.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Begin the actual work of the macro by stepping backward from the cursor position to the
' first blank space. In most cases, that marks the beginning of the text.

For i = Col% To 1 Step -1
  CharT$ = Mid$( FieldData$, i, 1 )
  If CharT$ = " " Then
      If i <> Col% Then
          Exit For
      End If
  End If
Next i

' Look ahead to the next blank space. The text between the two blank spaces will be the
' string the macro will work on. If the abbreviation to be expanded is at the end of the
' field, the blank space just identified will mark what follows as the last word of the
' field, and that will be the subject of expansion.

p = i + 1
q = InStr( p, FieldData$, " " )
If q > 0 Then
    CandidateName$ = Trim$( Mid$( FieldData$, p, q - p ) )
    RemainderOfField$ = Mid$( FieldData$, q )
  Else
    CandidateName$ = Trim$( Mid$( FieldData$, p ) )
    RemainderOfField$ = ""
End If

' Isolate the alphabetic characters from any other characters (usually punctuation, like
' brackets) that might need to be retained when the abbreviation is expanded.

Do
  CharT$ = Left$( CandidateName$, 1 )
  If CharT$ Like "[!A-Za-z.]" Then
      CharactersPreceding$ = CharactersPreceding$ & CharT$
      CandidateName$   = Mid$( CandidateName$, 2 )
    Else
      Exit Do
  End If
Loop Until CandidateName$ = ""

Do
  CharT$ = Right$( CandidateName$, 1 )
  If CharT$ Like "[!A-Za-z.]" Then
      CharactersFollowing$ = CharT$ & CharactersFollowing$
      CandidateName$   = Left$( CandidateName$, Len( CandidateName$ ) - 1 )
    Else
      Exit Do
  End If
Loop Until CandidateName$ = ""

' The isolated word may be part of an abbreviation in which the parts of the abbreviation
' are separated by a space. For those instances, which should be rare, some additional
' searching may be necessary. Try looking ahead or behind to see if the next or preceding
' letters complete the abbreviation.

Select Case CandidateName$
  Case "N."
    SecondHalf$ = Mid$( FieldData$, q + 1, 2 )
    If SecondHalf$ Like "[CDHJMY]." Then
        CandidateName$ = CandidateName$ & SecondHalf$
        q = q + 3
    End If
  Case "R."
    SecondHalf$ = Mid$( FieldData$, q + 1, 2 )
    If SecondHalf$ = "I." Then
        CandidateName$ = CandidateName$ & SecondHalf$
        q = q + 3
    End If
  Case "S."
    SecondHalf$ = Mid$( FieldData$, q + 1, 2 )
    If SecondHalf$ Like "[CD]." Then
        CandidateName$ = CandidateName$ & SecondHalf$
        q = q + 3
    End If
  Case "W."
    SecondHalf$ = Mid$( FieldData$, q + 1, 3 )
    If SecondHalf$ = "Va." Then
        CandidateName$ = CandidateName$ & SecondHalf$
        q = q + 3
    End If
  Case "C."
    FirstHalf$ = Mid$( FieldData$, p - 3, 2 )
    If FirstHalf$ Like "[DNS]." Then
        CandidateName$ = FirstHalf$ & CandidateName$
        p = p - 3
    End If
  Case "H.", "J.", "M.", "Y."
    FirstHalf$ = Mid$( FieldData$, p - 3, 2 )
    If FirstHalf$ = "N." Then
        CandidateName$ = FirstHalf$ & CandidateName$
        p = p - 3
    End If
  Case "I."
    FirstHalf$ = Mid$( FieldData$, p - 3, 2 )
    If FirstHalf$ = "R." Then
        CandidateName$ = FirstHalf$ & CandidateName$
        p = p - 3
    End If
  Case "D."
    SecondHalf$ = Mid$( FieldData$, q + 1, 2 )
    If SecondHalf$ = "C." Then
        CandidateName$ = CandidateName$ & SecondHalf$
        q = q + 3
      Else
        FirstHalf$ = Mid$( FieldData$, p - 3, 2 )
        If FirstHalf$ Like "[NS]." Then
            CandidateName$ = FirstHalf$ & CandidateName$
            p = p - 3
        End If
    End If

End Select

' With a text string in hand, look up the full form, first by abbreviation, next by
' postal code.

For i = 0 To STATE_LIST
  If States( ABBREVIATION, i ) = CandidateName$ Then
      Match = TRUE
      Exit For
    Else
      If States( POSTAL_CODE, i ) = CandidateName$ Then
          Match = TRUE
          Exit For
        Else
          Match = FALSE
      End If
  End If
Next i

' If no match is found, quit the macro.

If Match = FALSE Then
    MsgBox "Sorry, no matching state name was found for " & DOUBLE_QUOTE & CandidateName$ & DOUBLE_QUOTE & _
           ". Check the cursor placement or the validity of the abbreviation or code.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Otherwise, replace the field, substituting the full name of the state for the
' abbreviation. Add back any characters found immediately next to the initial string.

FullStateName$ = States( FULL_NAME, i )

FieldData$ = Left$( FieldData$, p - 1 ) & CharactersPreceding$ & FullStateName$ & CharactersFollowing$ & RemainderOfField$

If CS.SetFieldLine( Row%, FieldData$ ) = FALSE Then
    MsgBox "Sorry, the macro failed to insert the full state name.", CRITICAL_MESSAGE, WaltsMacros$
End If

CS.CursorColumn = p + Len( CharactersPreceding$ & FullStateName$ & CharactersFollowing$ )

End Sub

'****************************************************************************************

Sub FillArray

' Sources of abbreviations differ slightly; this list includes abbrevations given in the
' 1949 Rules for descriptive cataloging in the Library of Congress, and in the 1973 U.S.
' Government Printing Office Style Manual.

ReDim States( 2, STATE_LIST )

States( FULL_NAME, 0  ) = "Alabama"              : States( ABBREVIATION, 0  ) = "Ala."   : States( POSTAL_CODE, 0  ) = "AL"
States( FULL_NAME, 1  ) = "Alaska"               : States( ABBREVIATION, 1  ) = "Alaska" : States( POSTAL_CODE, 1  ) = "AK"
States( FULL_NAME, 2  ) = "Arizona"              : States( ABBREVIATION, 2  ) = "Ariz."  : States( POSTAL_CODE, 2  ) = "AZ"
States( FULL_NAME, 3  ) = "Arkansas"             : States( ABBREVIATION, 3  ) = "Ark."   : States( POSTAL_CODE, 3  ) = "AR"
States( FULL_NAME, 4  ) = "California"           : States( ABBREVIATION, 4  ) = "Calif." : States( POSTAL_CODE, 4  ) = "CA"
States( FULL_NAME, 5  ) = "Colorado"             : States( ABBREVIATION, 5  ) = "Colo."  : States( POSTAL_CODE, 5  ) = "CO"
States( FULL_NAME, 6  ) = "Connecticut"          : States( ABBREVIATION, 6  ) = "Conn."  : States( POSTAL_CODE, 6  ) = "CT"
States( FULL_NAME, 7  ) = "Delaware"             : States( ABBREVIATION, 7  ) = "Del."   : States( POSTAL_CODE, 7  ) = "DE"
States( FULL_NAME, 8  ) = "District of Columbia" : States( ABBREVIATION, 8  ) = "D.C."   : States( POSTAL_CODE, 8  ) = "DC"
States( FULL_NAME, 9  ) = "Florida"              : States( ABBREVIATION, 9  ) = "Fla."   : States( POSTAL_CODE, 9  ) = "FL"
States( FULL_NAME, 10 ) = "Georgia"              : States( ABBREVIATION, 10 ) = "Ga."    : States( POSTAL_CODE, 10 ) = "GA"
States( FULL_NAME, 11 ) = "Hawaii"               : States( ABBREVIATION, 11 ) = "Hawaii" : States( POSTAL_CODE, 11 ) = "HI"
States( FULL_NAME, 12 ) = "Idaho"                : States( ABBREVIATION, 12 ) = "Idaho"  : States( POSTAL_CODE, 12 ) = "ID"
States( FULL_NAME, 13 ) = "Illinois"             : States( ABBREVIATION, 13 ) = "Ill."   : States( POSTAL_CODE, 13 ) = "IL"
States( FULL_NAME, 14 ) = "Indiana"              : States( ABBREVIATION, 14 ) = "Ind."   : States( POSTAL_CODE, 14 ) = "IN"
States( FULL_NAME, 15 ) = "Iowa"                 : States( ABBREVIATION, 15 ) = "Iowa"   : States( POSTAL_CODE, 15 ) = "IA"
States( FULL_NAME, 16 ) = "Kansas"               : States( ABBREVIATION, 16 ) = "Kan."   : States( POSTAL_CODE, 16 ) = "KS"
States( FULL_NAME, 17 ) = "Kansas"               : States( ABBREVIATION, 17 ) = "Kans."  : States( POSTAL_CODE, 17 ) = "KS"
States( FULL_NAME, 18 ) = "Kentucky"             : States( ABBREVIATION, 18 ) = "Ky."    : States( POSTAL_CODE, 18 ) = "KY"
States( FULL_NAME, 19 ) = "Louisiana"            : States( ABBREVIATION, 19 ) = "La."    : States( POSTAL_CODE, 19 ) = "LA"
States( FULL_NAME, 20 ) = "Maine"                : States( ABBREVIATION, 20 ) = "Maine"  : States( POSTAL_CODE, 20 ) = "ME"
States( FULL_NAME, 21 ) = "Maine"                : States( ABBREVIATION, 21 ) = "Me."    : States( POSTAL_CODE, 21 ) = "ME"
States( FULL_NAME, 22 ) = "Maryland"             : States( ABBREVIATION, 22 ) = "Md."    : States( POSTAL_CODE, 22 ) = "MD"
States( FULL_NAME, 23 ) = "Massachusetts"        : States( ABBREVIATION, 23 ) = "Mass."  : States( POSTAL_CODE, 23 ) = "MA"
States( FULL_NAME, 24 ) = "Michigan"             : States( ABBREVIATION, 24 ) = "Mich."  : States( POSTAL_CODE, 24 ) = "MI"
States( FULL_NAME, 25 ) = "Minnesota"            : States( ABBREVIATION, 25 ) = "Minn."  : States( POSTAL_CODE, 25 ) = "MN"
States( FULL_NAME, 26 ) = "Mississippi"          : States( ABBREVIATION, 26 ) = "Miss."  : States( POSTAL_CODE, 26 ) = "MS"
States( FULL_NAME, 27 ) = "Missouri"             : States( ABBREVIATION, 27 ) = "Mo."    : States( POSTAL_CODE, 27 ) = "MO"
States( FULL_NAME, 28 ) = "Montana"              : States( ABBREVIATION, 28 ) = "Mont."  : States( POSTAL_CODE, 28 ) = "MT"
States( FULL_NAME, 29 ) = "Nebraska"             : States( ABBREVIATION, 29 ) = "Neb."   : States( POSTAL_CODE, 29 ) = "NE"
States( FULL_NAME, 30 ) = "Nebraska"             : States( ABBREVIATION, 30 ) = "Nebr."  : States( POSTAL_CODE, 30 ) = "NE"
States( FULL_NAME, 31 ) = "Nevada"               : States( ABBREVIATION, 31 ) = "Nev."   : States( POSTAL_CODE, 31 ) = "NV"
States( FULL_NAME, 32 ) = "New Hampshire"        : States( ABBREVIATION, 32 ) = "N.H."   : States( POSTAL_CODE, 32 ) = "NH"
States( FULL_NAME, 33 ) = "New Jersey"           : States( ABBREVIATION, 33 ) = "N.J."   : States( POSTAL_CODE, 33 ) = "NJ"
States( FULL_NAME, 34 ) = "New Mexico"           : States( ABBREVIATION, 34 ) = "N.M."   : States( POSTAL_CODE, 34 ) = "NM"
States( FULL_NAME, 35 ) = "New York"             : States( ABBREVIATION, 35 ) = "N.Y."   : States( POSTAL_CODE, 35 ) = "NY"
States( FULL_NAME, 36 ) = "North Carolina"       : States( ABBREVIATION, 36 ) = "N.C."   : States( POSTAL_CODE, 36 ) = "NC"
States( FULL_NAME, 37 ) = "North Dakota"         : States( ABBREVIATION, 37 ) = "N.D."   : States( POSTAL_CODE, 37 ) = "ND"
States( FULL_NAME, 38 ) = "Ohio"                 : States( ABBREVIATION, 38 ) = "Ohio"   : States( POSTAL_CODE, 38 ) = "OH"
States( FULL_NAME, 39 ) = "Oklahoma"             : States( ABBREVIATION, 39 ) = "Okla."  : States( POSTAL_CODE, 39 ) = "OK"
States( FULL_NAME, 40 ) = "Oregon"               : States( ABBREVIATION, 40 ) = "Or."    : States( POSTAL_CODE, 40 ) = "OR"
States( FULL_NAME, 41 ) = "Oregon"               : States( ABBREVIATION, 41 ) = "Ore."   : States( POSTAL_CODE, 41 ) = "OR"
States( FULL_NAME, 42 ) = "Pennsylvania"         : States( ABBREVIATION, 42 ) = "Pa."    : States( POSTAL_CODE, 42 ) = "PA"
States( FULL_NAME, 43 ) = "Rhode Island"         : States( ABBREVIATION, 43 ) = "R.I."   : States( POSTAL_CODE, 43 ) = "RI"
States( FULL_NAME, 44 ) = "South Carolina"       : States( ABBREVIATION, 44 ) = "S.C."   : States( POSTAL_CODE, 44 ) = "SC"
States( FULL_NAME, 45 ) = "South Dakota"         : States( ABBREVIATION, 45 ) = "S.D."   : States( POSTAL_CODE, 45 ) = "SD"
States( FULL_NAME, 46 ) = "Tennessee"            : States( ABBREVIATION, 46 ) = "Tenn."  : States( POSTAL_CODE, 46 ) = "TN"
States( FULL_NAME, 47 ) = "Texas"                : States( ABBREVIATION, 47 ) = "Tex."   : States( POSTAL_CODE, 47 ) = "TX"
States( FULL_NAME, 48 ) = "Utah"                 : States( ABBREVIATION, 48 ) = "Utah"   : States( POSTAL_CODE, 48 ) = "UT"
States( FULL_NAME, 49 ) = "Vermont"              : States( ABBREVIATION, 49 ) = "Vt."    : States( POSTAL_CODE, 49 ) = "VT"
States( FULL_NAME, 50 ) = "Virginia"             : States( ABBREVIATION, 50 ) = "Va."    : States( POSTAL_CODE, 50 ) = "VA"
States( FULL_NAME, 51 ) = "Washington"           : States( ABBREVIATION, 51 ) = "Wash."  : States( POSTAL_CODE, 51 ) = "WA"
States( FULL_NAME, 52 ) = "West Virginia"        : States( ABBREVIATION, 52 ) = "W.Va."  : States( POSTAL_CODE, 52 ) = "WV"
States( FULL_NAME, 53 ) = "Wisconsin"            : States( ABBREVIATION, 53 ) = "Wis."   : States( POSTAL_CODE, 53 ) = "WI"
States( FULL_NAME, 54 ) = "Wyoming"              : States( ABBREVIATION, 54 ) = "Wyo."   : States( POSTAL_CODE, 54 ) = "WY"

End Sub
'33916735
