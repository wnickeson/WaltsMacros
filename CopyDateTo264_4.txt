'MacroName:CopyDateTo264_4.2024.01
'MacroDescription:Copies the date from a 264 #1 field to a 264 #4 field in a
' bibliographic RDA record, adding the appropriate symbol for copyright and updating the
' fixed field to include both dates.
'
' This macro was written by Walter F. Nickeson,
' University of Rochester, Rochester, NY
' wnickeson@library.rochester.edu
' https://orcid.org/0000-0003-0484-6938
'
' Last updated: 9 February 2024.
' Check for the latest versions of this and my other macros at
' https://github.com/wnickeson/WaltsMacros
' Please e-mail me with bug reports or to suggest improvements.
'
' This macro works for me with Connexion client 3.1 and Windows 11 Enterprise & 64-bit
' Windows 10 Pro, but no guarantees are promised or implied.
'
'****************************************************************************************
' How it works: Run the macro in a bibliographic record cataloged according to RDA to
' copy the date in a 264 1 field (publication statement) to a 264 4 field (copyright
' date). It prefixes this date with the standard copyright symbols "©" for manifestations
' other than sound recordings and "(p)" (unfortunately not properly displayable here in
' the Windows system font) for sound recordings. It also changes "DtSt" in the fixed
' field to "t" and adds the extracted date to Date 2.
'****************************************************************************************

Option Explicit

'****************************************************************************************

Sub Main

Dim CS As Object
On Error Resume Next
Set CS = GetObject( , "Connex.Client" )
On Error GoTo 0
If CS Is Nothing Then Set CS = CreateObject( "Connex.Client" )

Const CRITICAL_MESSAGE  As Integer = 16
Const DISPLAY_FF_AT_TOP As Integer = 1
Const WARNING_MESSAGE   As Integer = 48
Const WARNING_QUERY     As Integer = 32

Dim DELIMITER                : DELIMITER     = Chr$( 223 )
Dim RDA_TEST                 : RDA_TEST      = DELIMITER & "e rda"

Dim Char$
Dim Dates1$
Dim Dates2$
Dim Existing264_4$
Dim FieldData$
Dim Indicator$
Dim PosFF%
Dim PublicationDate$
Dim PublicationStatement$
Dim SubfieldC$
Dim TempString$
Dim TypeOfDate$
Dim TypeOfRecord$
Dim TypeOfWindow%
Dim WaltsMacros$             : WaltsMacros$  = "[Walt's macros] Extras1:CopyDateTo264_4"

Dim ChangedFFView            : ChangedFFView = FALSE
Dim FoundField               : FoundField    = FALSE
Dim GetFF
Dim Music

Dim i As Integer, p As Integer

' First, make sure that a bibliographic record is open.

TypeOfWindow% = CS.ItemType
Select Case TypeOfWindow%
  Case -1, 3 To 16, 18, 20 To 26
    MsgBox "Sorry, this macro works only in bibliographic records!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End Select

' Then make sure the record has been cataloged according to RDA. (Previous rules did not
' allow use of the copyright symbol, but OCLC has been systematically changing "c" to
' "©".)

If CS.GetField( "040", 1, FieldData$ ) Then
    If InStr( FieldData$, RDA_TEST ) = 0 Then
        MsgBox "Sorry, this macro works only in records cataloged according to RDA.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If
End If

' Get the date elements from the fixed field.

PosFF% = CS.FixedFieldPosition
If PosFF% <> DISPLAY_FF_AT_TOP Then CS.FixedFieldPosition = DISPLAY_FF_AT_TOP

GetFF = CS.GetFixedField( "DtSt", TypeOfDate$ )
GetFF = CS.GetFixedField( "Dates", Dates1$ )
GetFF = CS.GetFixedField( ",", Dates2$ )
If CS.GetFixedField( "Type", TypeOfRecord$ ) Then
    If TypeOfRecord$ Like "[ij]" Then
        Music = TRUE
      Else
        Music = FALSE
    End If
End If

If ChangedFFView Then CS.FixedFieldPosition = PosFF%

' Go through all the 264 fields on the record, looking for a publication statement in
' 264 1 and an existing notice of copyright in 264 4. Keep only the first instance of
' either.

i = 1
Do
  FoundField = CS.GetField$( "264", i, FieldData$ )
  If FoundField Then
      Indicator$ = Mid$( FieldData$, 5, 1 )
      Select Case Indicator$
        Case "1"
          If PublicationStatement$ = "" Then
              PublicationStatement$ = FieldData$
          End If
        Case "4"
          If Existing264_4$ = "" Then
              Existing264_4$ = FieldData$
          End If
      End Select
  End If
  i = i + 1
Loop Until FoundField = FALSE

' If there is no publication statement there is nothing from which a copyright date can
' be inferred and extracted. Also, if there already is a copyright notice, the macro
' won't proceed.

If PublicationStatement$ = "" And Existing264_4$ = "" Then
    MsgBox "This record doesn't contain a publication statement from which it can infer a copyright date! Macro exiting.", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
  ElseIf Existing264_4$ <> "" Then
    MsgBox "This record already has a copyright date in 264!", CRITICAL_MESSAGE, WaltsMacros$
    Exit Sub
End If

' Now get a 4-digit date from the 264 field. Take the first four digits found and assume
' they comprise the date. Test that the resulting figure is between 1800 and 2100; dates
' before this range are incorrect, and a number after this range is clearly not a
' publication date. Brackets are irrelevant.

p = InStr( PublicationStatement$, DELIMITER & "c" )
If p <> 0 Then
    SubfieldC$ = Trim$( Mid$( PublicationStatement$, p + 2 ) )
    For i = 1 To Len( SubfieldC$ )
      Char$ = Mid$( SubfieldC$, i, 1 )
      If Char$ Like "[0-9]" Then
          TempString$ = TempString$ & Char$
          If Len( TempString$ ) = 4 Then
              If Val( TempString$ ) > 1800 and Val( TempString$ ) < 2100 Then
                  PublicationDate$ = TempString$
                  If Music Then
                      TempString$ = "264 4" & DELIMITER & "c " & Chr$( 203 ) & PublicationDate$
                    Else
                      TempString$ = "264 4" & DELIMITER & "c " & Chr$( 202 ) & PublicationDate$
                  End If
                  If TempString$ = Existing264_4$ Then
                      MsgBox "This record already has an appropriate 264 field!", CRITICAL_MESSAGE, WaltsMacros$
                    Else
                      If CS.AddField( 9, TempString$ ) = FALSE Then
                          MsgBox "Sorry, this macro can't add a copyright date.", CRITICAL_MESSAGE, WaltsMacros$
                          Exit Sub
                        Else
                          CS.HomeRecord

' If a 264 field is added, adjust the fixed field, replacing the appropriate elements.

                          If Dates1$ <> PublicationDate$ Then
                              MsgBox "The date in 264 doesn't match the date in the fixed field!", WARNING_MESSAGE, WaltsMacros$
                          End If
                          If TypeOfDate$ = "s" Then
                              If TypeOfRecord$ Like "[!ij]" Then
                                  If CS.SetFixedField( "DtSt", "t" ) Then
                                  End If
                                  If Dates2$ = "" Then
                                      If CS.SetFixedField( ",", PublicationDate$ ) Then
                                      End If
                                  End If
                              End If
                          End If
                      End If
                  End If
                  Exit Sub
              End If
          End If
      End If
    Next i
    If TempString$ = "" Or Len( TempString$ ) <> 4 Then
        MsgBox "Sorry, this macro can't add a copyright date.", CRITICAL_MESSAGE, WaltsMacros$
        Exit Sub
    End If
End If

End Sub
'2037785
